{"ast":null,"code":"import * as axios from \"axios\";\nconst instance = axios.create({\n  withCredentials: true,\n  baseURL: 'https://social-network.samuraijs.com/api/1.0/',\n  headers: {\n    \"API-KEY\": \"1b0fde3a-3c72-4f1a-8a92-66508a392dc3\"\n  }\n});\nexport const API = {\n  async getUsers(currentPage = 1, pageSize = 10) {\n    const response = await instance.get(\"users?page=\".concat(currentPage, \"&count=\").concat(pageSize));\n    return response.data;\n  },\n\n  async AuthMe() {\n    const response = await instance.get(\"auth/me\");\n    return response.data;\n  },\n\n  async getProfile(ProfileID = 2) {\n    const response = await instance.get(\"profile/\" + ProfileID);\n    return response.data;\n  },\n\n  async DelSub(userId) {\n    const response = await instance.delete(\"follow/\".concat(userId));\n    return response.data;\n  },\n\n  async AddSub(userId) {\n    const response = await instance.post(\"follow/\".concat(userId));\n    return response.data;\n  },\n\n  async getProfileStatus(ProfileID = 2) {\n    const response = await instance.get(\"profile/status/\" + ProfileID);\n    return response.data;\n  },\n\n  async setProfileStatus(status) {\n    const response = await instance.put(\"profile/status/\", {\n      status: status\n    });\n    return response.data;\n  },\n\n  async Login(email, password, rememberMe) {\n    const response = await instance.post(\"auth/login/\", {\n      email: email,\n      password: password,\n      rememberMe: rememberMe\n    });\n    return response.data;\n  },\n\n  async LogOut() {\n    const response = await instance.delete(\"auth/login\");\n    return response.data;\n  },\n\n  async LoadPhotoOnServer() {\n    const response = await instance.put('');\n  }\n\n};","map":{"version":3,"sources":["H:\\js_projects\\1\\my-app\\src\\API\\requests.js"],"names":["axios","instance","create","withCredentials","baseURL","headers","API","getUsers","currentPage","pageSize","response","get","data","AuthMe","getProfile","ProfileID","DelSub","userId","delete","AddSub","post","getProfileStatus","setProfileStatus","status","put","Login","email","password","rememberMe","LogOut","LoadPhotoOnServer"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,MAAMC,QAAQ,GAAGD,KAAK,CAACE,MAAN,CAAa;AAC1BC,EAAAA,eAAe,EAAE,IADS;AAE1BC,EAAAA,OAAO,EAAE,+CAFiB;AAG1BC,EAAAA,OAAO,EAAE;AACL,eAAW;AADN;AAHiB,CAAb,CAAjB;AAQA,OAAO,MAAMC,GAAG,GAAG;AAEf,QAAMC,QAAN,CAAeC,WAAW,GAAG,CAA7B,EAAgCC,QAAQ,GAAG,EAA3C,EAA+C;AAC3C,UAAMC,QAAQ,GAAG,MAAMT,QAAQ,CAACU,GAAT,sBAA2BH,WAA3B,oBAAgDC,QAAhD,EAAvB;AACA,WAAOC,QAAQ,CAACE,IAAhB;AACH,GALc;;AAOf,QAAMC,MAAN,GAAe;AACX,UAAMH,QAAQ,GAAG,MAAMT,QAAQ,CAACU,GAAT,WAAvB;AACA,WAAOD,QAAQ,CAACE,IAAhB;AACH,GAVc;;AAYf,QAAME,UAAN,CAAiBC,SAAS,GAAG,CAA7B,EAAgC;AAC5B,UAAML,QAAQ,GAAG,MAAMT,QAAQ,CAACU,GAAT,CAAa,aAAaI,SAA1B,CAAvB;AACA,WAAOL,QAAQ,CAACE,IAAhB;AACH,GAfc;;AAiBf,QAAMI,MAAN,CAAaC,MAAb,EAAqB;AACjB,UAAMP,QAAQ,GAAG,MAAMT,QAAQ,CAACiB,MAAT,kBAA0BD,MAA1B,EAAvB;AACA,WAAOP,QAAQ,CAACE,IAAhB;AACH,GApBc;;AAsBf,QAAMO,MAAN,CAAaF,MAAb,EAAqB;AACjB,UAAMP,QAAQ,GAAG,MAAMT,QAAQ,CAACmB,IAAT,kBAAwBH,MAAxB,EAAvB;AACA,WAAOP,QAAQ,CAACE,IAAhB;AACH,GAzBc;;AA2Bf,QAAMS,gBAAN,CAAuBN,SAAS,GAAG,CAAnC,EAAsC;AAClC,UAAML,QAAQ,GAAG,MAAMT,QAAQ,CAACU,GAAT,CAAa,oBAAoBI,SAAjC,CAAvB;AACA,WAAOL,QAAQ,CAACE,IAAhB;AACH,GA9Bc;;AAgCf,QAAMU,gBAAN,CAAuBC,MAAvB,EAA+B;AAC3B,UAAMb,QAAQ,GAAG,MAAMT,QAAQ,CAACuB,GAAT,oBAAgC;AAACD,MAAAA,MAAM,EAAEA;AAAT,KAAhC,CAAvB;AACA,WAAOb,QAAQ,CAACE,IAAhB;AAEH,GApCc;;AAsCf,QAAMa,KAAN,CAAYC,KAAZ,EAAmBC,QAAnB,EAA6BC,UAA7B,EAAyC;AACrC,UAAMlB,QAAQ,GAAG,MAAMT,QAAQ,CAACmB,IAAT,gBAA6B;AAChDM,MAAAA,KAAK,EAAEA,KADyC;AAEhDC,MAAAA,QAAQ,EAAEA,QAFsC;AAE5BC,MAAAA,UAAU,EAAEA;AAFgB,KAA7B,CAAvB;AAIA,WAAOlB,QAAQ,CAACE,IAAhB;AACH,GA5Cc;;AA8Cf,QAAMiB,MAAN,GAAe;AACX,UAAMnB,QAAQ,GAAG,MAAMT,QAAQ,CAACiB,MAAT,cAAvB;AACA,WAAOR,QAAQ,CAACE,IAAhB;AAEH,GAlDc;;AAmDnB,QAAMkB,iBAAN,GAA0B;AAClB,UAAMpB,QAAQ,GAAG,MAAMT,QAAQ,CAACuB,GAAT,CAAa,EAAb,CAAvB;AACP;;AArDkB,CAAZ","sourcesContent":["import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": \"1b0fde3a-3c72-4f1a-8a92-66508a392dc3\"\r\n    }\r\n})\r\n\r\nexport const API = {\r\n\r\n    async getUsers(currentPage = 1, pageSize = 10) {\r\n        const response = await instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n        return response.data\r\n    },\r\n\r\n    async AuthMe() {\r\n        const response = await instance.get(`auth/me`)\r\n        return response.data\r\n    },\r\n\r\n    async getProfile(ProfileID = 2) {\r\n        const response = await instance.get(`profile/` + ProfileID)\r\n        return response.data\r\n    },\r\n\r\n    async DelSub(userId) {\r\n        const response = await instance.delete(`follow/${userId}`)\r\n        return response.data\r\n    },\r\n\r\n    async AddSub(userId) {\r\n        const response = await instance.post(`follow/${userId}`)\r\n        return response.data\r\n    },\r\n\r\n    async getProfileStatus(ProfileID = 2) {\r\n        const response = await instance.get(`profile/status/` + ProfileID)\r\n        return response.data\r\n    },\r\n\r\n    async setProfileStatus(status) {\r\n        const response = await instance.put(`profile/status/`, {status: status})\r\n        return response.data\r\n\r\n    },\r\n\r\n    async Login(email, password, rememberMe) {\r\n        const response = await instance.post(`auth/login/`, {\r\n            email: email,\r\n            password: password, rememberMe: rememberMe\r\n        })\r\n        return response.data\r\n    },\r\n\r\n    async LogOut() {\r\n        const response = await instance.delete(`auth/login`)\r\n        return response.data\r\n\r\n    },\r\nasync LoadPhotoOnServer (){\r\n        const response = await instance.put('')\r\n}\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}