{"ast":null,"code":"import _slicedToArray from \"H:\\\\js_projects\\\\1\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"H:\\\\js_projects\\\\1\\\\my-app\\\\src\\\\components\\\\ToDoLists\\\\ToDoList.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport TDLS from \"./ToDoLists.module.css\";\nimport ToDoListMenuIcon from \"./ListMenu\";\nimport SaveButton from \"./SaveButton\";\nimport GoBackButton from \"./GoBackButton\";\nimport TitleChangingField from \"./TitleChangeField\";\nimport AddNewTask from \"./AddNewTask/AddNewTask\";\nimport ShowTasksButton from \"./ToDoListTasks/ShowTasksButton\";\nimport HideTasksButton from \"./ToDoListTasks/HideTasksButton\";\nimport Tasks from \"./ToDoListTasks/Tasks\";\n\nconst ToDoList = props => {\n  let _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      EditTitleMode = _useState2[0],\n      SetEditTitleMode = _useState2[1];\n\n  let _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      ShowTasksMode = _useState4[0],\n      SetShowTasksMode = _useState4[1];\n\n  let _useState5 = useState(props.ToDoListTasks),\n      _useState6 = _slicedToArray(_useState5, 2),\n      CurrentTasks = _useState6[0],\n      SetCurrentTasks = _useState6[1];\n\n  let _useState7 = useState(props.title),\n      _useState8 = _slicedToArray(_useState7, 2),\n      CurrentToDoListTitle = _useState8[0],\n      SetToDoListTitle = _useState8[1];\n\n  const EditTitleModeON = () => {\n    SetEditTitleMode(true);\n  };\n\n  const EditTitleModeOFF = () => {\n    SetEditTitleMode(false);\n  };\n\n  const OnToDoListTitleChanging = el => {\n    SetToDoListTitle(el.currentTarget.value);\n  };\n\n  const ShowTask = () => {\n    props.GetToDoListTasksThunk(props.ListID, props.ToDoListTasksCount, props.ToDoListTasksPage);\n    SetShowTasksMode(true);\n    props.ButtonIsDesabledON();\n  };\n\n  const ShowTaskModeOFF = () => {\n    SetShowTasksMode(false);\n    props.ButtonIsDesabledOFF();\n  };\n\n  useEffect(() => {\n    SetToDoListTitle(props.title);\n  }, [props.title]);\n  useEffect(() => {\n    SetCurrentTasks(props.ToDoListTasks);\n  }, [props.ToDoListTasks]);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, !EditTitleMode ? React.createElement(\"div\", {\n    className: TDLS.ToDolistsWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(ToDoListMenuIcon, {\n    ListID: props.ListID,\n    EditTitleModeON: EditTitleModeON,\n    Del: props.DeleteToDoListThunk,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: TDLS.ToDoListTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, props.title)) : React.createElement(\"div\", {\n    className: TDLS.ToDolistsChanchingWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(SaveButton, {\n    ListID: props.ListID,\n    ChangeToDoListTitleThunk: props.ChangeToDoListTitleThunk,\n    EditTitleModeOFF: EditTitleModeOFF,\n    CurrentToDoListTitle: CurrentToDoListTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }), React.createElement(GoBackButton, {\n    HandleOnClick: EditTitleModeOFF,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: TDLS.ToDoListChangingInput,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(TitleChangingField, {\n    OnToDoListTitleChanging: OnToDoListTitleChanging,\n    CurrentToDoListTitle: CurrentToDoListTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }))), ShowTasksMode ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(AddNewTask, {\n    ListID: props.ListID,\n    AddNewTaskThunk: props.AddNewTaskThunk,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, props.ToDoListTasks.items && React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(Tasks, {\n    ListID: props.ListID,\n    CurrentTasks: CurrentTasks,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: TDLS.HideTasksButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(HideTasksButton, {\n    HandleOnClick: ShowTaskModeOFF,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  })))) : React.createElement(\"div\", {\n    className: TDLS.ShowTasksButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(ShowTasksButton, {\n    ShowTasksMode: ShowTasksMode,\n    HandleOnClick: ShowTask,\n    ButtonIsDesabled: props.ButtonIsDesabled,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  })));\n};\n\nexport default ToDoList;","map":{"version":3,"sources":["H:\\js_projects\\1\\my-app\\src\\components\\ToDoLists\\ToDoList.jsx"],"names":["React","useState","useEffect","TDLS","ToDoListMenuIcon","SaveButton","GoBackButton","TitleChangingField","AddNewTask","ShowTasksButton","HideTasksButton","Tasks","ToDoList","props","EditTitleMode","SetEditTitleMode","ShowTasksMode","SetShowTasksMode","ToDoListTasks","CurrentTasks","SetCurrentTasks","title","CurrentToDoListTitle","SetToDoListTitle","EditTitleModeON","EditTitleModeOFF","OnToDoListTitleChanging","el","currentTarget","value","ShowTask","GetToDoListTasksThunk","ListID","ToDoListTasksCount","ToDoListTasksPage","ButtonIsDesabledON","ShowTaskModeOFF","ButtonIsDesabledOFF","ToDolistsWrapper","DeleteToDoListThunk","ToDoListTitle","ToDolistsChanchingWrapper","ChangeToDoListTitleThunk","ToDoListChangingInput","AddNewTaskThunk","items","ButtonIsDesabled"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\"\r\nimport TDLS from \"./ToDoLists.module.css\";\r\nimport ToDoListMenuIcon from \"./ListMenu\";\r\nimport SaveButton from \"./SaveButton\";\r\nimport GoBackButton from \"./GoBackButton\";\r\nimport TitleChangingField from \"./TitleChangeField\";\r\nimport AddNewTask from \"./AddNewTask/AddNewTask\";\r\nimport ShowTasksButton from \"./ToDoListTasks/ShowTasksButton\";\r\nimport HideTasksButton from \"./ToDoListTasks/HideTasksButton\";\r\nimport Tasks from \"./ToDoListTasks/Tasks\";\r\n\r\n\r\nconst ToDoList = (props) => {\r\n    let [EditTitleMode, SetEditTitleMode] = useState(false)\r\n    let [ShowTasksMode, SetShowTasksMode] = useState(false)\r\n    let [CurrentTasks, SetCurrentTasks] = useState(props.ToDoListTasks)\r\n\r\n\r\n    let [CurrentToDoListTitle, SetToDoListTitle] = useState(props.title)\r\n\r\n    const EditTitleModeON = () => {\r\n        SetEditTitleMode(true)\r\n    }\r\n    const EditTitleModeOFF = () => {\r\n        SetEditTitleMode(false)\r\n    }\r\n\r\n    const OnToDoListTitleChanging = (el) => {\r\n        SetToDoListTitle(el.currentTarget.value)\r\n    }\r\n\r\n    const ShowTask = () => {\r\n        props.GetToDoListTasksThunk(props.ListID, props.ToDoListTasksCount, props.ToDoListTasksPage)\r\n        SetShowTasksMode(true)\r\n        props.ButtonIsDesabledON()\r\n\r\n\r\n\r\n    }\r\n    const ShowTaskModeOFF = () => {\r\n        SetShowTasksMode(false)\r\n        props.ButtonIsDesabledOFF()\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n            SetToDoListTitle(props.title)\r\n        }, [props.title]\r\n    )\r\n\r\n    useEffect(() => {\r\n        SetCurrentTasks(props.ToDoListTasks)\r\n        }, [props.ToDoListTasks]\r\n    )\r\n\r\n    return <div>\r\n        {!EditTitleMode ?\r\n            <div className={TDLS.ToDolistsWrapper}>\r\n\r\n                <ToDoListMenuIcon ListID={props.ListID}\r\n                                  EditTitleModeON={EditTitleModeON}\r\n                                  Del={props.DeleteToDoListThunk}/>\r\n\r\n                <div className={TDLS.ToDoListTitle}>\r\n                    {props.title}\r\n                </div>\r\n            </div>\r\n\r\n            :\r\n            <div className={TDLS.ToDolistsChanchingWrapper}>\r\n                <div>\r\n                    <SaveButton ListID={props.ListID} ChangeToDoListTitleThunk={props.ChangeToDoListTitleThunk}\r\n                                EditTitleModeOFF={EditTitleModeOFF} CurrentToDoListTitle={CurrentToDoListTitle}/>\r\n                    <GoBackButton HandleOnClick={EditTitleModeOFF}/>\r\n                </div>\r\n                <div className={TDLS.ToDoListChangingInput}>\r\n                    <TitleChangingField OnToDoListTitleChanging={OnToDoListTitleChanging}\r\n                                        CurrentToDoListTitle={CurrentToDoListTitle}/>\r\n                </div>\r\n\r\n            </div>\r\n        }\r\n\r\n        {ShowTasksMode ?\r\n\r\n            <div>\r\n\r\n                <AddNewTask ListID={props.ListID} AddNewTaskThunk={props.AddNewTaskThunk}/>\r\n\r\n                <div>\r\n\r\n                    {props.ToDoListTasks.items &&\r\n                        <div>\r\n                            <Tasks ListID={props.ListID} CurrentTasks={CurrentTasks}/>\r\n                        </div>\r\n                    }\r\n\r\n\r\n                    <div className={TDLS.HideTasksButton}>\r\n                        <HideTasksButton HandleOnClick={ShowTaskModeOFF}/>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n            :\r\n            <div className={TDLS.ShowTasksButton}>\r\n                <ShowTasksButton ShowTasksMode={ShowTasksMode}\r\n                                 HandleOnClick={ShowTask}\r\n                                 ButtonIsDesabled={props.ButtonIsDesabled}\r\n                />\r\n            </div>\r\n\r\n        }\r\n\r\n\r\n\r\n    </div>\r\n\r\n}\r\nexport default ToDoList"]},"metadata":{},"sourceType":"module"}