{"ast":null,"code":"import _slicedToArray from \"H:\\\\js_projects\\\\1\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"H:\\\\js_projects\\\\1\\\\my-app\\\\src\\\\components\\\\ToDoLists\\\\ToDoListTasks\\\\Tasks.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport ts from \"./Tasks.module.css\";\nimport classNames from 'classnames';\nimport DeleteButton from \"./DeleteTaskButton\";\nimport TaskDoneIcon from \"./DoneIcone\";\nimport EditTaskButton from \"./EditTaskButton\";\nimport TaskDetails from \"./TaskDetails\";\n\nconst Tasks = props => {\n  let _useState = useState(props.ToDoListTasks.items),\n      _useState2 = _slicedToArray(_useState, 2),\n      TasksData = _useState2[0],\n      SetTasksData = _useState2[1];\n\n  let _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      ShowButtonBlocked = _useState4[0],\n      SetShowButtonBlocked = _useState4[1];\n\n  const ShowButtonBlockedON = () => {\n    SetShowButtonBlocked(true);\n  };\n\n  const ShowButtonBlockedOFF = () => {\n    SetShowButtonBlocked(false);\n  };\n\n  useEffect(() => {\n    SetTasksData(props.ToDoListTasks.items);\n  }, [props.ToDoListTasks.items]);\n  const TaskDonedStyleForIcon = classNames({\n    '': true,\n    'ss': false\n  });\n  const TaskDonedStyleForWindow = classNames({}); //сделать стили, что бы при завершении таски она обводилась зеленым и икнока была обычной, как сейчас,\n  // в случае, если не сделана - иконка дизейблед + начать добавлять снекбар\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  },\n  /*  props.ToDoListTasks.map(el => el.ListId === props.ListID && el.TaskData.items.map(key =>{\r\n        return <div key={key.id}>\r\n            {key.title}\r\n        </div>\r\n        })\r\n    )*/\n  props.ToDoListTasks.items.map(task => {\n    return React.createElement(\"div\", {\n      key: task.id,\n      className: ts.Main,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classNames(ts.MainWrapper),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: ts.TaskEditButton,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(EditTaskButton, {\n      ButtonSize: \"small\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: ts.Ramka,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: ts.TaskBodyWrapper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: ts.iconStatus,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(TaskDoneIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: ts.Title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, task.title), React.createElement(\"div\", {\n      className: ts.ToTrashIcon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(DeleteButton, {\n      DeleteTaskThunk: props.DeleteTaskThunk,\n      ListID: task.todoListId,\n      TaskID: task.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(TaskDetails, {\n      ShowButtonBlocked: ShowButtonBlocked,\n      ShowButtonBlockedON: ShowButtonBlockedON,\n      ShowButtonBlockedOFF: ShowButtonBlockedOFF,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    })))));\n  }));\n};\n\nexport default Tasks;","map":{"version":3,"sources":["H:\\js_projects\\1\\my-app\\src\\components\\ToDoLists\\ToDoListTasks\\Tasks.jsx"],"names":["React","useState","useEffect","ts","classNames","DeleteButton","TaskDoneIcon","EditTaskButton","TaskDetails","Tasks","props","ToDoListTasks","items","TasksData","SetTasksData","ShowButtonBlocked","SetShowButtonBlocked","ShowButtonBlockedON","ShowButtonBlockedOFF","TaskDonedStyleForIcon","TaskDonedStyleForWindow","map","task","id","Main","MainWrapper","TaskEditButton","Ramka","TaskBodyWrapper","iconStatus","Title","title","ToTrashIcon","DeleteTaskThunk","todoListId"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\"\r\nimport ts from \"./Tasks.module.css\"\r\nimport classNames from 'classnames';\r\nimport DeleteButton from \"./DeleteTaskButton\";\r\nimport TaskDoneIcon from \"./DoneIcone\";\r\nimport EditTaskButton from \"./EditTaskButton\";\r\nimport TaskDetails from \"./TaskDetails\";\r\n\r\n\r\nconst Tasks = (props) => {\r\n\r\n    let [TasksData, SetTasksData] = useState(props.ToDoListTasks.items)\r\n    let [ShowButtonBlocked, SetShowButtonBlocked] = useState(false)\r\n\r\n    const ShowButtonBlockedON=()=>{\r\n        SetShowButtonBlocked(true)\r\n    }\r\n\r\n    const ShowButtonBlockedOFF=()=>{\r\n        SetShowButtonBlocked(false)\r\n    }\r\n\r\n    useEffect(() => {\r\n            SetTasksData(props.ToDoListTasks.items)\r\n        }, [props.ToDoListTasks.items]\r\n    )\r\n\r\n    const TaskDonedStyleForIcon = classNames({\r\n    '':true,\r\n    'ss':false\r\n    })\r\n    const TaskDonedStyleForWindow = classNames({\r\n\r\n    })\r\n    //сделать стили, что бы при завершении таски она обводилась зеленым и икнока была обычной, как сейчас,\r\n    // в случае, если не сделана - иконка дизейблед + начать добавлять снекбар\r\n\r\n    return <div>\r\n        {\r\n            /*  props.ToDoListTasks.map(el => el.ListId === props.ListID && el.TaskData.items.map(key =>{\r\n                  return <div key={key.id}>\r\n                      {key.title}\r\n                  </div>\r\n                  })\r\n              )*/\r\n            props.ToDoListTasks.items.map(task => {\r\n                return <div key={task.id} className={ts.Main}>\r\n\r\n                    <div className={classNames(ts.MainWrapper)}>\r\n\r\n                        <div className={ts.TaskEditButton}>\r\n                        <EditTaskButton ButtonSize={\"small\"} />\r\n                        </div>\r\n\r\n                    <div className={ts.Ramka}>\r\n                        <div className={ts.TaskBodyWrapper}>\r\n                        <div className={ts.iconStatus}>\r\n                           <TaskDoneIcon/>\r\n                        </div>\r\n\r\n                        <div className={ts.Title}>\r\n                            {task.title}\r\n                        </div>\r\n\r\n\r\n\r\n                        <div className={ts.ToTrashIcon}>\r\n                            <DeleteButton DeleteTaskThunk={props.DeleteTaskThunk}\r\n                                ListID={task.todoListId} TaskID={task.id}/>\r\n                        </div>\r\n\r\n                        </div>\r\n\r\n                        <div>\r\n                            <TaskDetails\r\n                                ShowButtonBlocked={ShowButtonBlocked}\r\n                                ShowButtonBlockedON={ShowButtonBlockedON}\r\n                                ShowButtonBlockedOFF={ShowButtonBlockedOFF}\r\n                            />\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n             </div>\r\n\r\n            })\r\n        }\r\n    </div>\r\n}\r\n\r\nexport default Tasks"]},"metadata":{},"sourceType":"module"}