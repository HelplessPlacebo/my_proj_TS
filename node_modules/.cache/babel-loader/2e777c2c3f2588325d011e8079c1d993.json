{"ast":null,"code":"var _jsxFileName = \"H:\\\\js_projects\\\\1\\\\my-app\\\\src\\\\components\\\\Profile\\\\ProfileCOntainer.jsx\";\nimport React from 'react';\nimport Profile from \"./Profile\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from 'react-router-dom';\nimport { GetProfileThunk, GetProfileStatusThunk, SetProfileStatusThunk, SetProfilePhotoThunk, SetIsMyPage, UpdateProfileInfoThunk } from '../../data/ProfileReduser';\nimport { compose } from \"redux\";\nimport { GetIsMyPageSelector, GetProfileSelector, GetStatusSelector } from \"../../data/ProfileSelectors\";\nimport { GetUserIDSelector } from \"../../data/AuthSelectors\";\n\nclass ProfileContainer extends React.Component {\n  ProfileDataToPaint() {\n    let ProfileID = this.props.match.params.userID;\n\n    if (!ProfileID) {\n      ProfileID = this.props.userID;\n      this.props.SetIsMyPage(true); //  if this branch is going so we are in own page\n\n      if (!ProfileID) {\n        this.props.history.push(\"/login\");\n      }\n    } else {\n      this.props.SetIsMyPage(false); // if this branch is going so we are in some user page\n    }\n\n    this.props.GetProfileThunk(ProfileID);\n    this.props.GetProfileStatusThunk(ProfileID);\n  }\n\n  componentDidMount() {\n    this.ProfileDataToPaint();\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (this.props.match.params.userID !== prevProps.match.params.userID) {\n      this.ProfileDataToPaint();\n    }\n  }\n\n  render() {\n    return React.createElement(Profile, {\n      profile: this.props.profile,\n      status: this.props.status,\n      SetProfileStatus: this.props.SetProfileStatusThunk,\n      SetProfilePhoto: this.props.SetProfilePhotoThunk,\n      IsMyPage: this.props.IsMyPage,\n      SaveProfileData: this.props.SaveProfileData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    });\n  }\n\n}\n\nlet MapStateToProps = state => ({\n  profile: GetProfileSelector(state),\n  status: GetStatusSelector(state),\n  userID: GetUserIDSelector(state),\n  IsMyPage: GetIsMyPageSelector(state)\n});\n\nexport default compose(connect(MapStateToProps, {\n  GetProfileThunk,\n  GetProfileStatusThunk,\n  SetProfileStatusThunk,\n  SetProfilePhotoThunk,\n  SetIsMyPage,\n  UpdateProfileInfoThunk\n}), withRouter)(ProfileContainer);","map":{"version":3,"sources":["H:\\js_projects\\1\\my-app\\src\\components\\Profile\\ProfileCOntainer.jsx"],"names":["React","Profile","connect","withRouter","GetProfileThunk","GetProfileStatusThunk","SetProfileStatusThunk","SetProfilePhotoThunk","SetIsMyPage","UpdateProfileInfoThunk","compose","GetIsMyPageSelector","GetProfileSelector","GetStatusSelector","GetUserIDSelector","ProfileContainer","Component","ProfileDataToPaint","ProfileID","props","match","params","userID","history","push","componentDidMount","componentDidUpdate","prevProps","prevState","snapshot","render","profile","status","IsMyPage","SaveProfileData","MapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAASC,UAAT,QAA0B,kBAA1B;AACA,SAAQC,eAAR,EACIC,qBADJ,EAEIC,qBAFJ,EAGIC,oBAHJ,EAIIC,WAJJ,EAIgBC,sBAJhB,QAKS,2BALT;AAMA,SAAQC,OAAR,QAAsB,OAAtB;AACA,SAASC,mBAAT,EACIC,kBADJ,EACwBC,iBADxB,QACgD,6BADhD;AAEA,SAAQC,iBAAR,QAAgC,0BAAhC;;AAGA,MAAMC,gBAAN,SAA+Bf,KAAK,CAACgB,SAArC,CAA+C;AAE3CC,EAAAA,kBAAkB,GAAE;AAChB,QAAIC,SAAS,GAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,MAAxC;;AACA,QAAG,CAACJ,SAAJ,EAAc;AACVA,MAAAA,SAAS,GAAG,KAAKC,KAAL,CAAWG,MAAvB;AACA,WAAKH,KAAL,CAAWX,WAAX,CAAuB,IAAvB,EAFU,CAEmB;;AAC7B,UAAG,CAACU,SAAJ,EAAc;AACV,aAAKC,KAAL,CAAWI,OAAX,CAAmBC,IAAnB,CAAwB,QAAxB;AACH;AACJ,KAND,MAOI;AACA,WAAKL,KAAL,CAAWX,WAAX,CAAuB,KAAvB,EADA,CAC8B;AACjC;;AACD,SAAKW,KAAL,CAAWf,eAAX,CAA2Bc,SAA3B;AACA,SAAKC,KAAL,CAAWd,qBAAX,CAAiCa,SAAjC;AACH;;AAEDO,EAAAA,iBAAiB,GAAG;AAChB,SAAKR,kBAAL;AACH;;AAEDS,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuBC,QAAvB,EAAiC;AAE/C,QAAG,KAAKV,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,MAAxB,KAAmCK,SAAS,CAACP,KAAV,CAAgBC,MAAhB,CAAuBC,MAA7D,EAAqE;AACjE,WAAKL,kBAAL;AACH;AACJ;;AAEDa,EAAAA,MAAM,GAAG;AAEL,WACI,oBAAC,OAAD;AAAU,MAAA,OAAO,EAAE,KAAKX,KAAL,CAAWY,OAA9B;AACS,MAAA,MAAM,EAAE,KAAKZ,KAAL,CAAWa,MAD5B;AAES,MAAA,gBAAgB,EAAE,KAAKb,KAAL,CAAWb,qBAFtC;AAGU,MAAA,eAAe,EAAE,KAAKa,KAAL,CAAWZ,oBAHtC;AAIU,MAAA,QAAQ,EAAE,KAAKY,KAAL,CAAWc,QAJ/B;AAKU,MAAA,eAAe,EAAE,KAAKd,KAAL,CAAWe,eALtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AASH;;AAxC0C;;AA2C/C,IAAIC,eAAe,GAAIC,KAAD,KAAY;AAC9BL,EAAAA,OAAO,EAAEnB,kBAAkB,CAACwB,KAAD,CADG;AAE9BJ,EAAAA,MAAM,EAAGnB,iBAAiB,CAACuB,KAAD,CAFI;AAG9Bd,EAAAA,MAAM,EAAGR,iBAAiB,CAACsB,KAAD,CAHI;AAI9BH,EAAAA,QAAQ,EAAGtB,mBAAmB,CAACyB,KAAD;AAJA,CAAZ,CAAtB;;AAQA,eAAe1B,OAAO,CAClBR,OAAO,CAACiC,eAAD,EAAkB;AAAC/B,EAAAA,eAAD;AAAiBC,EAAAA,qBAAjB;AACrBC,EAAAA,qBADqB;AACCC,EAAAA,oBADD;AACsBC,EAAAA,WADtB;AACkCC,EAAAA;AADlC,CAAlB,CADW,EAGlBN,UAHkB,CAAP,CAGCY,gBAHD,CAAf","sourcesContent":["import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport { withRouter} from 'react-router-dom'\r\nimport {GetProfileThunk,\r\n    GetProfileStatusThunk,\r\n    SetProfileStatusThunk,\r\n    SetProfilePhotoThunk,\r\n    SetIsMyPage,UpdateProfileInfoThunk}\r\n    from '../../data/ProfileReduser'\r\nimport {compose} from \"redux\";\r\nimport { GetIsMyPageSelector,\r\n    GetProfileSelector, GetStatusSelector} from \"../../data/ProfileSelectors\";\r\nimport {GetUserIDSelector} from \"../../data/AuthSelectors\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    ProfileDataToPaint(){\r\n        let ProfileID = this.props.match.params.userID\r\n        if(!ProfileID){\r\n            ProfileID = this.props.userID\r\n            this.props.SetIsMyPage(true) //  if this branch is going so we are in own page\r\n            if(!ProfileID){\r\n                this.props.history.push(\"/login\")\r\n            }\r\n        }\r\n        else{\r\n            this.props.SetIsMyPage(false) // if this branch is going so we are in some user page\r\n        }\r\n        this.props.GetProfileThunk(ProfileID)\r\n        this.props.GetProfileStatusThunk(ProfileID)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.ProfileDataToPaint()\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n\r\n        if(this.props.match.params.userID !== prevProps.match.params.userID ){\r\n            this.ProfileDataToPaint()\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Profile  profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     SetProfileStatus={this.props.SetProfileStatusThunk}\r\n                      SetProfilePhoto={this.props.SetProfilePhotoThunk}\r\n                      IsMyPage={this.props.IsMyPage}\r\n                      SaveProfileData={this.props.SaveProfileData}\r\n                        />\r\n        )\r\n    }\r\n}\r\n\r\nlet MapStateToProps = (state) => ({\r\n    profile: GetProfileSelector(state),\r\n    status : GetStatusSelector(state),\r\n    userID : GetUserIDSelector(state),\r\n    IsMyPage : GetIsMyPageSelector(state)})\r\n\r\n\r\n\r\nexport default compose(\r\n    connect(MapStateToProps, {GetProfileThunk,GetProfileStatusThunk,\r\n        SetProfileStatusThunk,SetProfilePhotoThunk,SetIsMyPage,UpdateProfileInfoThunk}),\r\n    withRouter)(ProfileContainer)"]},"metadata":{},"sourceType":"module"}