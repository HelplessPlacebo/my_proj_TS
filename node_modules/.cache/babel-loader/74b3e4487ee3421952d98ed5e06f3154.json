{"ast":null,"code":"import * as axios from \"axios\";\nconst instance = axios.create({\n  withCredentials: true,\n  baseURL: 'https://social-network.samuraijs.com/api/1.0/',\n  headers: {\n    \"API-KEY\": \"1b0fde3a-3c72-4f1a-8a92-66508a392dc3\"\n  }\n});\nexport const API = {\n  async getUsers(currentPage = 1, pageSize = 10) {\n    const response = await instance.get(\"users?page=\".concat(currentPage, \"&count=\").concat(pageSize));\n    return response.data;\n  },\n\n  async AuthMe() {\n    const response = await instance.get(\"auth/me\");\n    return response.data;\n  },\n\n  async getProfile(ProfileID = 2) {\n    const response = await instance.get(\"profile/\" + ProfileID);\n    return response.data;\n  },\n\n  DelSub(userId) {\n    return instance.delete(\"follow/\".concat(userId)).then(response => {\n      return response.data;\n    });\n  },\n\n  AddSub(userId) {\n    return instance.post(\"follow/\".concat(userId)).then(response => {\n      return response.data;\n    });\n  },\n\n  getProfileStatus(ProfileID = 2) {\n    return instance.get(\"profile/status/\" + ProfileID).then(response => {\n      return response.data;\n    });\n  },\n\n  setProfileStatus(status) {\n    return instance.put(\"profile/status/\", {\n      status: status\n    }).then(response => {\n      return response.data;\n    });\n  },\n\n  Login(email, password, rememberMe) {\n    return instance.post(\"auth/login/\", {\n      email: email,\n      password: password,\n      rememberMe: rememberMe\n    }).then(response => {\n      return response.data;\n    });\n  },\n\n  async LogOut() {\n    const response = await instance.delete(\"auth/login\");\n    return response.data;\n  }\n\n};","map":{"version":3,"sources":["H:\\js_projects\\1\\my-app\\src\\API\\requests.js"],"names":["axios","instance","create","withCredentials","baseURL","headers","API","getUsers","currentPage","pageSize","response","get","data","AuthMe","getProfile","ProfileID","DelSub","userId","delete","then","AddSub","post","getProfileStatus","setProfileStatus","status","put","Login","email","password","rememberMe","LogOut"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,MAAMC,QAAQ,GAAGD,KAAK,CAACE,MAAN,CAAa;AAC1BC,EAAAA,eAAe,EAAE,IADS;AAE1BC,EAAAA,OAAO,EAAE,+CAFiB;AAG1BC,EAAAA,OAAO,EAAE;AACL,eAAW;AADN;AAHiB,CAAb,CAAjB;AAQA,OAAO,MAAMC,GAAG,GAAG;AACf,QAAMC,QAAN,CAAeC,WAAW,GAAG,CAA7B,EAAgCC,QAAQ,GAAG,EAA3C,EAA+C;AAC3C,UAAMC,QAAQ,GAAG,MAAOT,QAAQ,CAACU,GAAT,sBAA2BH,WAA3B,oBAAgDC,QAAhD,EAAxB;AACQ,WAAOC,QAAQ,CAACE,IAAhB;AACX,GAJc;;AAMhB,QAAMC,MAAN,GAAe;AACZ,UAAMH,QAAQ,GAAG,MAAMT,QAAQ,CAACU,GAAT,WAAvB;AACM,WAAOD,QAAQ,CAACE,IAAhB;AACP,GATc;;AAWhB,QAAME,UAAN,CAAiBC,SAAS,GAAG,CAA7B,EAAgC;AAC5B,UAAML,QAAQ,GAAG,MAAOT,QAAQ,CAACU,GAAT,CAAa,aAAaI,SAA1B,CAAxB;AACS,WAAOL,QAAQ,CAACE,IAAhB;AACX,GAdc;;AAefI,EAAAA,MAAM,CAACC,MAAD,EAAS;AACX,WAAOhB,QAAQ,CAACiB,MAAT,kBAA0BD,MAA1B,GAAoCE,IAApC,CAAyCT,QAAQ,IAAI;AACxD,aAAOA,QAAQ,CAACE,IAAhB;AACH,KAFM,CAAP;AAGH,GAnBc;;AAqBfQ,EAAAA,MAAM,CAACH,MAAD,EAAS;AACX,WAAOhB,QAAQ,CAACoB,IAAT,kBAAwBJ,MAAxB,GAAkCE,IAAlC,CAAuCT,QAAQ,IAAI;AACtD,aAAOA,QAAQ,CAACE,IAAhB;AACH,KAFM,CAAP;AAGH,GAzBc;;AA0BfU,EAAAA,gBAAgB,CAACP,SAAS,GAAG,CAAb,EAAgB;AAC5B,WAAOd,QAAQ,CAACU,GAAT,CAAa,oBAAoBI,SAAjC,EACFI,IADE,CACGT,QAAQ,IAAI;AACd,aAAOA,QAAQ,CAACE,IAAhB;AACH,KAHE,CAAP;AAIH,GA/Bc;;AAgCfW,EAAAA,gBAAgB,CAACC,MAAD,EAAS;AACrB,WAAOvB,QAAQ,CAACwB,GAAT,oBAA+B;AAACD,MAAAA,MAAM,EAACA;AAAR,KAA/B,EACFL,IADE,CACGT,QAAQ,IAAI;AACd,aAAOA,QAAQ,CAACE,IAAhB;AACH,KAHE,CAAP;AAIH,GArCc;;AAuCnBc,EAAAA,KAAK,CAACC,KAAD,EAAOC,QAAP,EAAgBC,UAAhB,EAA4B;AAC7B,WAAO5B,QAAQ,CAACoB,IAAT,gBAA4B;AAACM,MAAAA,KAAK,EAAGA,KAAT;AACnCC,MAAAA,QAAQ,EAAGA,QADwB;AACdC,MAAAA,UAAU,EAAGA;AADC,KAA5B,EAEFV,IAFE,CAEGT,QAAQ,IAAI;AACd,aAAOA,QAAQ,CAACE,IAAhB;AACH,KAJE,CAAP;AAKH,GA7CkB;;AA8Cf,QAAMkB,MAAN,GAAe;AACX,UAAMpB,QAAQ,GAAG,MAAMT,QAAQ,CAACiB,MAAT,cAAvB;AACQ,WAAOR,QAAQ,CAACE,IAAhB;AAEX;;AAlDc,CAAZ","sourcesContent":["import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": \"1b0fde3a-3c72-4f1a-8a92-66508a392dc3\"\r\n    }\r\n})\r\n\r\nexport const API = {\r\n    async getUsers(currentPage = 1, pageSize = 10) {\r\n        const response = await  instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n                return response.data\r\n    },\r\n\r\n   async AuthMe() {\r\n      const response = await instance.get(`auth/me`)\r\n            return response.data\r\n    },\r\n\r\n   async getProfile(ProfileID = 2) {\r\n       const response = await  instance.get(`profile/` + ProfileID)\r\n                return response.data\r\n    },\r\n    DelSub(userId) {\r\n        return instance.delete(`follow/${userId}`).then(response => {\r\n            return response.data\r\n        })\r\n    },\r\n\r\n    AddSub(userId) {\r\n        return instance.post(`follow/${userId}`).then(response => {\r\n            return response.data\r\n        })\r\n    },\r\n    getProfileStatus(ProfileID = 2) {\r\n        return instance.get(`profile/status/` + ProfileID)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    setProfileStatus(status) {\r\n        return instance.put(`profile/status/`,{status:status})\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n\r\nLogin(email,password,rememberMe) {\r\n    return instance.post(`auth/login/`,{email : email,\r\n    password : password, rememberMe : rememberMe})\r\n        .then(response => {\r\n            return response.data\r\n        })\r\n},\r\n    async LogOut() {\r\n        const response = await instance.delete(`auth/login`)\r\n                return response.data\r\n\r\n    }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}