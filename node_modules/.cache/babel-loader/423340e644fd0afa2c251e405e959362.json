{"ast":null,"code":"import _objectSpread from \"H:\\\\js_projects\\\\1\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { API } from \"../API/requests\";\nconst add_post = 'ADD-POST';\nconst type_post_info = 'TYPES-POST-INFO';\nconst Set_Profile_Of_User = 'Set_Profile_Of_User';\nconst Set_Status_Of_User = 'Set_Status_Of_User';\nlet DefaultState = {\n  Posts: [{\n    id: 1,\n    Post: 'post1',\n    likesCount: 12\n  }, {\n    id: 2,\n    Post: 'post2',\n    likesCount: 2\n  }, {\n    id: 3,\n    Post: 'post3',\n    likesCount: 11\n  }, {\n    id: 4,\n    Post: 'post4',\n    likesCount: 5\n  }, {\n    id: 5,\n    Post: 'post5',\n    likesCount: 121\n  }],\n  TextNewPost: '',\n  profile: null,\n  status: \"\",\n  email: \"\",\n  password: \"\"\n};\n\nconst ProfileReducer = (state = DefaultState, action) => {\n  switch (action.type) {\n    case add_post:\n      {\n        let NewPost = {\n          id: 6,\n          Post: state.TextNewPost,\n          likesCount: 0\n        };\n        return _objectSpread({}, state, {\n          Posts: [...state.Posts, {\n            NewPost\n          }],\n          TextNewPost: ''\n        });\n      }\n\n    case type_post_info:\n      {\n        return _objectSpread({}, state, {\n          TextNewPost: action.newtext\n        });\n      }\n\n    case Set_Profile_Of_User:\n      {\n        return _objectSpread({}, state, {\n          profile: action.profile\n        });\n      }\n\n    case Set_Status_Of_User:\n      {\n        return _objectSpread({}, state, {\n          status: action.status\n        });\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const addpost = () => {\n  return {\n    type: add_post\n  };\n};\nexport const typePostInfo = text => {\n  return {\n    type: type_post_info,\n    newtext: text\n  };\n};\nexport const setProfileOfUser = profile => {\n  return {\n    type: Set_Profile_Of_User,\n    profile\n  };\n};\nexport const SetStatusOfUser = status => {\n  return {\n    type: Set_Status_Of_User,\n    status\n  };\n};\nexport const SetAuthUser = (userId, email, login) => ({\n  type: SET_USER_DATA,\n  data: {\n    userId,\n    email,\n    login\n  }\n});\nexport const GetProfileThunk = ProfileID => {\n  return dispatch => {\n    API.getProfile(ProfileID).then(data => {\n      dispatch(setProfileOfUser(data));\n    });\n  };\n};\nexport const GetProfileStatusThunk = userID => {\n  return dispatch => {\n    API.getProfileStatus(userID).then(data => {\n      dispatch(SetStatusOfUser(data));\n    });\n  };\n};\nexport const SetProfileStatusThunk = status => {\n  return dispatch => {\n    API.setProfileStatus(status).then(data => {\n      if (data.resultCode === 0) {\n        dispatch(SetStatusOfUser(status));\n      }\n    });\n  };\n};\nexport default ProfileReducer;","map":{"version":3,"sources":["H:\\js_projects\\1\\my-app\\src\\data\\ProfileReduser.js"],"names":["API","add_post","type_post_info","Set_Profile_Of_User","Set_Status_Of_User","DefaultState","Posts","id","Post","likesCount","TextNewPost","profile","status","email","password","ProfileReducer","state","action","type","NewPost","newtext","addpost","typePostInfo","text","setProfileOfUser","SetStatusOfUser","SetAuthUser","userId","login","SET_USER_DATA","data","GetProfileThunk","ProfileID","dispatch","getProfile","then","GetProfileStatusThunk","userID","getProfileStatus","SetProfileStatusThunk","setProfileStatus","resultCode"],"mappings":"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","sourcesContent":["import {API} from \"../API/requests\";\r\n\r\nconst add_post = 'ADD-POST'\r\nconst type_post_info = 'TYPES-POST-INFO'\r\nconst Set_Profile_Of_User = 'Set_Profile_Of_User'\r\nconst Set_Status_Of_User = 'Set_Status_Of_User'\r\n\r\nlet DefaultState = {\r\n        Posts: [\r\n            {id: 1, Post: 'post1', likesCount: 12},\r\n            {id: 2, Post: 'post2', likesCount: 2},\r\n            {id: 3, Post: 'post3', likesCount: 11},\r\n            {id: 4, Post: 'post4', likesCount: 5},\r\n            {id: 5, Post: 'post5', likesCount: 121}\r\n        ],\r\n        TextNewPost: '',\r\n    profile:null,\r\n    status: \"\",\r\n    email : \"\",\r\n    password : \"\",\r\n\r\n\r\n    }\r\n\r\nconst ProfileReducer =  (state = DefaultState,action) => {\r\n    switch (action.type) {\r\n        case add_post: {\r\n            let NewPost = {\r\n                id: 6,\r\n                Post: state.TextNewPost,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                Posts: [...state.Posts,{NewPost }],\r\n                TextNewPost:''\r\n            }\r\n        }\r\n        case type_post_info: {\r\n\r\n            return {\r\n                ...state,\r\n                TextNewPost:action.newtext\r\n            }\r\n        }\r\n        case Set_Profile_Of_User:{\r\n            return {...state, profile : action.profile}\r\n        }\r\n\r\n        case Set_Status_Of_User:{\r\n            return {...state, status : action.status}\r\n        }\r\n\r\n        default :\r\n            return state\r\n    }\r\n}\r\nexport const addpost = () => {\r\n    return {type : add_post }\r\n}\r\nexport const typePostInfo = (text) => {\r\n    return {type : type_post_info, newtext:text }\r\n}\r\nexport const setProfileOfUser = (profile) => {\r\n    return {type : Set_Profile_Of_User, profile }\r\n}\r\nexport const SetStatusOfUser = (status) => {\r\n    return {type : Set_Status_Of_User, status }\r\n}\r\nexport const SetAuthUser = (userId,email,login) =>\r\n    ({type: SET_USER_DATA,data:{userId,email,login}})\r\n\r\n\r\nexport const GetProfileThunk = (ProfileID)=> {\r\n    return (dispatch) =>{\r\n        API.getProfile(ProfileID).then(data => {\r\n            dispatch(setProfileOfUser(data))\r\n        })\r\n    }\r\n}\r\nexport const GetProfileStatusThunk = (userID)=> {\r\n    return (dispatch) =>{\r\n        API.getProfileStatus(userID).then(data => {\r\n            dispatch(SetStatusOfUser(data))\r\n        })\r\n    }\r\n}\r\n\r\nexport const SetProfileStatusThunk = (status)=> {\r\n    return (dispatch) =>{\r\n        API.setProfileStatus(status).then(data => {\r\n            if (data.resultCode === 0){\r\n            dispatch(SetStatusOfUser(status))\r\n        }})\r\n    }\r\n}\r\n\r\nexport default ProfileReducer"]},"metadata":{},"sourceType":"module"}