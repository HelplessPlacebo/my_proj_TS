{"ast":null,"code":"import _objectSpread from \"H:\\\\js_projects\\\\1\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { API } from \"../API/requests\";\nconst add_post = 'ADD-POST';\nconst type_post_info = 'TYPES-POST-INFO';\nconst Set_Profile_Of_User = 'Set_Profile_Of_User';\nconst Set_Status_Of_User = 'Set_Status_Of_User';\nlet DefaultState = {\n  Posts: ['sdasdsad'],\n  TextNewPost: '',\n  profile: null,\n  status: \"\",\n  email: \"\",\n  password: \"\",\n  rememberMe: false\n};\n\nconst ProfileReducer = (state = DefaultState, action) => {\n  switch (action.type) {\n    case add_post:\n      {\n        let NewPost = {\n          id: 6,\n          Post: action.newtext,\n          likesCount: 0\n        };\n        return _objectSpread({}, state, {\n          Posts: [...state.Posts, NewPost]\n        });\n      }\n\n    case Set_Profile_Of_User:\n      {\n        return _objectSpread({}, state, {\n          profile: action.profile\n        });\n      }\n\n    case Set_Status_Of_User:\n      {\n        return _objectSpread({}, state, {\n          status: action.status\n        });\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const addpost = text => {\n  return {\n    type: add_post,\n    newtext: text\n  };\n};\nexport const setProfileOfUser = profile => {\n  return {\n    type: Set_Profile_Of_User,\n    profile\n  };\n};\nexport const SetStatusOfUser = status => {\n  return {\n    type: Set_Status_Of_User,\n    status\n  };\n};\nexport const GetProfileThunk = ProfileID => {\n  return dispatch => {\n    API.getProfile(ProfileID).then(data => {\n      dispatch(setProfileOfUser(data));\n    });\n  };\n};\nexport const GetProfileStatusThunk = userID => {\n  return dispatch => {\n    API.getProfileStatus(userID).then(data => {\n      dispatch(SetStatusOfUser(data));\n    });\n  };\n};\nexport const SetProfileStatusThunk = status => {\n  return dispatch => {\n    API.setProfileStatus(status).then(data => {\n      if (data.resultCode === 0) {\n        dispatch(SetStatusOfUser(status));\n      }\n    });\n  };\n};\nexport default ProfileReducer;","map":{"version":3,"sources":["H:\\js_projects\\1\\my-app\\src\\data\\ProfileReduser.js"],"names":["API","add_post","type_post_info","Set_Profile_Of_User","Set_Status_Of_User","DefaultState","Posts","TextNewPost","profile","status","email","password","rememberMe","ProfileReducer","state","action","type","NewPost","id","Post","newtext","likesCount","addpost","text","setProfileOfUser","SetStatusOfUser","GetProfileThunk","ProfileID","dispatch","getProfile","then","data","GetProfileStatusThunk","userID","getProfileStatus","SetProfileStatusThunk","setProfileStatus","resultCode"],"mappings":";AAAA,SAAQA,GAAR,QAAkB,iBAAlB;AAEA,MAAMC,QAAQ,GAAG,UAAjB;AACA,MAAMC,cAAc,GAAG,iBAAvB;AACA,MAAMC,mBAAmB,GAAG,qBAA5B;AACA,MAAMC,kBAAkB,GAAG,oBAA3B;AAEA,IAAIC,YAAY,GAAG;AACfC,EAAAA,KAAK,EAAE,CAAC,UAAD,CADQ;AAEfC,EAAAA,WAAW,EAAE,EAFE;AAGfC,EAAAA,OAAO,EAAE,IAHM;AAIfC,EAAAA,MAAM,EAAE,EAJO;AAKfC,EAAAA,KAAK,EAAE,EALQ;AAMfC,EAAAA,QAAQ,EAAE,EANK;AAOfC,EAAAA,UAAU,EAAE;AAPG,CAAnB;;AAYA,MAAMC,cAAc,GAAG,CAACC,KAAK,GAAGT,YAAT,EAAuBU,MAAvB,KAAkC;AACrD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKf,QAAL;AAAe;AACX,YAAIgB,OAAO,GAAG;AACVC,UAAAA,EAAE,EAAE,CADM;AAEVC,UAAAA,IAAI,EAAEJ,MAAM,CAACK,OAFH;AAGVC,UAAAA,UAAU,EAAE;AAHF,SAAd;AAKA,iCACOP,KADP;AAEIR,UAAAA,KAAK,EAAE,CAAC,GAAGQ,KAAK,CAACR,KAAV,EAAiBW,OAAjB;AAFX;AAIH;;AACD,SAAKd,mBAAL;AAA0B;AACtB,iCAAWW,KAAX;AAAkBN,UAAAA,OAAO,EAAEO,MAAM,CAACP;AAAlC;AACH;;AAED,SAAKJ,kBAAL;AAAyB;AACrB,iCAAWU,KAAX;AAAkBL,UAAAA,MAAM,EAAEM,MAAM,CAACN;AAAjC;AACH;;AAED;AACI,aAAOK,KAAP;AArBR;AAuBH,CAxBD;;AAyBA,OAAO,MAAMQ,OAAO,GAAIC,IAAD,IAAU;AAC7B,SAAO;AAACP,IAAAA,IAAI,EAAEf,QAAP;AAAiBmB,IAAAA,OAAO,EAAGG;AAA3B,GAAP;AACH,CAFM;AAIP,OAAO,MAAMC,gBAAgB,GAAIhB,OAAD,IAAa;AACzC,SAAO;AAACQ,IAAAA,IAAI,EAAEb,mBAAP;AAA4BK,IAAAA;AAA5B,GAAP;AACH,CAFM;AAGP,OAAO,MAAMiB,eAAe,GAAIhB,MAAD,IAAY;AACvC,SAAO;AAACO,IAAAA,IAAI,EAAEZ,kBAAP;AAA2BK,IAAAA;AAA3B,GAAP;AACH,CAFM;AAIP,OAAO,MAAMiB,eAAe,GAAIC,SAAD,IAAe;AAC1C,SAAQC,QAAD,IAAc;AACjB5B,IAAAA,GAAG,CAAC6B,UAAJ,CAAeF,SAAf,EAA0BG,IAA1B,CAA+BC,IAAI,IAAI;AACnCH,MAAAA,QAAQ,CAACJ,gBAAgB,CAACO,IAAD,CAAjB,CAAR;AACH,KAFD;AAGH,GAJD;AAKH,CANM;AAOP,OAAO,MAAMC,qBAAqB,GAAIC,MAAD,IAAY;AAC7C,SAAQL,QAAD,IAAc;AACjB5B,IAAAA,GAAG,CAACkC,gBAAJ,CAAqBD,MAArB,EAA6BH,IAA7B,CAAkCC,IAAI,IAAI;AACtCH,MAAAA,QAAQ,CAACH,eAAe,CAACM,IAAD,CAAhB,CAAR;AACH,KAFD;AAGH,GAJD;AAKH,CANM;AAQP,OAAO,MAAMI,qBAAqB,GAAI1B,MAAD,IAAY;AAC7C,SAAQmB,QAAD,IAAc;AACjB5B,IAAAA,GAAG,CAACoC,gBAAJ,CAAqB3B,MAArB,EAA6BqB,IAA7B,CAAkCC,IAAI,IAAI;AACtC,UAAIA,IAAI,CAACM,UAAL,KAAoB,CAAxB,EAA2B;AACvBT,QAAAA,QAAQ,CAACH,eAAe,CAAChB,MAAD,CAAhB,CAAR;AACH;AACJ,KAJD;AAKH,GAND;AAOH,CARM;AAUP,eAAeI,cAAf","sourcesContent":["import {API} from \"../API/requests\";\r\n\r\nconst add_post = 'ADD-POST'\r\nconst type_post_info = 'TYPES-POST-INFO'\r\nconst Set_Profile_Of_User = 'Set_Profile_Of_User'\r\nconst Set_Status_Of_User = 'Set_Status_Of_User'\r\n\r\nlet DefaultState = {\r\n    Posts: ['sdasdsad'],\r\n    TextNewPost: '',\r\n    profile: null,\r\n    status: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    rememberMe: false\r\n\r\n\r\n}\r\n\r\nconst ProfileReducer = (state = DefaultState, action) => {\r\n    switch (action.type) {\r\n        case add_post: {\r\n            let NewPost = {\r\n                id: 6,\r\n                Post: action.newtext,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                Posts: [...state.Posts, NewPost],\r\n            }\r\n        }\r\n        case Set_Profile_Of_User: {\r\n            return {...state, profile: action.profile}\r\n        }\r\n\r\n        case Set_Status_Of_User: {\r\n            return {...state, status: action.status}\r\n        }\r\n\r\n        default :\r\n            return state\r\n    }\r\n}\r\nexport const addpost = (text) => {\r\n    return {type: add_post, newtext : text}\r\n}\r\n\r\nexport const setProfileOfUser = (profile) => {\r\n    return {type: Set_Profile_Of_User, profile}\r\n}\r\nexport const SetStatusOfUser = (status) => {\r\n    return {type: Set_Status_Of_User, status}\r\n}\r\n\r\nexport const GetProfileThunk = (ProfileID) => {\r\n    return (dispatch) => {\r\n        API.getProfile(ProfileID).then(data => {\r\n            dispatch(setProfileOfUser(data))\r\n        })\r\n    }\r\n}\r\nexport const GetProfileStatusThunk = (userID) => {\r\n    return (dispatch) => {\r\n        API.getProfileStatus(userID).then(data => {\r\n            dispatch(SetStatusOfUser(data))\r\n        })\r\n    }\r\n}\r\n\r\nexport const SetProfileStatusThunk = (status) => {\r\n    return (dispatch) => {\r\n        API.setProfileStatus(status).then(data => {\r\n            if (data.resultCode === 0) {\r\n                dispatch(SetStatusOfUser(status))\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport default ProfileReducer"]},"metadata":{},"sourceType":"module"}