{"ast":null,"code":"import _slicedToArray from \"H:\\\\js_projects\\\\1\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"H:\\\\js_projects\\\\1\\\\my-app\\\\src\\\\components\\\\ToDoLists\\\\CreateNewToDoList\\\\CreateNewToDoList.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport InputWithIcon from \"./TextFieldToDoLists\";\nimport TDlistS from \"./CreateNewToDoList.module.css\";\nimport Grid from \"@material-ui/core/Grid\";\nimport ListIcon from '@material-ui/icons/ListAlt';\nimport TextField from \"@material-ui/core/TextField\";\n\nconst CreateNewToDoList = props => {\n  let _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      CreateNewToDoListMode = _useState2[0],\n      SetCreateNewToDoListMode = _useState2[1];\n\n  let AddNewListFieldRef = React.createRef();\n\n  const CreateToDoListON = () => {\n    SetCreateNewToDoListMode(true);\n  };\n\n  const CreateToDoListOFF = () => {\n    SetCreateNewToDoListMode(false);\n  };\n\n  const AddNewToDoList = () => {\n    props.AddNewToDoListsThunk(AddNewListFieldRef.current.value);\n    SetCreateNewToDoListMode(false);\n    debugger;\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, !CreateNewToDoListMode && React.createElement(\"div\", {\n    className: TDlistS.CreateAndGoBackButtons,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: TDlistS.AddNewListButton,\n    onClick: CreateToDoListON,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"ADD NEW LIST\")), CreateNewToDoListMode && React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: TDlistS.CreateAndGoBackButtons,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: TDlistS.GoBacktButton,\n    onClick: CreateToDoListOFF,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"GO BACK\")), React.createElement(\"div\", {\n    className: TDlistS.AddNewListWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 1,\n    alignItems: \"flex-end\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(ListIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    ref: AddNewListFieldRef,\n    id: \"input-with-icon-grid\",\n    placeholder: \"Enter new list name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }))), React.createElement(\"button\", {\n    onClick: AddNewToDoList,\n    className: TDlistS.Addbutton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \" add \"))));\n};\n\nexport default CreateNewToDoList;","map":{"version":3,"sources":["H:\\js_projects\\1\\my-app\\src\\components\\ToDoLists\\CreateNewToDoList\\CreateNewToDoList.jsx"],"names":["React","useState","useEffect","InputWithIcon","TDlistS","Grid","ListIcon","TextField","CreateNewToDoList","props","CreateNewToDoListMode","SetCreateNewToDoListMode","AddNewListFieldRef","createRef","CreateToDoListON","CreateToDoListOFF","AddNewToDoList","AddNewToDoListsThunk","current","value","CreateAndGoBackButtons","AddNewListButton","GoBacktButton","AddNewListWrapper","Addbutton"],"mappings":";;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AACA,OAAOC,aAAP,MAA0B,sBAA1B;AACA,OAAOC,OAAP,MAAoB,gCAApB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;;AAGA,MAAMC,iBAAiB,GAAIC,KAAD,IAAU;AAAA,kBACsBR,QAAQ,CAAC,KAAD,CAD9B;AAAA;AAAA,MAC5BS,qBAD4B;AAAA,MACNC,wBADM;;AAEhC,MAAIC,kBAAkB,GAAGZ,KAAK,CAACa,SAAN,EAAzB;;AACA,QAAMC,gBAAgB,GAAG,MAAK;AAC1BH,IAAAA,wBAAwB,CAAC,IAAD,CAAxB;AACH,GAFD;;AAGA,QAAMI,iBAAiB,GAAG,MAAK;AAC3BJ,IAAAA,wBAAwB,CAAC,KAAD,CAAxB;AACH,GAFD;;AAIA,QAAMK,cAAc,GAAG,MAAK;AACxBP,IAAAA,KAAK,CAACQ,oBAAN,CAA2BL,kBAAkB,CAACM,OAAnB,CAA2BC,KAAtD;AACAR,IAAAA,wBAAwB,CAAC,KAAD,CAAxB;AACA;AACH,GAJD;;AAOA,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACF,CAACD,qBAAD,IACG;AAAO,IAAA,SAAS,EAAEN,OAAO,CAACgB,sBAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAQ,IAAA,SAAS,EAAEhB,OAAO,CAACiB,gBAA3B;AAA6C,IAAA,OAAO,EAAEP,gBAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,CAFD,EAUDJ,qBAAqB,IACnB,0CACI;AAAK,IAAA,SAAS,EAAEN,OAAO,CAACgB,sBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAQ,IAAA,SAAS,EAAEhB,OAAO,CAACkB,aAA3B;AAA0C,IAAA,OAAO,EAAEP,iBAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,CADJ,EAMI;AAAK,IAAA,SAAS,EAAEX,OAAO,CAACmB,iBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,CAAzB;AAA4B,IAAA,UAAU,EAAC,UAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,EAII,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AAAY,IAAA,GAAG,EAAEX,kBAAjB;AAAqC,IAAA,EAAE,EAAC,sBAAxC;AAA+D,IAAA,WAAW,EAAE,qBAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAJJ,CADJ,EASI;AAAQ,IAAA,OAAO,EAAEI,cAAjB;AAAiC,IAAA,SAAS,EAAEZ,OAAO,CAACoB,SAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aATJ,CANJ,CAXD,CAAP;AA+BH,CAhDD;;AAkDA,eAAehB,iBAAf","sourcesContent":["import React,{useState,useEffect} from \"react\"\r\nimport InputWithIcon from \"./TextFieldToDoLists\";\r\nimport TDlistS from \"./CreateNewToDoList.module.css\"\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport ListIcon from '@material-ui/icons/ListAlt';\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\n\r\nconst CreateNewToDoList = (props) =>{\r\n    let[CreateNewToDoListMode,SetCreateNewToDoListMode] = useState(false);\r\n    let AddNewListFieldRef = React.createRef()\r\n    const CreateToDoListON = () =>{\r\n        SetCreateNewToDoListMode(true)\r\n    };\r\n    const CreateToDoListOFF = () =>{\r\n        SetCreateNewToDoListMode(false)\r\n    }\r\n\r\n    const AddNewToDoList = () =>{\r\n        props.AddNewToDoListsThunk(AddNewListFieldRef.current.value)\r\n        SetCreateNewToDoListMode(false)\r\n        debugger\r\n    }\r\n\r\n\r\n    return <div>\r\n        {!CreateNewToDoListMode &&\r\n            <div   className={TDlistS.CreateAndGoBackButtons}>\r\n                <button className={TDlistS.AddNewListButton} onClick={CreateToDoListON}>\r\n                    ADD NEW LIST\r\n                </button>\r\n            </div>\r\n\r\n        }\r\n\r\n        { CreateNewToDoListMode &&\r\n            <>\r\n                <div className={TDlistS.CreateAndGoBackButtons}>\r\n                    <button className={TDlistS.GoBacktButton} onClick={CreateToDoListOFF}>\r\n                       GO BACK\r\n                    </button>\r\n                </div>\r\n                <div className={TDlistS.AddNewListWrapper} >\r\n                    <Grid container spacing={1} alignItems=\"flex-end\">\r\n                        <Grid item>\r\n                            <ListIcon />\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <TextField  ref={AddNewListFieldRef} id=\"input-with-icon-grid\" placeholder={\"Enter new list name\"} />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <button onClick={AddNewToDoList} className={TDlistS.Addbutton} > add </button>\r\n                </div>\r\n        </>\r\n        }\r\n    </div>\r\n}\r\n\r\nexport default CreateNewToDoList"]},"metadata":{},"sourceType":"module"}