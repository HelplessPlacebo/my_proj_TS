{"ast":null,"code":"import _slicedToArray from \"H:\\\\js_projects\\\\1\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"H:\\\\js_projects\\\\1\\\\my-app\\\\src\\\\components\\\\ToDoLists\\\\ToDoListTasks\\\\Tasks.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport ts from \"./Tasks.module.css\";\nimport Task from \"./Task\";\n\nconst Tasks = props => {\n  let _useState = useState(props.ToDoListTasks.items),\n      _useState2 = _slicedToArray(_useState, 2),\n      TasksData = _useState2[0],\n      SetTasksData = _useState2[1];\n\n  let _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      ShowButtonBlocked = _useState4[0],\n      SetShowButtonBlocked = _useState4[1];\n\n  const ShowButtonBlockedON = () => {\n    SetShowButtonBlocked(true);\n  };\n\n  const ShowButtonBlockedOFF = () => {\n    SetShowButtonBlocked(false);\n  };\n\n  useEffect(() => {\n    SetTasksData(props.ToDoListTasks.items);\n  }, [props.ToDoListTasks.items]);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, TasksData.map(task => {\n    return React.createElement(\"div\", {\n      key: task.id,\n      className: ts.Main,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(Task, {\n      completed: task.completed,\n      UpdateTaskInformationThunk: props.UpdateTaskInformationThunk,\n      CurrentTask: task,\n      TaskTitle: task.title,\n      ShowButtonBlocked: ShowButtonBlocked,\n      ListID: task.todoListId,\n      TaskID: task.id,\n      DeleteTaskThunk: props.DeleteTaskThunk,\n      TaskAddedDate: task.addedDate,\n      TaskDeadline: task.deadline,\n      TaskDescription: task.description,\n      ShowButtonBlockedON: ShowButtonBlockedON,\n      ShowButtonBlockedOFF: ShowButtonBlockedOFF,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }));\n  }));\n};\n\nexport default Tasks;","map":{"version":3,"sources":["H:\\js_projects\\1\\my-app\\src\\components\\ToDoLists\\ToDoListTasks\\Tasks.jsx"],"names":["React","useState","useEffect","ts","Task","Tasks","props","ToDoListTasks","items","TasksData","SetTasksData","ShowButtonBlocked","SetShowButtonBlocked","ShowButtonBlockedON","ShowButtonBlockedOFF","map","task","id","Main","completed","UpdateTaskInformationThunk","title","todoListId","DeleteTaskThunk","addedDate","deadline","description"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,EAAP,MAAe,oBAAf;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAGA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AAAA,kBAEWL,QAAQ,CAACK,KAAK,CAACC,aAAN,CAAoBC,KAArB,CAFnB;AAAA;AAAA,MAEhBC,SAFgB;AAAA,MAELC,YAFK;;AAAA,mBAG2BT,QAAQ,CAAC,KAAD,CAHnC;AAAA;AAAA,MAGhBU,iBAHgB;AAAA,MAGGC,oBAHH;;AAMrB,QAAMC,mBAAmB,GAAG,MAAM;AAC9BD,IAAAA,oBAAoB,CAAC,IAAD,CAApB;AACH,GAFD;;AAIA,QAAME,oBAAoB,GAAG,MAAM;AAC/BF,IAAAA,oBAAoB,CAAC,KAAD,CAApB;AACH,GAFD;;AAIAV,EAAAA,SAAS,CAAC,MAAM;AACRQ,IAAAA,YAAY,CAACJ,KAAK,CAACC,aAAN,CAAoBC,KAArB,CAAZ;AACH,GAFI,EAEF,CAACF,KAAK,CAACC,aAAN,CAAoBC,KAArB,CAFE,CAAT;AAOA,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAICC,SAAS,CAACM,GAAV,CAAcC,IAAI,IAAI;AAElB,WAAO;AAAK,MAAA,GAAG,EAAEA,IAAI,CAACC,EAAf;AAAmB,MAAA,SAAS,EAAEd,EAAE,CAACe,IAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEH,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAEF,IAAI,CAACG,SAAtB;AACM,MAAA,0BAA0B,EAAEb,KAAK,CAACc,0BADxC;AAEM,MAAA,WAAW,EAAEJ,IAFnB;AAGM,MAAA,SAAS,EAAEA,IAAI,CAACK,KAHtB;AAIM,MAAA,iBAAiB,EAAEV,iBAJzB;AAKM,MAAA,MAAM,EAAEK,IAAI,CAACM,UALnB;AAMM,MAAA,MAAM,EAAEN,IAAI,CAACC,EANnB;AAOM,MAAA,eAAe,EAAEX,KAAK,CAACiB,eAP7B;AAQM,MAAA,aAAa,EAAEP,IAAI,CAACQ,SAR1B;AASM,MAAA,YAAY,EAAER,IAAI,CAACS,QATzB;AAUM,MAAA,eAAe,EAAET,IAAI,CAACU,WAV5B;AAWM,MAAA,mBAAmB,EAAEb,mBAX3B;AAYM,MAAA,oBAAoB,EAAEC,oBAZ5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFG,CAAP;AAkBH,GApBD,CAJD,CAAP;AA2BH,CAhDD;;AAkDA,eAAeT,KAAf","sourcesContent":["import React, {useState, useEffect} from \"react\"\r\nimport ts from \"./Tasks.module.css\"\r\nimport Task from \"./Task\";\r\n\r\n\r\nconst Tasks = (props) => {\r\n\r\n    let [TasksData, SetTasksData] = useState(props.ToDoListTasks.items)\r\n    let [ShowButtonBlocked, SetShowButtonBlocked] = useState(false)\r\n\r\n\r\n    const ShowButtonBlockedON = () => {\r\n        SetShowButtonBlocked(true)\r\n    }\r\n\r\n    const ShowButtonBlockedOFF = () => {\r\n        SetShowButtonBlocked(false)\r\n    }\r\n\r\n    useEffect(() => {\r\n            SetTasksData(props.ToDoListTasks.items)\r\n        }, [props.ToDoListTasks.items]\r\n    )\r\n\r\n\r\n\r\n    return <div>\r\n        {\r\n\r\n\r\n            TasksData.map(task => {\r\n\r\n                return <div key={task.id} className={ts.Main}>\r\n\r\n                    <Task completed={task.completed}\r\n                          UpdateTaskInformationThunk={props.UpdateTaskInformationThunk}\r\n                          CurrentTask={task}\r\n                          TaskTitle={task.title}\r\n                          ShowButtonBlocked={ShowButtonBlocked}\r\n                          ListID={task.todoListId}\r\n                          TaskID={task.id}\r\n                          DeleteTaskThunk={props.DeleteTaskThunk}\r\n                          TaskAddedDate={task.addedDate}\r\n                          TaskDeadline={task.deadline}\r\n                          TaskDescription={task.description}\r\n                          ShowButtonBlockedON={ShowButtonBlockedON}\r\n                          ShowButtonBlockedOFF={ShowButtonBlockedOFF}\r\n                    />\r\n\r\n                </div>\r\n            })\r\n        }\r\n    </div>\r\n}\r\n\r\nexport default Tasks"]},"metadata":{},"sourceType":"module"}