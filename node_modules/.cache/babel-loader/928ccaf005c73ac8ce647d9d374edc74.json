{"ast":null,"code":"import _objectSpread from \"H:\\\\js_projects\\\\1\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nconst follow = 'FOLLOW';\nconst unfollow = 'UNFOLLOW';\nconst setusers = 'SET_USERS';\nconst Set_Current_Page = 'SET_CURRENT_PAGE';\nconst Set_Total_Count_Of_Users = 'Set_Total_Count_Of_Users';\nconst IsFetching_Toggle = 'Toggle_is_fetching';\nconst IsInProcess_Togle = 'IsInProcess_Togle';\nlet DefaultState = {\n  Users: [],\n  pageSize: 5,\n  totalUsersCount: 0,\n  currentPage: 1,\n  IsFetching: false,\n  InProcess: []\n};\n\nconst UsersReducer = (state = DefaultState, action) => {\n  switch (action.type) {\n    case follow:\n      {\n        return _objectSpread({}, state, {\n          Users: state.Users.map(us => {\n            if (us.id === action.userID) {\n              return _objectSpread({}, us, {\n                followed: true\n              });\n            }\n\n            return us;\n          })\n        });\n      }\n\n    case unfollow:\n      {\n        return _objectSpread({}, state, {\n          Users: state.Users.map(us => {\n            if (us.id === action.userID) {\n              return _objectSpread({}, us, {\n                followed: false\n              });\n            }\n\n            return us;\n          })\n        });\n      }\n\n    case setusers:\n      {\n        return _objectSpread({}, state, {\n          Users: action.users\n        });\n      }\n\n    case Set_Current_Page:\n      {\n        return _objectSpread({}, state, {\n          currentPage: action.currentPage\n        });\n      }\n\n    case Set_Total_Count_Of_Users:\n      {\n        return _objectSpread({}, state, {\n          totalUsersCount: action.totalUsersCount\n        });\n      }\n\n    case IsFetching_Toggle:\n      {\n        return _objectSpread({}, state, {\n          IsFetching: action.IsFetching\n        });\n      }\n\n    case IsInProcess_Togle:\n      {\n        return _objectSpread({}, state, {\n          InProcess: action.IsFetching ? [...state.InProcess, action.UserID] : state.InProcess.filter(id => id != action.UserID)\n        });\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const OnFollow = userID => {\n  return {\n    type: follow,\n    userID: userID\n  };\n};\nexport const onUnFollow = userID => {\n  return {\n    type: unfollow,\n    userID: userID\n  };\n};\nexport const setUsers = users => {\n  return {\n    type: setusers,\n    users: users\n  };\n};\nexport const SetCurrentPage = currentPage => {\n  return {\n    type: Set_Current_Page,\n    currentPage: currentPage\n  };\n};\nexport const SetTotalCountOfUsers = totalCount => {\n  return {\n    type: Set_Total_Count_Of_Users,\n    totalUsersCount: totalCount\n  };\n};\nexport const ToggleIsFetching = IsFetching => {\n  return {\n    type: IsFetching_Toggle,\n    IsFetching\n  };\n};\nexport const ToggleInProcess = (IsFetching, UserID) => {\n  return {\n    type: IsInProcess_Togle,\n    IsFetching,\n    UserID\n  };\n};\nexport default UsersReducer;","map":{"version":3,"sources":["H:\\js_projects\\1\\my-app\\src\\data\\UsersReduser.js"],"names":["follow","unfollow","setusers","Set_Current_Page","Set_Total_Count_Of_Users","IsFetching_Toggle","IsInProcess_Togle","DefaultState","Users","pageSize","totalUsersCount","currentPage","IsFetching","InProcess","UsersReducer","state","action","type","map","us","id","userID","followed","users","UserID","filter","OnFollow","onUnFollow","setUsers","SetCurrentPage","SetTotalCountOfUsers","totalCount","ToggleIsFetching","ToggleInProcess"],"mappings":"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","sourcesContent":["\r\nconst follow = 'FOLLOW'\r\nconst unfollow = 'UNFOLLOW'\r\nconst setusers = 'SET_USERS'\r\nconst Set_Current_Page= 'SET_CURRENT_PAGE'\r\nconst Set_Total_Count_Of_Users = 'Set_Total_Count_Of_Users'\r\nconst IsFetching_Toggle = 'Toggle_is_fetching'\r\nconst IsInProcess_Togle = 'IsInProcess_Togle'\r\n\r\nlet DefaultState = {\r\n        Users: [],\r\n        pageSize : 5,\r\n        totalUsersCount:0,\r\n        currentPage : 1,\r\n         IsFetching : false,\r\n        InProcess : []\r\n}\r\n\r\nconst UsersReducer =  (state = DefaultState,action) => {\r\n    switch (action.type) {\r\n        case follow: {\r\n        return {\r\n          ...state,\r\n          Users:state.Users.map(us => {\r\n              if (us.id === action.userID) {\r\n                  return {\r\n                      ...us,\r\n                      followed:true\r\n                  }\r\n              }\r\n              return us\r\n          })\r\n        }\r\n    }\r\n        case unfollow: {\r\n            return {\r\n                ...state,\r\n                Users: state.Users.map(us =>{\r\n                    if(us.id === action.userID){\r\n                        return {\r\n                            ...us,\r\n                            followed:false\r\n                        }\r\n                    }\r\n                    return us\r\n                })\r\n            }\r\n        }\r\n        case setusers:{\r\n            return {...state, Users: action.users}\r\n        }\r\n        case Set_Current_Page:{\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case Set_Total_Count_Of_Users:{\r\n            return {...state, totalUsersCount: action.totalUsersCount}\r\n        }\r\n        case IsFetching_Toggle:{\r\n            return {...state, IsFetching: action.IsFetching}\r\n        }\r\n        case IsInProcess_Togle:{\r\n            return {...state,\r\n                InProcess : action.IsFetching\r\n                ?[...state.InProcess, action.UserID]\r\n                    : state.InProcess.filter(id => id != action.UserID)\r\n            }\r\n        }\r\n        default :\r\n            return state\r\n    }\r\n}\r\nexport const OnFollow = (userID) => {\r\n    return {type : follow,userID:userID }\r\n}\r\nexport const onUnFollow = (userID) => {\r\n    return {type : unfollow, userID:userID }\r\n}\r\nexport const setUsers = (users) => {\r\n    return {type : setusers, users:users }\r\n}\r\nexport const SetCurrentPage = (currentPage) => {\r\n    return {type : Set_Current_Page, currentPage: currentPage}\r\n}\r\nexport const SetTotalCountOfUsers = (totalCount) => {\r\n    return {type : Set_Total_Count_Of_Users, totalUsersCount: totalCount}\r\n}\r\nexport const ToggleIsFetching = (IsFetching) => {\r\n    return {type : IsFetching_Toggle, IsFetching}\r\n}\r\nexport const ToggleInProcess = (IsFetching,UserID) => {\r\n    return {type : IsInProcess_Togle, IsFetching,UserID}\r\n}\r\n\r\nexport default UsersReducer"]},"metadata":{},"sourceType":"module"}