{"ast":null,"code":"import _slicedToArray from \"H:\\\\js_projects\\\\1\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"H:\\\\js_projects\\\\1\\\\my-app\\\\src\\\\components\\\\ToDoLists\\\\ToDoListTasks\\\\Tasks.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport ts from \"./Tasks.module.css\";\nimport classNames from 'classnames';\nimport DeleteButton from \"./DeleteTaskButton\";\nimport TaskDoneIcon from \"./DoneIcone\";\nimport EditTaskButton from \"./EditTaskButton\";\nimport TaskDetails from \"./TaskDetails\";\nimport NotDoneIcon from \"./NotDoneIcon\";\n\nconst Tasks = props => {\n  let _useState = useState(props.ToDoListTasks.items),\n      _useState2 = _slicedToArray(_useState, 2),\n      TasksData = _useState2[0],\n      SetTasksData = _useState2[1];\n\n  let _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      ShowButtonBlocked = _useState4[0],\n      SetShowButtonBlocked = _useState4[1];\n\n  const ShowButtonBlockedON = () => {\n    SetShowButtonBlocked(true);\n  };\n\n  const ShowButtonBlockedOFF = () => {\n    SetShowButtonBlocked(false);\n  };\n\n  useEffect(() => {\n    SetTasksData(props.ToDoListTasks.items);\n  }, [props.ToDoListTasks.items]);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  },\n  /*  props.ToDoListTasks.map(el => el.ListId === props.ListID && el.TaskData.items.map(key =>{\r\n        return <div key={key.id}>\r\n            {key.title}\r\n        </div>\r\n        })\r\n    )*/\n  !props.TaskEditMode ? props.ToDoListTasks.items.map(task => {\n    const TaskExecutedStyleForWindow = classNames({\n      [ts.Ramka]: !task.completed,\n      [ts.DoneRamka]: task.completed\n    });\n    return React.createElement(\"div\", {\n      key: task.id,\n      className: ts.Main,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classNames(ts.MainWrapper),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: ts.TaskEditButton,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(EditTaskButton, {\n      ButtonSize: \"small\",\n      HandleOnClick: props.TaskEditModeON,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: TaskExecutedStyleForWindow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: ts.TaskBodyWrapper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, task.completed ? React.createElement(\"div\", {\n      className: ts.iconStatus,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(TaskDoneIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    })) : React.createElement(\"div\", {\n      className: ts.iconStatus,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(NotDoneIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: ts.Title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, task.title), React.createElement(\"div\", {\n      className: ts.ToTrashIcon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(DeleteButton, {\n      DeleteTaskThunk: props.DeleteTaskThunk,\n      ShowButtonBlocked: ShowButtonBlocked,\n      ListID: task.todoListId,\n      TaskID: task.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(TaskDetails, {\n      addedDate: task.addedDate,\n      deadline: task.deadline,\n      description: task.description,\n      ShowButtonBlocked: ShowButtonBlocked,\n      ShowButtonBlockedON: ShowButtonBlockedON,\n      ShowButtonBlockedOFF: ShowButtonBlockedOFF,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    })))));\n  }) : React.createElement(\"button\", {\n    onClick: props.TaskEditModeOFF,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, \"zalupa\"));\n};\n\nexport default Tasks;","map":{"version":3,"sources":["H:\\js_projects\\1\\my-app\\src\\components\\ToDoLists\\ToDoListTasks\\Tasks.jsx"],"names":["React","useState","useEffect","ts","classNames","DeleteButton","TaskDoneIcon","EditTaskButton","TaskDetails","NotDoneIcon","Tasks","props","ToDoListTasks","items","TasksData","SetTasksData","ShowButtonBlocked","SetShowButtonBlocked","ShowButtonBlockedON","ShowButtonBlockedOFF","TaskEditMode","map","task","TaskExecutedStyleForWindow","Ramka","completed","DoneRamka","id","Main","MainWrapper","TaskEditButton","TaskEditModeON","TaskBodyWrapper","iconStatus","Title","title","ToTrashIcon","DeleteTaskThunk","todoListId","addedDate","deadline","description","TaskEditModeOFF"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\"\r\nimport ts from \"./Tasks.module.css\"\r\nimport classNames from 'classnames';\r\nimport DeleteButton from \"./DeleteTaskButton\";\r\nimport TaskDoneIcon from \"./DoneIcone\";\r\nimport EditTaskButton from \"./EditTaskButton\";\r\nimport TaskDetails from \"./TaskDetails\";\r\nimport NotDoneIcon from \"./NotDoneIcon\";\r\n\r\n\r\nconst Tasks = (props) => {\r\n\r\n    let [TasksData, SetTasksData] = useState(props.ToDoListTasks.items)\r\n    let [ShowButtonBlocked, SetShowButtonBlocked] = useState(false)\r\n\r\n    const ShowButtonBlockedON = () => {\r\n        SetShowButtonBlocked(true)\r\n    }\r\n\r\n    const ShowButtonBlockedOFF = () => {\r\n        SetShowButtonBlocked(false)\r\n    }\r\n\r\n    useEffect(() => {\r\n            SetTasksData(props.ToDoListTasks.items)\r\n        }, [props.ToDoListTasks.items]\r\n    )\r\n\r\n\r\n    return <div>\r\n        {\r\n            /*  props.ToDoListTasks.map(el => el.ListId === props.ListID && el.TaskData.items.map(key =>{\r\n                  return <div key={key.id}>\r\n                      {key.title}\r\n                  </div>\r\n                  })\r\n              )*/\r\n            !props.TaskEditMode ?\r\n\r\n            props.ToDoListTasks.items.map(task => {\r\n                const TaskExecutedStyleForWindow = classNames({\r\n                    [ts.Ramka] : !task.completed,\r\n                    [ts.DoneRamka] : task.completed\r\n                })\r\n                return <div key={task.id} className={ts.Main}>\r\n\r\n                    <div className={classNames(ts.MainWrapper)}>\r\n\r\n                        <div className={ts.TaskEditButton}>\r\n                            <EditTaskButton ButtonSize={\"small\"} HandleOnClick={props.TaskEditModeON}/>\r\n                        </div>\r\n\r\n                        <div className={TaskExecutedStyleForWindow}>\r\n                            <div className={ts.TaskBodyWrapper}>\r\n                                {task.completed ?\r\n                                    <div className={ts.iconStatus}>\r\n                                        <TaskDoneIcon/>\r\n                                    </div>\r\n                                    :\r\n                                    <div className={ts.iconStatus}>\r\n                                    <NotDoneIcon />\r\n                                    </div>\r\n                                }\r\n\r\n\r\n                                <div className={ts.Title}>\r\n                                    {task.title}\r\n                                </div>\r\n\r\n\r\n                                <div className={ts.ToTrashIcon}>\r\n                                    <DeleteButton DeleteTaskThunk={props.DeleteTaskThunk}\r\n                                                  ShowButtonBlocked={ShowButtonBlocked}\r\n                                                  ListID={task.todoListId} TaskID={task.id}/>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                            <div>\r\n                                <TaskDetails\r\n                                    addedDate={task.addedDate}\r\n                                    deadline={task.deadline}\r\n                                    description={task.description}\r\n                                    ShowButtonBlocked={ShowButtonBlocked}\r\n                                    ShowButtonBlockedON={ShowButtonBlockedON}\r\n                                    ShowButtonBlockedOFF={ShowButtonBlockedOFF}\r\n                                />\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            })\r\n                :\r\n                <button onClick={props.TaskEditModeOFF}>\r\n                    zalupa\r\n                </button>\r\n        }\r\n    </div>\r\n}\r\n\r\nexport default Tasks"]},"metadata":{},"sourceType":"module"}