{"ast":null,"code":"import _objectSpread from \"H:\\\\js_projects\\\\1\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { API } from \"../API/requests\";\nconst Set_All_Dialogs = 'Dialogs/Set_All_Dialogs';\nconst Set_New_Messages = 'Dialogs/Set_New_Messages';\nlet DefaultState = {\n  users: [],\n  messages: [],\n  avatars: [{}],\n  NewMessageText: '',\n  AllDialogs: [],\n  DialogsMessages: [],\n  AllDialogsTemp: [{\n    \"id\": 5121,\n    \"userName\": \"NewSamurai\",\n    \"hasNewMessages\": true,\n    \"lastDialogActivityDate\": \"2019-11-21T20:40:04.413\",\n    \"lastUserActivityDate\": \"2019-11-22T18:54:07.787\",\n    \"newMessagesCount\": 1,\n    \"photos\": {\n      \"small\": \"https://social-network.samuraijs.com/activecontent/images/users/5121/user-small.jpg?v=1\",\n      \"large\": \"https://social-network.samuraijs.com/activecontent/images/users/5121/user.jpg?v=1\"\n    }\n  }, {\n    \"id\": 5239,\n    \"userName\": \"jultimrova\",\n    \"hasNewMessages\": false,\n    \"lastDialogActivityDate\": \"2019-11-21T18:26:55.113\",\n    \"lastUserActivityDate\": \"2019-11-21T19:38:23.81\",\n    \"newMessagesCount\": 0,\n    \"photos\": {\n      \"small\": null,\n      \"large\": null\n    }\n  }, {\n    \"id\": 5217,\n    \"userName\": \"Siarhei\",\n    \"hasNewMessages\": false,\n    \"lastDialogActivityDate\": \"2019-11-19T07:41:26.74\",\n    \"lastUserActivityDate\": \"2019-11-22T15:11:28.64\",\n    \"newMessagesCount\": 0,\n    \"photos\": {\n      \"small\": null,\n      \"large\": null\n    }\n  }, {\n    \"id\": 5209,\n    \"userName\": \"tokar\",\n    \"hasNewMessages\": false,\n    \"lastDialogActivityDate\": \"2019-11-17T22:42:57.85\",\n    \"lastUserActivityDate\": \"2019-11-22T17:20:05.533\",\n    \"newMessagesCount\": 0,\n    \"photos\": {\n      \"small\": null,\n      \"large\": null\n    }\n  }],\n  DialogsMessagesTemp: {\n    \"items\": [{\n      \"id\": \"0c47d2d2-77ce-4dd0-9911-35e7d99dfaa6\",\n      \"body\": \"llll\",\n      \"translatedBody\": null,\n      \"addedAt\": \"2019-11-17T22:42:57.85\",\n      \"senderId\": 1671,\n      \"senderName\": \"JSlearner\",\n      \"recipientId\": 5209,\n      \"viewed\": false\n    }],\n    \"totalCount\": 1,\n    \"error\": null\n  }\n};\n\nconst DialogsReducer = (state = DefaultState, action) => {\n  switch (action.type) {\n    case Set_All_Dialogs:\n      {\n        return _objectSpread({}, state, {\n          AllDialogs: action.NewAllDialogs\n        });\n      }\n\n    case Set_New_Messages:\n      {\n        return _objectSpread({}, state, {\n          DialogsMessages: action.NewMessages\n        });\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const SetAllDialogs = NewAllDialogs => {\n  return {\n    type: Set_All_Dialogs,\n    NewAllDialogs\n  };\n};\nexport const SetNewMessages = NewMessages => {\n  return {\n    type: Set_New_Messages,\n    NewMessages\n  };\n};\nexport const GetAllDialogsThunk = () => async dispatch => {\n  const data = await API.GetAllDialogs();\n  dispatch(SetAllDialogs(data));\n};\nexport const GetNewMessagesThunk = UserId => async dispatch => {\n  const data = await API.GetNewMessagesFromServer(UserId);\n\n  if (!data.error) {\n    dispatch(SetNewMessages(data.data));\n  }\n};\nexport const SendNewMessageThunk = (UserId, NewMessage) => async dispatch => {\n  const data = await API.SendNewMessage(UserId, NewMessage);\n\n  if (!data.error) {\n    dispatch(GetNewMessagesThunk(UserId));\n  }\n};\nexport default DialogsReducer;","map":{"version":3,"sources":["H:\\js_projects\\1\\my-app\\src\\data\\DIalogsReduser.js"],"names":["API","Set_All_Dialogs","Set_New_Messages","DefaultState","users","messages","avatars","NewMessageText","AllDialogs","DialogsMessages","AllDialogsTemp","DialogsMessagesTemp","DialogsReducer","state","action","type","NewAllDialogs","NewMessages","SetAllDialogs","SetNewMessages","GetAllDialogsThunk","dispatch","data","GetAllDialogs","GetNewMessagesThunk","UserId","GetNewMessagesFromServer","error","SendNewMessageThunk","NewMessage","SendNewMessage"],"mappings":";AAAA,SAAQA,GAAR,QAAkB,iBAAlB;AAEA,MAAMC,eAAe,GAAG,yBAAxB;AACA,MAAMC,gBAAgB,GAAG,0BAAzB;AAEA,IAAIC,YAAY,GAAG;AACfC,EAAAA,KAAK,EAAE,EADQ;AAEfC,EAAAA,QAAQ,EAAE,EAFK;AAGfC,EAAAA,OAAO,EAAE,CAAC,EAAD,CAHM;AAIfC,EAAAA,cAAc,EAAE,EAJD;AAKfC,EAAAA,UAAU,EAAE,EALG;AAMfC,EAAAA,eAAe,EAAE,EANF;AAOfC,EAAAA,cAAc,EAAG,CACb;AACI,UAAM,IADV;AAEI,gBAAY,YAFhB;AAGI,sBAAkB,IAHtB;AAII,8BAA0B,yBAJ9B;AAKI,4BAAwB,yBAL5B;AAMI,wBAAoB,CANxB;AAOI,cAAU;AACN,eAAS,yFADH;AAEN,eAAS;AAFH;AAPd,GADa,EAab;AACI,UAAM,IADV;AAEI,gBAAY,YAFhB;AAGI,sBAAkB,KAHtB;AAII,8BAA0B,yBAJ9B;AAKI,4BAAwB,wBAL5B;AAMI,wBAAoB,CANxB;AAOI,cAAU;AACN,eAAS,IADH;AAEN,eAAS;AAFH;AAPd,GAba,EAyBb;AACI,UAAM,IADV;AAEI,gBAAY,SAFhB;AAGI,sBAAkB,KAHtB;AAII,8BAA0B,wBAJ9B;AAKI,4BAAwB,wBAL5B;AAMI,wBAAoB,CANxB;AAOI,cAAU;AACN,eAAS,IADH;AAEN,eAAS;AAFH;AAPd,GAzBa,EAqCb;AACI,UAAM,IADV;AAEI,gBAAY,OAFhB;AAGI,sBAAkB,KAHtB;AAII,8BAA0B,wBAJ9B;AAKI,4BAAwB,yBAL5B;AAMI,wBAAoB,CANxB;AAOI,cAAU;AACN,eAAS,IADH;AAEN,eAAS;AAFH;AAPd,GArCa,CAPF;AAyDfC,EAAAA,mBAAmB,EACf;AACI,aAAS,CACL;AACI,YAAM,sCADV;AAEI,cAAQ,MAFZ;AAGI,wBAAkB,IAHtB;AAII,iBAAW,wBAJf;AAKI,kBAAY,IALhB;AAMI,oBAAc,WANlB;AAOI,qBAAe,IAPnB;AAQI,gBAAU;AARd,KADK,CADb;AAaI,kBAAc,CAblB;AAcI,aAAS;AAdb;AA1DW,CAAnB;;AA6EA,MAAMC,cAAc,GAAG,CAACC,KAAK,GAAGV,YAAT,EAAuBW,MAAvB,KAAkC;AACrD,UAAQA,MAAM,CAACC,IAAf;AAEI,SAAKd,eAAL;AAAuB;AACnB,iCAAWY,KAAX;AAAkBL,UAAAA,UAAU,EAAEM,MAAM,CAACE;AAArC;AACH;;AACD,SAAMd,gBAAN;AAAyB;AACrB,iCAAWW,KAAX;AAAkBJ,UAAAA,eAAe,EAAEK,MAAM,CAACG;AAA1C;AACH;;AACD;AACI,aAAOJ,KAAP;AATR;AAYH,CAbD;;AAgBA,OAAO,MAAMK,aAAa,GAAIF,aAAD,IAAmB;AAC5C,SAAO;AAACD,IAAAA,IAAI,EAAEd,eAAP;AAAwBe,IAAAA;AAAxB,GAAP;AACH,CAFM;AAGP,OAAO,MAAMG,cAAc,GAAIF,WAAD,IAAiB;AAC3C,SAAO;AAACF,IAAAA,IAAI,EAAEb,gBAAP;AAAyBe,IAAAA;AAAzB,GAAP;AACH,CAFM;AAIP,OAAO,MAAMG,kBAAkB,GAAG,MAAM,MAAOC,QAAP,IAAoB;AACxD,QAAMC,IAAI,GAAG,MAAMtB,GAAG,CAACuB,aAAJ,EAAnB;AACAF,EAAAA,QAAQ,CAACH,aAAa,CAACI,IAAD,CAAd,CAAR;AACH,CAHM;AAIP,OAAO,MAAME,mBAAmB,GAAIC,MAAD,IAAY,MAAOJ,QAAP,IAAoB;AAC/D,QAAMC,IAAI,GAAG,MAAMtB,GAAG,CAAC0B,wBAAJ,CAA6BD,MAA7B,CAAnB;;AACA,MAAI,CAACH,IAAI,CAACK,KAAV,EAAiB;AACbN,IAAAA,QAAQ,CAACF,cAAc,CAACG,IAAI,CAACA,IAAN,CAAf,CAAR;AACH;AAEJ,CANM;AAOP,OAAO,MAAMM,mBAAmB,GAAG,CAACH,MAAD,EAASI,UAAT,KAAwB,MAAOR,QAAP,IAAoB;AAC3E,QAAMC,IAAI,GAAG,MAAMtB,GAAG,CAAC8B,cAAJ,CAAmBL,MAAnB,EAA2BI,UAA3B,CAAnB;;AACA,MAAI,CAACP,IAAI,CAACK,KAAV,EAAiB;AACbN,IAAAA,QAAQ,CAACG,mBAAmB,CAACC,MAAD,CAApB,CAAR;AACH;AACJ,CALM;AAOP,eAAeb,cAAf","sourcesContent":["import {API} from \"../API/requests\";\r\n\r\nconst Set_All_Dialogs = 'Dialogs/Set_All_Dialogs'\r\nconst Set_New_Messages = 'Dialogs/Set_New_Messages'\r\n\r\nlet DefaultState = {\r\n    users: [],\r\n    messages: [],\r\n    avatars: [{}],\r\n    NewMessageText: '',\r\n    AllDialogs: [],\r\n    DialogsMessages: [],\r\n    AllDialogsTemp : [\r\n        {\r\n            \"id\": 5121,\r\n            \"userName\": \"NewSamurai\",\r\n            \"hasNewMessages\": true,\r\n            \"lastDialogActivityDate\": \"2019-11-21T20:40:04.413\",\r\n            \"lastUserActivityDate\": \"2019-11-22T18:54:07.787\",\r\n            \"newMessagesCount\": 1,\r\n            \"photos\": {\r\n                \"small\": \"https://social-network.samuraijs.com/activecontent/images/users/5121/user-small.jpg?v=1\",\r\n                \"large\": \"https://social-network.samuraijs.com/activecontent/images/users/5121/user.jpg?v=1\"\r\n            }\r\n        },\r\n        {\r\n            \"id\": 5239,\r\n            \"userName\": \"jultimrova\",\r\n            \"hasNewMessages\": false,\r\n            \"lastDialogActivityDate\": \"2019-11-21T18:26:55.113\",\r\n            \"lastUserActivityDate\": \"2019-11-21T19:38:23.81\",\r\n            \"newMessagesCount\": 0,\r\n            \"photos\": {\r\n                \"small\": null,\r\n                \"large\": null\r\n            }\r\n        },\r\n        {\r\n            \"id\": 5217,\r\n            \"userName\": \"Siarhei\",\r\n            \"hasNewMessages\": false,\r\n            \"lastDialogActivityDate\": \"2019-11-19T07:41:26.74\",\r\n            \"lastUserActivityDate\": \"2019-11-22T15:11:28.64\",\r\n            \"newMessagesCount\": 0,\r\n            \"photos\": {\r\n                \"small\": null,\r\n                \"large\": null\r\n            }\r\n        },\r\n        {\r\n            \"id\": 5209,\r\n            \"userName\": \"tokar\",\r\n            \"hasNewMessages\": false,\r\n            \"lastDialogActivityDate\": \"2019-11-17T22:42:57.85\",\r\n            \"lastUserActivityDate\": \"2019-11-22T17:20:05.533\",\r\n            \"newMessagesCount\": 0,\r\n            \"photos\": {\r\n                \"small\": null,\r\n                \"large\": null\r\n            }\r\n        }\r\n    ],\r\n    DialogsMessagesTemp :\r\n        {\r\n            \"items\": [\r\n                {\r\n                    \"id\": \"0c47d2d2-77ce-4dd0-9911-35e7d99dfaa6\",\r\n                    \"body\": \"llll\",\r\n                    \"translatedBody\": null,\r\n                    \"addedAt\": \"2019-11-17T22:42:57.85\",\r\n                    \"senderId\": 1671,\r\n                    \"senderName\": \"JSlearner\",\r\n                    \"recipientId\": 5209,\r\n                    \"viewed\": false\r\n                }\r\n            ],\r\n            \"totalCount\": 1,\r\n            \"error\": null\r\n        }\r\n\r\n}\r\n\r\nconst DialogsReducer = (state = DefaultState, action) => {\r\n    switch (action.type) {\r\n\r\n        case Set_All_Dialogs : {\r\n            return {...state, AllDialogs: action.NewAllDialogs}\r\n        }\r\n        case  Set_New_Messages : {\r\n            return {...state, DialogsMessages: action.NewMessages}\r\n        }\r\n        default :\r\n            return state\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const SetAllDialogs = (NewAllDialogs) => {\r\n    return {type: Set_All_Dialogs, NewAllDialogs}\r\n}\r\nexport const SetNewMessages = (NewMessages) => {\r\n    return {type: Set_New_Messages, NewMessages}\r\n}\r\n\r\nexport const GetAllDialogsThunk = () => async (dispatch) => {\r\n    const data = await API.GetAllDialogs()\r\n    dispatch(SetAllDialogs(data))\r\n}\r\nexport const GetNewMessagesThunk = (UserId) => async (dispatch) => {\r\n    const data = await API.GetNewMessagesFromServer(UserId)\r\n    if (!data.error) {\r\n        dispatch(SetNewMessages(data.data))\r\n    }\r\n\r\n}\r\nexport const SendNewMessageThunk = (UserId, NewMessage) => async (dispatch) => {\r\n    const data = await API.SendNewMessage(UserId, NewMessage)\r\n    if (!data.error) {\r\n        dispatch(GetNewMessagesThunk(UserId))\r\n    }\r\n}\r\n\r\nexport default DialogsReducer"]},"metadata":{},"sourceType":"module"}