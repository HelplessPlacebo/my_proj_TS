{"ast":null,"code":"import _slicedToArray from \"H:\\\\js_projects\\\\1\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"H:\\\\js_projects\\\\1\\\\my-app\\\\src\\\\components\\\\Users\\\\SelectPageSize..tsx\";\nimport React, { useState, useEffect } from 'react';\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nconst useStyles = makeStyles(theme => createStyles({\n  button: {\n    display: 'block',\n    marginTop: theme.spacing(2)\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  }\n}));\n\nconst ControlledOpenSelect = props => {\n  const classes = useStyles();\n\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        count = _useState2[0],\n        setCount = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        open = _useState4[0],\n        setOpen = _useState4[1];\n\n  useEffect(() => {\n    setCount(props.PageSize);\n  }, [props.PageSize]);\n\n  const handleChange = event => {\n    setCount(event.target.value);\n    props.OnPageSizeChange(event.target.value);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    id: \"demo-controlled-open-select-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"show users\"), React.createElement(Select, {\n    labelId: \"demo-controlled-open-select-label\",\n    id: \"demo-controlled-open-select\",\n    open: open,\n    onClose: handleClose,\n    onOpen: handleOpen,\n    value: count,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(MenuItem, {\n    value: 20,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"20\"), React.createElement(MenuItem, {\n    value: 50,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"50\"), React.createElement(MenuItem, {\n    value: 100,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"100\"))));\n};\n\nexport default ControlledOpenSelect;","map":{"version":3,"sources":["H:\\js_projects\\1\\my-app\\src\\components\\Users\\SelectPageSize..tsx"],"names":["React","useState","useEffect","makeStyles","createStyles","InputLabel","MenuItem","FormControl","Select","useStyles","theme","button","display","marginTop","spacing","formControl","margin","minWidth","ControlledOpenSelect","props","classes","count","setCount","open","setOpen","PageSize","handleChange","event","target","value","OnPageSizeChange","handleClose","handleOpen"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAwBC,SAAxB,QAAwC,OAAxC;AACA,SAASC,UAAT,EAA4BC,YAA5B,QAAgD,0BAAhD;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AAIA,MAAMC,SAAS,GAAGN,UAAU,CAAEO,KAAD,IACzBN,YAAY,CAAC;AACTO,EAAAA,MAAM,EAAE;AACJC,IAAAA,OAAO,EAAE,OADL;AAEJC,IAAAA,SAAS,EAAEH,KAAK,CAACI,OAAN,CAAc,CAAd;AAFP,GADC;AAKTC,EAAAA,WAAW,EAAE;AACTC,IAAAA,MAAM,EAAEN,KAAK,CAACI,OAAN,CAAc,CAAd,CADC;AAETG,IAAAA,QAAQ,EAAE;AAFD;AALJ,CAAD,CADY,CAA5B;;AAaA,MAAMC,oBAA2D,GAAIC,KAAD,IAAW;AAC3E,QAAMC,OAAO,GAAGX,SAAS,EAAzB;;AAD2E,oBAEjDR,QAAQ,CAAkB,EAAlB,CAFyC;AAAA;AAAA,QAEpEoB,KAFoE;AAAA,QAE7DC,QAF6D;;AAAA,qBAGnDrB,QAAQ,CAAC,KAAD,CAH2C;AAAA;AAAA,QAGpEsB,IAHoE;AAAA,QAG9DC,OAH8D;;AAK3EtB,EAAAA,SAAS,CAAC,MAAM;AACZoB,IAAAA,QAAQ,CAACH,KAAK,CAACM,QAAP,CAAR;AACC,GAFI,EAEF,CAACN,KAAK,CAACM,QAAP,CAFE,CAAT;;AAKA,QAAMC,YAAY,GAAIC,KAAD,IAAkD;AACnEL,IAAAA,QAAQ,CAACK,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAR;AACAV,IAAAA,KAAK,CAACW,gBAAN,CAAuBH,KAAK,CAACC,MAAN,CAAaC,KAApC;AACH,GAHD;;AAKA,QAAME,WAAW,GAAG,MAAM;AACtBP,IAAAA,OAAO,CAAC,KAAD,CAAP;AACH,GAFD;;AAIA,QAAMQ,UAAU,GAAG,MAAM;AACrBR,IAAAA,OAAO,CAAC,IAAD,CAAP;AACH,GAFD;;AAIA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAEJ,OAAO,CAACL,WAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,UAAD;AAAY,IAAA,EAAE,EAAC,mCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEI,oBAAC,MAAD;AACI,IAAA,OAAO,EAAC,mCADZ;AAEI,IAAA,EAAE,EAAC,6BAFP;AAGI,IAAA,IAAI,EAAEQ,IAHV;AAII,IAAA,OAAO,EAAEQ,WAJb;AAKI,IAAA,MAAM,EAAEC,UALZ;AAMI,IAAA,KAAK,EAAEX,KANX;AAOI,IAAA,QAAQ,EAAEK,YAPd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUI,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAE,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAVJ,EAWI,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAE,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAXJ,EAYI,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAE,GAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAZJ,CAFJ,CAFJ,CADJ;AAuBH,CA9CD;;AA+CA,eAAeR,oBAAf","sourcesContent":["import React, {useState,useEffect} from 'react';\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport {TControlledOpenSelectProps} from \"../GlobalTypes/UsersTypes/UsersTypes\";\r\n\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        button: {\r\n            display: 'block',\r\n            marginTop: theme.spacing(2),\r\n        },\r\n        formControl: {\r\n            margin: theme.spacing(1),\r\n            minWidth: 120,\r\n        },\r\n    }),\r\n);\r\n\r\nconst ControlledOpenSelect : React.FC<TControlledOpenSelectProps> = (props) => {\r\n    const classes = useStyles();\r\n    const [count, setCount] = useState<string | number>('');\r\n    const [open, setOpen] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setCount(props.PageSize)\r\n        }, [props.PageSize]\r\n    )\r\n\r\n    const handleChange = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n        setCount(event.target.value as number);\r\n        props.OnPageSizeChange(event.target.value as number)\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n\r\n            <FormControl className={classes.formControl}>\r\n                <InputLabel id=\"demo-controlled-open-select-label\">show users</InputLabel>\r\n                <Select\r\n                    labelId=\"demo-controlled-open-select-label\"\r\n                    id=\"demo-controlled-open-select\"\r\n                    open={open}\r\n                    onClose={handleClose}\r\n                    onOpen={handleOpen}\r\n                    value={count}\r\n                    onChange={handleChange}\r\n                >\r\n\r\n                    <MenuItem value={20}>20</MenuItem>\r\n                    <MenuItem value={50}>50</MenuItem>\r\n                    <MenuItem value={100}>100</MenuItem>\r\n                </Select>\r\n            </FormControl>\r\n             \r\n        </div>\r\n    );\r\n}\r\nexport default ControlledOpenSelect"]},"metadata":{},"sourceType":"module"}