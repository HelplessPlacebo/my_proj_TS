{"ast":null,"code":"var _jsxFileName = \"H:\\\\js_projects\\\\1\\\\my-app\\\\src\\\\components\\\\Dialogs\\\\Dialogs.jsx\";\nimport React from 'react';\nimport d from './Dialogs.module.css';\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport Message from \"./Message/Message\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { required, MaxLengthCreator } from \"../utils/validators\";\nimport { TextArea } from \"../assetss/common/ValidatorsComponents/ElementsValidators\";\nimport Dialog from \"./Dialog\";\nimport Preloader from \"../assetss/common/Loader/Loader\";\nconst maxValue300 = MaxLengthCreator(300);\n\nconst DialogsForm = props => {\n  /* let dialogsElement = props.MessagesData.users.map(d => <DialogItem key={d.id} name={d.name} id={d.id}\r\n                                                                       avatars={props.MessagesData.avatars}/>);\r\n    let messagesElements = props.MessagesData.messages.map(m => < Message key={m.id} message={m.message} id={m.id}/>);*/\n  return React.createElement(\"form\", {\n    onSubmit: props.handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: d.dialogs,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: d.dialogsItems,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: d.messages,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(Field, {\n    name: \"MessageTextArea\",\n    component: TextArea,\n    placeholder: \"Enter your message here\",\n    validate: [required, maxValue300],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: d.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \" send message\"))))));\n};\n\nconst ReduxDialogsForm = reduxForm({\n  form: 'dialogs'\n})(DialogsForm);\n\nconst Dialogs = props => {\n  debugger;\n\n  const SendNewMessage = Formdata => {\n    props.SendNewMessageThunk(1671, Formdata.MessageTextArea);\n  };\n\n  if (!props.MessagesData.AllDialogs) {\n    return React.createElement(Preloader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, props.MessagesData.AllDialogs.map(el => {\n    return React.createElement(Dialog, {\n      key: el.id,\n      DialogUserName: el.userName,\n      DialogUserAvatar: el.photos.small ? el.photos.small : el.photos.large,\n      NewMessagesCount: el.newMessagesCount,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    });\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }), React.createElement(ReduxDialogsForm, Object.assign({\n    onSubmit: SendNewMessage\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  })));\n};\n\nexport default Dialogs;","map":{"version":3,"sources":["H:\\js_projects\\1\\my-app\\src\\components\\Dialogs\\Dialogs.jsx"],"names":["React","d","DialogItem","Message","Field","reduxForm","required","MaxLengthCreator","TextArea","Dialog","Preloader","maxValue300","DialogsForm","props","handleSubmit","dialogs","dialogsItems","messages","button","ReduxDialogsForm","form","Dialogs","SendNewMessage","Formdata","SendNewMessageThunk","MessageTextArea","MessagesData","AllDialogs","map","el","id","userName","photos","small","large","newMessagesCount"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport d from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {required, MaxLengthCreator} from \"../utils/validators\"\r\nimport {TextArea} from \"../assetss/common/ValidatorsComponents/ElementsValidators\"\r\nimport Dialog from \"./Dialog\";\r\nimport Preloader from \"../assetss/common/Loader/Loader\";\r\n\r\nconst maxValue300 = MaxLengthCreator(300)\r\n\r\nconst DialogsForm = (props) => {\r\n\r\n  /* let dialogsElement = props.MessagesData.users.map(d => <DialogItem key={d.id} name={d.name} id={d.id}\r\n                                                                       avatars={props.MessagesData.avatars}/>);\r\n    let messagesElements = props.MessagesData.messages.map(m => < Message key={m.id} message={m.message} id={m.id}/>);*/\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div className={d.dialogs}>\r\n\r\n                <div className={d.dialogsItems}>\r\n                {/*    {dialogsElement}*/}\r\n                </div>\r\n\r\n                <div className={d.messages}>\r\n                  {/*  {messagesElements}*/}\r\n                    <div>\r\n                        <div>\r\n                            <Field name={\"MessageTextArea\"}\r\n                                   component={TextArea}\r\n                                   placeholder={\"Enter your message here\"}\r\n                                   validate={[required, maxValue300]}/>\r\n                        </div>\r\n                        <div>\r\n                            <button className={d.button}> send message</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst ReduxDialogsForm = reduxForm({form: 'dialogs'})(DialogsForm)\r\n\r\n\r\nconst Dialogs = (props) => {\r\ndebugger\r\n\r\n    const SendNewMessage = (Formdata) => {\r\n      props.SendNewMessageThunk(1671,Formdata.MessageTextArea)\r\n    }\r\nif(!props.MessagesData.AllDialogs){\r\n   return <Preloader />\r\n}\r\n\r\n    return (<div >\r\n\r\n            {props.MessagesData.AllDialogs.map(el => {\r\n                return <Dialog key={el.id} DialogUserName={el.userName}\r\n                                DialogUserAvatar={el.photos.small ?\r\n                                    el.photos.small\r\n                                    : el.photos.large}\r\n                                NewMessagesCount={el.newMessagesCount}\r\n                />\r\n            })}\r\n           {/* {props.MessagesData.AllDialogs ?\r\n            props.MessagesData.AllDialogs\r\n            : \"now is empty dialogs\"}\r\n            создать компоненты для отрисовки диалогов и сообщений\r\n            */}\r\n\r\n            <div>\r\n            {/*    {\r\n                    props.MessagesData.DialogsMessages ?\r\n                        props.MessagesData.DialogsMessages\r\n                        : \"you have not messages\"\r\n                }*/}\r\n            </div>\r\n\r\n            <ReduxDialogsForm onSubmit={SendNewMessage} {...props} />\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default Dialogs;"]},"metadata":{},"sourceType":"module"}