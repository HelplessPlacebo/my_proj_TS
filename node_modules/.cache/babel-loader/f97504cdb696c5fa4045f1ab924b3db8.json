{"ast":null,"code":"var _jsxFileName = \"H:\\\\js_projects\\\\1\\\\my-app\\\\src\\\\components\\\\Profile\\\\ProfileCOntainer.jsx\";\nimport React from 'react';\nimport Profile from \"./Profile\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from 'react-router-dom';\nimport { GetProfileThunk, GetProfileStatusThunk, SetProfileStatusThunk } from '../../data/ProfileReduser';\nimport { compose } from \"redux\";\n\nclass ProfileContainer extends React.Component {\n  ProfileDataToPaint() {\n    let ProfileID = this.props.match.params.userID;\n\n    if (!ProfileID) {\n      ProfileID = this.props.userID;\n\n      if (!ProfileID) {\n        this.props.history.push(\"/login\");\n      }\n    }\n\n    this.props.GetProfileThunk(ProfileID);\n    this.props.GetProfileStatusThunk(ProfileID);\n  }\n\n  componentDidMount() {\n    this.ProfileDataToPaint();\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (this.props.match.params.userID !== this.prevProps.match.params.userID) {\n      this.ProfileDataToPaint();\n    }\n  }\n\n  render() {\n    return React.createElement(Profile, {\n      profile: this.props.profile,\n      status: this.props.status,\n      SetProfileStatus: this.props.SetProfileStatusThunk,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    });\n  }\n\n}\n\nlet MapStateToProps = state => ({\n  profile: state.ProfileData.profile,\n  status: state.ProfileData.status,\n  userID: state.Auth.userId\n});\n\nexport default compose(connect(MapStateToProps, {\n  GetProfileThunk,\n  GetProfileStatusThunk,\n  SetProfileStatusThunk\n}), withRouter)(ProfileContainer);","map":{"version":3,"sources":["H:\\js_projects\\1\\my-app\\src\\components\\Profile\\ProfileCOntainer.jsx"],"names":["React","Profile","connect","withRouter","GetProfileThunk","GetProfileStatusThunk","SetProfileStatusThunk","compose","ProfileContainer","Component","ProfileDataToPaint","ProfileID","props","match","params","userID","history","push","componentDidMount","componentDidUpdate","prevProps","prevState","snapshot","render","profile","status","MapStateToProps","state","ProfileData","Auth","userId"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAASC,UAAT,QAA0B,kBAA1B;AACA,SAAQC,eAAR,EAAwBC,qBAAxB,EAA8CC,qBAA9C,QAA0E,2BAA1E;AAEA,SAAQC,OAAR,QAAsB,OAAtB;;AAGA,MAAMC,gBAAN,SAA+BR,KAAK,CAACS,SAArC,CAA+C;AAC3CC,EAAAA,kBAAkB,GAAE;AAChB,QAAIC,SAAS,GAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,MAAxC;;AACA,QAAG,CAACJ,SAAJ,EAAc;AACVA,MAAAA,SAAS,GAAG,KAAKC,KAAL,CAAWG,MAAvB;;AACA,UAAG,CAACJ,SAAJ,EAAc;AACV,aAAKC,KAAL,CAAWI,OAAX,CAAmBC,IAAnB,CAAwB,QAAxB;AACH;AACJ;;AACD,SAAKL,KAAL,CAAWR,eAAX,CAA2BO,SAA3B;AACA,SAAKC,KAAL,CAAWP,qBAAX,CAAiCM,SAAjC;AACH;;AAEDO,EAAAA,iBAAiB,GAAG;AAChB,SAAKR,kBAAL;AACH;;AAEDS,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuBC,QAAvB,EAAiC;AAC/C,QAAG,KAAKV,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,MAAxB,KAAmC,KAAKK,SAAL,CAAeP,KAAf,CAAqBC,MAArB,CAA4BC,MAAlE,EAA0E;AACtE,WAAKL,kBAAL;AACH;AACJ;;AAEDa,EAAAA,MAAM,GAAG;AAEL,WACI,oBAAC,OAAD;AAAU,MAAA,OAAO,EAAE,KAAKX,KAAL,CAAWY,OAA9B;AACS,MAAA,MAAM,EAAE,KAAKZ,KAAL,CAAWa,MAD5B;AAES,MAAA,gBAAgB,EAAE,KAAKb,KAAL,CAAWN,qBAFtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAKH;;AA9B0C;;AAiC/C,IAAIoB,eAAe,GAAIC,KAAD,KAAY;AAC9BH,EAAAA,OAAO,EAAEG,KAAK,CAACC,WAAN,CAAkBJ,OADG;AAE9BC,EAAAA,MAAM,EAAGE,KAAK,CAACC,WAAN,CAAkBH,MAFG;AAG9BV,EAAAA,MAAM,EAAGY,KAAK,CAACE,IAAN,CAAWC;AAHU,CAAZ,CAAtB;;AAOA,eAAevB,OAAO,CAClBL,OAAO,CAACwB,eAAD,EAAkB;AAACtB,EAAAA,eAAD;AAAiBC,EAAAA,qBAAjB;AAAuCC,EAAAA;AAAvC,CAAlB,CADW,EAElBH,UAFkB,CAAP,CAECK,gBAFD,CAAf","sourcesContent":["import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport { withRouter} from 'react-router-dom'\r\nimport {GetProfileThunk,GetProfileStatusThunk,SetProfileStatusThunk} from '../../data/ProfileReduser'\r\n\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n    ProfileDataToPaint(){\r\n        let ProfileID = this.props.match.params.userID\r\n        if(!ProfileID){\r\n            ProfileID = this.props.userID\r\n            if(!ProfileID){\r\n                this.props.history.push(\"/login\")\r\n            }\r\n        }\r\n        this.props.GetProfileThunk(ProfileID)\r\n        this.props.GetProfileStatusThunk(ProfileID)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.ProfileDataToPaint()\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(this.props.match.params.userID !== this.prevProps.match.params.userID ){\r\n            this.ProfileDataToPaint()\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Profile  profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     SetProfileStatus={this.props.SetProfileStatusThunk}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet MapStateToProps = (state) => ({\r\n    profile: state.ProfileData.profile,\r\n    status : state.ProfileData.status,\r\n    userID : state.Auth.userId})\r\n\r\n\r\n\r\nexport default compose(\r\n    connect(MapStateToProps, {GetProfileThunk,GetProfileStatusThunk,SetProfileStatusThunk}),\r\n    withRouter)(ProfileContainer)"]},"metadata":{},"sourceType":"module"}