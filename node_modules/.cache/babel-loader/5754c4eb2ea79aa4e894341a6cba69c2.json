{"ast":null,"code":"import _slicedToArray from \"H:\\\\js_projects\\\\1\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"H:\\\\js_projects\\\\1\\\\my-app\\\\src\\\\components\\\\Dialogs\\\\Message\\\\MessagesWithUser.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport Preloader from \"../../assetss/common/Loader/Loader\";\nimport { NavLink } from \"react-router-dom\";\nimport mwuStyles from \"./Messages.module.css\";\nimport UserPhoto from \"../../assetss/images/userPhoto.jpg\";\nimport { MaxLengthCreator, required } from \"../../utils/validators\";\nimport d from \"../Dialogs.module.css\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { TextAreaDialogsMessage } from \"../../assetss/common/ValidatorsComponents/ElementsValidators\";\nconst maxValue300 = MaxLengthCreator(300);\n\nconst MessageWithUserForm = props => {\n  return React.createElement(\"form\", {\n    onSubmit: props.handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: d.messages,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(Field, {\n    name: \"MessageTextArea\",\n    component: TextAreaDialogsMessage,\n    placeholder: \"Enter your message here\",\n    validate: [required, maxValue300],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: d.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \" send message\"))))));\n};\n\nconst ReduxMessageWithUserForm = reduxForm({\n  form: 'messages'\n})(MessageWithUserForm);\n\nconst MessagesWithUser = props => {\n  debugger;\n\n  const SendNewMessage = Formdata => {\n    props.SendNewMessageThunk(props.DialoguserID, Formdata.MessageTextArea);\n  };\n\n  let _useState = useState(props.MessagesData.UserAvatar),\n      _useState2 = _slicedToArray(_useState, 2),\n      UserAvatarUrl = _useState2[0],\n      SetUserAvatarUrl = _useState2[1];\n\n  let _useState3 = useState(props.MessagesData.InterlocutorAvatar),\n      _useState4 = _slicedToArray(_useState3, 2),\n      InterlocutorAvatarUrl = _useState4[0],\n      SetnterlocutorAvatarUrl = _useState4[1];\n\n  useEffect(() => {\n    SetUserAvatarUrl(props.MessagesData.UserAvatar);\n  }, [props.MessagesData.UserAvatar]);\n  useEffect(() => {\n    SetnterlocutorAvatarUrl(props.MessagesData.InterlocutorAvatar);\n  }, [props.MessagesData.InterlocutorAvatar]);\n  debugger;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, props.MessagesData.DialogsMessages ? props.MessagesData.DialogsMessages.items.map(item => {\n    return React.createElement(\"div\", {\n      key: item.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: mwuStyles.dateStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Sended at : \\xA0\\xA0\", item.addedAt.split(\"T\")[0]), React.createElement(\"div\", {\n      className: mwuStyles.MessageFormStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, item.senderName, \"  \\xA0\\xA0 \", item.addedAt.split(\"T\")[1].split(\".\")[0]), React.createElement(NavLink, {\n      to: \"/Profile/\".concat(item.senderId),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, item.senderId !== props.MyID ? React.createElement(\"img\", {\n      className: mwuStyles.img,\n      src: InterlocutorAvatarUrl != null ? InterlocutorAvatarUrl : UserPhoto,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }) : React.createElement(\"img\", {\n      className: mwuStyles.img,\n      src: UserAvatarUrl != null ? UserAvatarUrl : UserPhoto,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: mwuStyles.messageText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"\\xA0\\xA0  \", item.body)));\n  }) : React.createElement(Preloader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }), React.createElement(ReduxMessageWithUserForm, Object.assign({\n    onSubmit: SendNewMessage\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  })));\n};\n\nexport default MessagesWithUser;","map":{"version":3,"sources":["H:\\js_projects\\1\\my-app\\src\\components\\Dialogs\\Message\\MessagesWithUser.jsx"],"names":["React","useEffect","useState","Preloader","NavLink","mwuStyles","UserPhoto","MaxLengthCreator","required","d","Field","reduxForm","TextAreaDialogsMessage","maxValue300","MessageWithUserForm","props","handleSubmit","messages","button","ReduxMessageWithUserForm","form","MessagesWithUser","SendNewMessage","Formdata","SendNewMessageThunk","DialoguserID","MessageTextArea","MessagesData","UserAvatar","UserAvatarUrl","SetUserAvatarUrl","InterlocutorAvatar","InterlocutorAvatarUrl","SetnterlocutorAvatarUrl","DialogsMessages","items","map","item","id","dateStyle","addedAt","split","MessageFormStyle","senderName","senderId","MyID","img","messageText","body"],"mappings":"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","sourcesContent":["import React, {useEffect,useState} from \"react\"\r\nimport Preloader from \"../../assetss/common/Loader/Loader\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport mwuStyles from \"./Messages.module.css\"\r\nimport UserPhoto from \"../../assetss/images/userPhoto.jpg\";\r\nimport {MaxLengthCreator, required} from \"../../utils/validators\";\r\nimport d from \"../Dialogs.module.css\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {TextAreaDialogsMessage} from \"../../assetss/common/ValidatorsComponents/ElementsValidators\";\r\n\r\nconst maxValue300 = MaxLengthCreator(300)\r\n\r\nconst MessageWithUserForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div >\r\n\r\n                <div className={d.messages}>\r\n                    <div>\r\n                        <div>\r\n                            <Field name={\"MessageTextArea\"}\r\n                                   component={TextAreaDialogsMessage}\r\n                                   placeholder={\"Enter your message here\"}\r\n                                   validate={[required, maxValue300]}/>\r\n                        </div>\r\n                        <div>\r\n                            <button className={d.button}> send message</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst ReduxMessageWithUserForm = reduxForm({form: 'messages'})(MessageWithUserForm)\r\n\r\n\r\nconst MessagesWithUser = (props) => {\r\ndebugger\r\n    const SendNewMessage = (Formdata) => {\r\n        props.SendNewMessageThunk(props.DialoguserID, Formdata.MessageTextArea)\r\n    }\r\n\r\n    let [UserAvatarUrl, SetUserAvatarUrl] = useState(props.MessagesData.UserAvatar)\r\n    let [InterlocutorAvatarUrl, SetnterlocutorAvatarUrl] = useState(props.MessagesData.InterlocutorAvatar)\r\n\r\n    useEffect(() => {\r\n        SetUserAvatarUrl(props.MessagesData.UserAvatar)\r\n        }, [props.MessagesData.UserAvatar]\r\n    )\r\n    useEffect(() => {\r\n        SetnterlocutorAvatarUrl(props.MessagesData.InterlocutorAvatar)\r\n        }, [props.MessagesData.InterlocutorAvatar]\r\n    )\r\n\r\n    debugger\r\n    return <div>\r\n        {props.MessagesData.DialogsMessages ?\r\n            props.MessagesData.DialogsMessages.items.map(item => {\r\n                return (\r\n                    <div key={item.id} >\r\n                        <div className={mwuStyles.dateStyle}>\r\n                            Sended at : &nbsp;&nbsp;\r\n                            {item.addedAt.split(\"T\")[0]}\r\n                        </div>\r\n\r\n                        <div className={mwuStyles.MessageFormStyle}>\r\n                            <div>\r\n                                {item.senderName}  &nbsp;&nbsp; {item.addedAt.split(\"T\")[1].split(\".\")[0]}\r\n                            </div>\r\n                            <NavLink to={`/Profile/${item.senderId}`}>\r\n                                {item.senderId !== props.MyID ?\r\n                                    <img className={mwuStyles.img}\r\n                                         src={InterlocutorAvatarUrl != null\r\n                                             ? InterlocutorAvatarUrl\r\n                                             : UserPhoto}/>\r\n                                    :\r\n                                    <img className={mwuStyles.img}\r\n                                         src={UserAvatarUrl != null ?\r\n                                             UserAvatarUrl\r\n                                             : UserPhoto}/>\r\n                                }\r\n\r\n                            </NavLink>\r\n\r\n                            <div className={mwuStyles.messageText}>\r\n                                &nbsp;&nbsp;  {item.body}\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n\r\n                )\r\n            })\r\n            : <Preloader/>\r\n        }\r\n        <ReduxMessageWithUserForm onSubmit={SendNewMessage} {...props} />\r\n    </div>\r\n\r\n}\r\nexport default MessagesWithUser"]},"metadata":{},"sourceType":"module"}