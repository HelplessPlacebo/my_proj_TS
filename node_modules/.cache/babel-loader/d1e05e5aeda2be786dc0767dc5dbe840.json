{"ast":null,"code":"import _slicedToArray from \"H:\\\\js_projects\\\\1\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"H:\\\\js_projects\\\\1\\\\my-app\\\\src\\\\components\\\\ToDoLists\\\\CreateNewToDoList\\\\CreateNewToDoList.jsx\";\nimport React, { useState } from \"react\";\nimport InputWithIcon from \"./TextFieldToDoLists\";\nimport TDlistS from \"./CreateNewToDoList.module.css\";\n\nconst CreateNewToDoList = props => {\n  let _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      CreateNewToDoListMode = _useState2[0],\n      SetCreateNewToDoListMode = _useState2[1];\n\n  let _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      CurrentValueOfCreateNewToDoListInput = _useState4[0],\n      SetCurrentValueOfCreateNewToDoListInput = _useState4[1];\n\n  const OnTextFieldCreateNewToDoListChanging = el => {\n    SetCurrentValueOfCreateNewToDoListInput(el.currentTarget.value);\n  };\n\n  const CreateToDoListON = () => {\n    SetCreateNewToDoListMode(true);\n  };\n\n  const CreateToDoListOFF = () => {\n    SetCreateNewToDoListMode(false);\n  };\n\n  const AddNewToDoList = () => {\n    if (CurrentValueOfCreateNewToDoListInput.length > 0 && CurrentValueOfCreateNewToDoListInput < 100) {\n      props.AddNewToDoListsThunk(CurrentValueOfCreateNewToDoListInput);\n      SetCreateNewToDoListMode(false);\n      debugger;\n    }\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, !CreateNewToDoListMode && React.createElement(\"div\", {\n    className: TDlistS.CreateAndGoBackButtons,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: TDlistS.AddNewListButton,\n    onClick: CreateToDoListON,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"ADD NEW LIST\")), CreateNewToDoListMode && React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: TDlistS.CreateAndGoBackButtons,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: TDlistS.GoBacktButton,\n    onClick: CreateToDoListOFF,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"GO BACK\")), React.createElement(\"div\", {\n    className: TDlistS.AddNewListWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(InputWithIcon, {\n    OnTextFieldCreateNewToDoListChanging: OnTextFieldCreateNewToDoListChanging,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: AddNewToDoList,\n    className: TDlistS.Addbutton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \" add \"))));\n};\n\nexport default CreateNewToDoList;","map":{"version":3,"sources":["H:\\js_projects\\1\\my-app\\src\\components\\ToDoLists\\CreateNewToDoList\\CreateNewToDoList.jsx"],"names":["React","useState","InputWithIcon","TDlistS","CreateNewToDoList","props","CreateNewToDoListMode","SetCreateNewToDoListMode","CurrentValueOfCreateNewToDoListInput","SetCurrentValueOfCreateNewToDoListInput","OnTextFieldCreateNewToDoListChanging","el","currentTarget","value","CreateToDoListON","CreateToDoListOFF","AddNewToDoList","length","AddNewToDoListsThunk","CreateAndGoBackButtons","AddNewListButton","GoBacktButton","AddNewListWrapper","Addbutton"],"mappings":";;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,OAAOC,aAAP,MAA0B,sBAA1B;AACA,OAAOC,OAAP,MAAoB,gCAApB;;AAGA,MAAMC,iBAAiB,GAAIC,KAAD,IAAU;AAAA,kBACsBJ,QAAQ,CAAC,KAAD,CAD9B;AAAA;AAAA,MAC5BK,qBAD4B;AAAA,MACNC,wBADM;;AAAA,mBAEoDN,QAAQ,CAAC,EAAD,CAF5D;AAAA;AAAA,MAE5BO,oCAF4B;AAAA,MAESC,uCAFT;;AAIhC,QAAMC,oCAAoC,GAAIC,EAAD,IAAO;AACnDF,IAAAA,uCAAuC,CAACE,EAAE,CAACC,aAAH,CAAiBC,KAAlB,CAAvC;AACA,GAFD;;AAIA,QAAMC,gBAAgB,GAAG,MAAK;AAC1BP,IAAAA,wBAAwB,CAAC,IAAD,CAAxB;AACH,GAFD;;AAGA,QAAMQ,iBAAiB,GAAG,MAAK;AAC3BR,IAAAA,wBAAwB,CAAC,KAAD,CAAxB;AACH,GAFD;;AAIA,QAAMS,cAAc,GAAG,MAAM;AACzB,QAAIR,oCAAoC,CAACS,MAArC,GAA8C,CAA9C,IAAmDT,oCAAoC,GAAG,GAA9F,EAAmG;AAC/FH,MAAAA,KAAK,CAACa,oBAAN,CAA2BV,oCAA3B;AACAD,MAAAA,wBAAwB,CAAC,KAAD,CAAxB;AACA;AACH;AACJ,GAND;;AASA,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACF,CAACD,qBAAD,IACG;AAAO,IAAA,SAAS,EAAEH,OAAO,CAACgB,sBAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAQ,IAAA,SAAS,EAAEhB,OAAO,CAACiB,gBAA3B;AAA6C,IAAA,OAAO,EAAEN,gBAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,CAFD,EAUDR,qBAAqB,IACnB,0CACI;AAAK,IAAA,SAAS,EAAEH,OAAO,CAACgB,sBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAQ,IAAA,SAAS,EAAEhB,OAAO,CAACkB,aAA3B;AAA0C,IAAA,OAAO,EAAEN,iBAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,CADJ,EAMI;AAAK,IAAA,SAAS,EAAEZ,OAAO,CAACmB,iBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,aAAD;AAAe,IAAA,oCAAoC,EAAEZ,oCAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAQ,IAAA,OAAO,EAAEM,cAAjB;AAAiC,IAAA,SAAS,EAAEb,OAAO,CAACoB,SAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFJ,CANJ,CAXD,CAAP;AAwBH,CAhDD;;AAkDA,eAAenB,iBAAf","sourcesContent":["import React,{useState} from \"react\"\r\nimport InputWithIcon from \"./TextFieldToDoLists\";\r\nimport TDlistS from \"./CreateNewToDoList.module.css\"\r\n\r\n\r\nconst CreateNewToDoList = (props) =>{\r\n    let[CreateNewToDoListMode,SetCreateNewToDoListMode] = useState(false);\r\n    let[CurrentValueOfCreateNewToDoListInput,SetCurrentValueOfCreateNewToDoListInput] = useState(\"\");\r\n\r\n    const OnTextFieldCreateNewToDoListChanging = (el) =>{\r\n     SetCurrentValueOfCreateNewToDoListInput(el.currentTarget.value)\r\n    }\r\n\r\n    const CreateToDoListON = () =>{\r\n        SetCreateNewToDoListMode(true)\r\n    };\r\n    const CreateToDoListOFF = () =>{\r\n        SetCreateNewToDoListMode(false)\r\n    }\r\n\r\n    const AddNewToDoList = () => {\r\n        if (CurrentValueOfCreateNewToDoListInput.length > 0 && CurrentValueOfCreateNewToDoListInput < 100) {\r\n            props.AddNewToDoListsThunk(CurrentValueOfCreateNewToDoListInput)\r\n            SetCreateNewToDoListMode(false)\r\n            debugger\r\n        }\r\n    }\r\n\r\n\r\n    return <div>\r\n        {!CreateNewToDoListMode &&\r\n            <div   className={TDlistS.CreateAndGoBackButtons}>\r\n                <button className={TDlistS.AddNewListButton} onClick={CreateToDoListON}>\r\n                    ADD NEW LIST\r\n                </button>\r\n            </div>\r\n\r\n        }\r\n\r\n        { CreateNewToDoListMode &&\r\n            <>\r\n                <div className={TDlistS.CreateAndGoBackButtons}>\r\n                    <button className={TDlistS.GoBacktButton} onClick={CreateToDoListOFF}>\r\n                       GO BACK\r\n                    </button>\r\n                </div>\r\n                <div className={TDlistS.AddNewListWrapper} >\r\n                    <InputWithIcon OnTextFieldCreateNewToDoListChanging={OnTextFieldCreateNewToDoListChanging} />\r\n                    <button onClick={AddNewToDoList} className={TDlistS.Addbutton} > add </button>\r\n                </div>\r\n        </>\r\n        }\r\n    </div>\r\n}\r\n\r\nexport default CreateNewToDoList"]},"metadata":{},"sourceType":"module"}