{"ast":null,"code":"import _slicedToArray from \"H:\\\\js_projects\\\\1\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"H:\\\\js_projects\\\\1\\\\my-app\\\\src\\\\components\\\\ToDoLists\\\\AddNewTask\\\\AddNewTask.tsx\";\nimport React, { useState } from \"react\";\nimport TDLS from \"../ToDoLists.module.css\";\nimport AddNewTaskButton from \"./AddNewTaskButton\";\nimport AddTaskField from \"./AddNewTaskField\";\n\nconst AddNewTask = props => {\n  let _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      AddNewTaskFieldCurrentValue = _useState2[0],\n      SetAddNewTaskFieldCurrentValue = _useState2[1];\n\n  const OnAddNewTaskFieldChange = el => {\n    SetAddNewTaskFieldCurrentValue(el.currentTarget.value);\n  };\n\n  return React.createElement(\"div\", {\n    className: TDLS.AddNewTaskWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(AddTaskField, {\n    OnAddNewTaskFieldChange: OnAddNewTaskFieldChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: TDLS.AddTaskButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(AddNewTaskButton, {\n    ListID: props.ListID,\n    AddNewTaskThunk: props.AddNewTaskThunk,\n    AddNewTaskFieldCurrentValue: AddNewTaskFieldCurrentValue,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  })));\n};\n\nexport default AddNewTask;","map":{"version":3,"sources":["H:\\js_projects\\1\\my-app\\src\\components\\ToDoLists\\AddNewTask\\AddNewTask.tsx"],"names":["React","useState","TDLS","AddNewTaskButton","AddTaskField","AddNewTask","props","AddNewTaskFieldCurrentValue","SetAddNewTaskFieldCurrentValue","OnAddNewTaskFieldChange","el","currentTarget","value","AddNewTaskWrapper","AddTaskButton","ListID","AddNewTaskThunk"],"mappings":";;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,OAAOC,IAAP,MAAiB,yBAAjB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,YAAP,MAAyB,mBAAzB;;AAIA,MAAMC,UAAuC,GAAGC,KAAD,IAAW;AAAA,kBACaL,QAAQ,CAAC,EAAD,CADrB;AAAA;AAAA,MACjDM,2BADiD;AAAA,MACrBC,8BADqB;;AAGtD,QAAMC,uBAAuB,GAAIC,EAAD,IAA4C;AACxEF,IAAAA,8BAA8B,CAACE,EAAE,CAACC,aAAH,CAAiBC,KAAlB,CAA9B;AACH,GAFD;;AAGD,SAAQ;AAAK,IAAA,SAAS,EAAEV,IAAI,CAACW,iBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,YAAD;AAAc,IAAA,uBAAuB,EAAEJ,uBAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADD,EAKC;AAAK,IAAA,SAAS,EAAEP,IAAI,CAACY,aAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,gBAAD;AAAkB,IAAA,MAAM,EAAER,KAAK,CAACS,MAAhC;AACkB,IAAA,eAAe,EAAET,KAAK,CAACU,eADzC;AAEkB,IAAA,2BAA2B,EAAET,2BAF/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CALD,CAAR;AAaF,CAnBD;;AAoBA,eAAeF,UAAf","sourcesContent":["import React,{useState} from \"react\"\r\nimport TDLS from \"../ToDoLists.module.css\";\r\nimport AddNewTaskButton from \"./AddNewTaskButton\";\r\nimport AddTaskField from \"./AddNewTaskField\";\r\nimport {TAddNewTaskProps} from \"../../GlobalTypes/ToDoListsTypes/ToDoListsTypes\";\r\n\r\n\r\nconst AddNewTask : React.FC<TAddNewTaskProps>= (props) => {\r\n    let [AddNewTaskFieldCurrentValue,SetAddNewTaskFieldCurrentValue] = useState(\"\")\r\n\r\n    const OnAddNewTaskFieldChange = (el : React.ChangeEvent<HTMLInputElement>)=>{\r\n        SetAddNewTaskFieldCurrentValue(el.currentTarget.value)\r\n    }\r\n   return  <div className={TDLS.AddNewTaskWrapper}>\r\n            <div >\r\n                <AddTaskField OnAddNewTaskFieldChange={OnAddNewTaskFieldChange}/>\r\n            </div>\r\n\r\n            <div className={TDLS.AddTaskButton}>\r\n                <AddNewTaskButton ListID={props.ListID}\r\n                                  AddNewTaskThunk={props.AddNewTaskThunk}\r\n                                  AddNewTaskFieldCurrentValue={AddNewTaskFieldCurrentValue}\r\n                />\r\n            </div>\r\n\r\n    </div>\r\n}\r\nexport default AddNewTask"]},"metadata":{},"sourceType":"module"}