{"ast":null,"code":"import _slicedToArray from \"H:\\\\js_projects\\\\1\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"H:\\\\js_projects\\\\1\\\\my-app\\\\src\\\\components\\\\Dialogs\\\\Message\\\\MessagesWithUser.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport Preloader from \"../../assetss/common/Loader/Loader\";\nimport { NavLink } from \"react-router-dom\";\nimport mwuStyles from \"./Messages.module.css\";\nimport UserPhoto from \"../../assetss/images/userPhoto.jpg\";\nimport Viewed from \"../../assetss/images/viewed1.jpg\";\nimport { MaxLengthCreator, required } from \"../../utils/validators\";\nimport d from \"../Dialogs.module.css\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { TextAreaDialogsMessage } from \"../../assetss/common/ValidatorsComponents/ElementsValidators\";\nimport Paginator from \"../../assetss/common/Paginator/Paginator\";\nimport DeleteMessage from \"./DeleteMessage\";\nimport DateTransform from \"../../../data/ToDoListsReducer\";\nconst maxValue300 = MaxLengthCreator(300);\n\nconst MessageWithUserForm = props => {\n  return React.createElement(\"form\", {\n    onSubmit: props.handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: d.messages,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(Field, {\n    name: \"MessageTextArea\",\n    component: TextAreaDialogsMessage,\n    placeholder: \"Enter your message here\",\n    validate: [required, maxValue300],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: d.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \" send message\"))))));\n};\n\nconst ReduxMessageWithUserForm = reduxForm({\n  form: 'messages'\n})(MessageWithUserForm);\n\nconst MessagesWithUser = props => {\n  let MessagesSemdedDate = DateTransform(props.MessagesData.DialogsMessages.items.addedAt);\n\n  const SendNewMessage = Formdata => {\n    props.SendNewMessageThunk(props.DialoguserID, Formdata.MessageTextArea);\n  };\n\n  let _useState = useState(props.MessagesData),\n      _useState2 = _slicedToArray(_useState, 2),\n      MessagesData = _useState2[0],\n      SetMessagesData = _useState2[1];\n\n  useEffect(() => {\n    SetMessagesData(props.MessagesData);\n  }, [props.MessagesData]);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, MessagesData.DialogsMessages ? MessagesData.DialogsMessages.items.map(item => {\n    return React.createElement(\"div\", {\n      className: mwuStyles.fontStyles,\n      key: item.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: mwuStyles.dateStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Sended at : \\xA0\\xA0\", MessagesSemdedDate[0] + \"/\" + MessagesData[1]), React.createElement(\"div\", {\n      className: mwuStyles.MessageFormStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, item.senderName, \"  \\xA0\\xA0\", item.addedAt.split(\"T\")[1].split(\".\")[0].split(\":\")[0], \":\", item.addedAt.split(\"T\")[1].split(\".\")[0].split(\":\")[1]), React.createElement(NavLink, {\n      to: \"/Profile/\".concat(item.senderId),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, item.senderId !== props.MyID ? React.createElement(\"img\", {\n      className: mwuStyles.img,\n      src: props.MessagesData.InterlocutorAvatar != null ? props.MessagesData.InterlocutorAvatar : UserPhoto,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }) : React.createElement(\"img\", {\n      className: mwuStyles.img,\n      src: props.MessagesData.UserAvatar != null ? props.MessagesData.UserAvatar : UserPhoto,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: mwuStyles.messageText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"\\xA0\\xA0  \", item.body), React.createElement(DeleteMessage, {\n      DialoguserID: props.DialoguserID,\n      MessageID: item.id,\n      DeleteMessageThunk: props.DeleteMessageThunk,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, item.viewed && React.createElement(\"img\", {\n      src: Viewed,\n      className: mwuStyles.viewed,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }))));\n  }) : React.createElement(Preloader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }), props.MessagesData.DialogsMessages ? React.createElement(React.Fragment, null, React.createElement(ReduxMessageWithUserForm, Object.assign({\n    onSubmit: SendNewMessage\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }))) : React.createElement(Preloader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }));\n};\n\nexport default MessagesWithUser;","map":{"version":3,"sources":["H:\\js_projects\\1\\my-app\\src\\components\\Dialogs\\Message\\MessagesWithUser.jsx"],"names":["React","useEffect","useState","Preloader","NavLink","mwuStyles","UserPhoto","Viewed","MaxLengthCreator","required","d","Field","reduxForm","TextAreaDialogsMessage","Paginator","DeleteMessage","DateTransform","maxValue300","MessageWithUserForm","props","handleSubmit","messages","button","ReduxMessageWithUserForm","form","MessagesWithUser","MessagesSemdedDate","MessagesData","DialogsMessages","items","addedAt","SendNewMessage","Formdata","SendNewMessageThunk","DialoguserID","MessageTextArea","SetMessagesData","map","item","fontStyles","id","dateStyle","MessageFormStyle","senderName","split","senderId","MyID","img","InterlocutorAvatar","UserAvatar","messageText","body","DeleteMessageThunk","viewed"],"mappings":"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","sourcesContent":["import React, {useEffect,useState} from \"react\"\r\nimport Preloader from \"../../assetss/common/Loader/Loader\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport mwuStyles from \"./Messages.module.css\"\r\nimport UserPhoto from \"../../assetss/images/userPhoto.jpg\";\r\nimport Viewed from \"../../assetss/images/viewed1.jpg\";\r\nimport {MaxLengthCreator, required} from \"../../utils/validators\";\r\nimport d from \"../Dialogs.module.css\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {TextAreaDialogsMessage} from \"../../assetss/common/ValidatorsComponents/ElementsValidators\";\r\nimport Paginator from \"../../assetss/common/Paginator/Paginator\";\r\nimport DeleteMessage from \"./DeleteMessage\";\r\nimport DateTransform from \"../../../data/ToDoListsReducer\"\r\n\r\n\r\nconst maxValue300 = MaxLengthCreator(300)\r\n\r\nconst MessageWithUserForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div >\r\n\r\n                <div className={d.messages}>\r\n                    <div>\r\n                        <div>\r\n                            <Field name={\"MessageTextArea\"}\r\n                                   component={TextAreaDialogsMessage}\r\n                                   placeholder={\"Enter your message here\"}\r\n                                   validate={[required, maxValue300]}/>\r\n                        </div>\r\n                        <div>\r\n                            <button className={d.button}> send message</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst ReduxMessageWithUserForm = reduxForm({form: 'messages'})(MessageWithUserForm)\r\n\r\n\r\nconst MessagesWithUser = (props) => {\r\n\r\n    let MessagesSemdedDate = DateTransform( props.MessagesData.DialogsMessages.items.addedAt)\r\n    \r\n    const SendNewMessage = (Formdata) => {\r\n        props.SendNewMessageThunk(props.DialoguserID, Formdata.MessageTextArea)\r\n    }\r\n\r\n    let [MessagesData, SetMessagesData] = useState(props.MessagesData)\r\n\r\n\r\n    useEffect(() => {\r\n        SetMessagesData(props.MessagesData)\r\n        }, [props.MessagesData]\r\n    )\r\n\r\n    return <div>\r\n        {MessagesData.DialogsMessages  ?\r\n            MessagesData.DialogsMessages.items.map(item => {\r\n                return (\r\n                    <div  className={mwuStyles.fontStyles} key={item.id} >\r\n                        <div className={mwuStyles.dateStyle}>\r\n                            Sended at : &nbsp;&nbsp;\r\n                            {MessagesSemdedDate[0]+\"/\"+MessagesData[1]}\r\n                        </div>\r\n\r\n\r\n                        <div className={mwuStyles.MessageFormStyle}>\r\n                            <div>\r\n\r\n                                {item.senderName}  &nbsp;&nbsp;\r\n                                {item.addedAt.split(\"T\")[1].split(\".\")[0].split(\":\")[0]}:\r\n                                {item.addedAt.split(\"T\")[1].split(\".\")[0].split(\":\")[1]}\r\n                            </div>\r\n\r\n\r\n\r\n                            <NavLink to={`/Profile/${item.senderId}`}>\r\n                                {item.senderId !== props.MyID ?\r\n                                    <img className={mwuStyles.img}\r\n                                         src={props.MessagesData.InterlocutorAvatar != null\r\n                                             ? props.MessagesData.InterlocutorAvatar\r\n                                             : UserPhoto}/>\r\n                                    :\r\n                                    <img className={mwuStyles.img}\r\n                                         src={props.MessagesData.UserAvatar!= null ?\r\n                                             props.MessagesData.UserAvatar\r\n                                             : UserPhoto}/>\r\n                                }\r\n                            </NavLink>\r\n\r\n                            <div className={mwuStyles.messageText}>\r\n                                &nbsp;&nbsp;  {item.body}\r\n                            </div>\r\n                            <DeleteMessage DialoguserID={props.DialoguserID}\r\n                                           MessageID={item.id}\r\n                                           DeleteMessageThunk={props.DeleteMessageThunk}\r\n                            />\r\n                            <div>\r\n                                {item.viewed &&\r\n                                <img src={Viewed} className={mwuStyles.viewed}/>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            })\r\n\r\n            : <Preloader/>\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n        {props.MessagesData.DialogsMessages ?\r\n            <>\r\n                <ReduxMessageWithUserForm onSubmit={SendNewMessage} {...props} />\r\n            {/*<Paginator OnChangedPage={props.OnChangedPage}\r\n                       currentPage={props.currentPage}\r\n                       totalUsersCount={props.MessagesData.DialogsMessages.totalCount}\r\n                       pageSize={props.pageSize}\r\n                       PortionSize={props.PortionSize}\r\n            />*/}\r\n            </>\r\n            : <Preloader/>\r\n        }\r\n    </div>\r\n\r\n}\r\nexport default MessagesWithUser"]},"metadata":{},"sourceType":"module"}