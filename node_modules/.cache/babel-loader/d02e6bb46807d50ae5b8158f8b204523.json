{"ast":null,"code":"import _slicedToArray from \"H:\\\\js_projects\\\\1\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"H:\\\\js_projects\\\\1\\\\my-app\\\\src\\\\components\\\\ToDoLists\\\\ToDoList.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport TDLS from \"./ToDoLists.module.css\";\nimport ToDoListMenuIcon from \"./ListMenu\";\nimport SaveButton from \"./SaveButton\";\nimport GoBackButton from \"./GoBackButton\";\nimport TitleChangingField from \"./TitleChangeField\";\nimport AddNewTask from \"./AddNewTask/AddNewTask\";\nimport ShowTasksButton from \"./ToDoListTasks/ShowTasksButton\";\nimport HideTasksButton from \"./ToDoListTasks/HideTasksButton\";\nimport Tasks from \"./ToDoListTasks/Tasks\";\n\nconst ToDoList = props => {\n  debugger;\n\n  let _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      EditTitleMode = _useState2[0],\n      SetEditTitleMode = _useState2[1];\n\n  let _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      ShowTasksMode = _useState4[0],\n      SetShowTasksMode = _useState4[1];\n\n  let _useState5 = useState(props.title),\n      _useState6 = _slicedToArray(_useState5, 2),\n      CurrentToDoListTitle = _useState6[0],\n      SetToDoListTitle = _useState6[1];\n\n  const EditTitleModeON = () => {\n    SetEditTitleMode(true);\n  };\n\n  const EditTitleModeOFF = () => {\n    SetEditTitleMode(false);\n  };\n\n  const OnToDoListTitleChanging = el => {\n    SetToDoListTitle(el.currentTarget.value);\n  };\n\n  const ShowTask = () => {\n    props.GetToDoListTasksThunk(props.ListID, props.ToDoListTasksCount, props.ToDoListTasksPage);\n    SetShowTasksMode(true);\n  };\n\n  const ShowTaskModeOFF = () => {\n    SetShowTasksMode(false);\n  };\n\n  useEffect(() => {\n    SetToDoListTitle(props.title);\n  }, [props.title]);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, !EditTitleMode ? React.createElement(\"div\", {\n    className: TDLS.ToDolistsWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(ToDoListMenuIcon, {\n    ListID: props.ListID,\n    EditTitleModeON: EditTitleModeON,\n    Del: props.DeleteToDoListThunk,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: TDLS.ToDoListTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, props.title)) : React.createElement(\"div\", {\n    className: TDLS.ToDolistsChanchingWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(SaveButton, {\n    ListID: props.ListID,\n    ChangeToDoListTitleThunk: props.ChangeToDoListTitleThunk,\n    EditTitleModeOFF: EditTitleModeOFF,\n    CurrentToDoListTitle: CurrentToDoListTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), React.createElement(GoBackButton, {\n    HandleOnClick: EditTitleModeOFF,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: TDLS.ToDoListChangingInput,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(TitleChangingField, {\n    OnToDoListTitleChanging: OnToDoListTitleChanging,\n    CurrentToDoListTitle: CurrentToDoListTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }))), ShowTasksMode ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(AddNewTask, {\n    ListID: props.ListID,\n    AddNewTaskThunk: props.AddNewTaskThunk,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, props.ToDoListTasks.length > 0 ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(Tasks, {\n    ToDoListTasks: props.ToDoListTasks,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  })) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: TDLS.TasksContent,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, \"you don't have any task for this todo list\"), React.createElement(\"div\", {\n    className: TDLS.HideTasksButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(HideTasksButton, {\n    HandleOnClick: ShowTaskModeOFF,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }))))) : React.createElement(\"div\", {\n    className: TDLS.ShowTasksButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(ShowTasksButton, {\n    HandleOnClick: ShowTask,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  })));\n};\n\nexport default ToDoList;","map":{"version":3,"sources":["H:\\js_projects\\1\\my-app\\src\\components\\ToDoLists\\ToDoList.jsx"],"names":["React","useState","useEffect","TDLS","ToDoListMenuIcon","SaveButton","GoBackButton","TitleChangingField","AddNewTask","ShowTasksButton","HideTasksButton","Tasks","ToDoList","props","EditTitleMode","SetEditTitleMode","ShowTasksMode","SetShowTasksMode","title","CurrentToDoListTitle","SetToDoListTitle","EditTitleModeON","EditTitleModeOFF","OnToDoListTitleChanging","el","currentTarget","value","ShowTask","GetToDoListTasksThunk","ListID","ToDoListTasksCount","ToDoListTasksPage","ShowTaskModeOFF","ToDolistsWrapper","DeleteToDoListThunk","ToDoListTitle","ToDolistsChanchingWrapper","ChangeToDoListTitleThunk","ToDoListChangingInput","AddNewTaskThunk","ToDoListTasks","length","TasksContent"],"mappings":";;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,gBAAP,MAA6B,YAA7B;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,kBAAP,MAA+B,oBAA/B;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,eAAP,MAA4B,iCAA5B;AACA,OAAOC,eAAP,MAA4B,iCAA5B;AACA,OAAOC,KAAP,MAAkB,uBAAlB;;AAGA,MAAMC,QAAQ,GAAIC,KAAD,IAAU;AAC3B;;AAD2B,kBAEqBZ,QAAQ,CAAC,KAAD,CAF7B;AAAA;AAAA,MAEda,aAFc;AAAA,MAECC,gBAFD;;AAAA,mBAGoBd,QAAQ,CAAC,KAAD,CAH5B;AAAA;AAAA,MAGde,aAHc;AAAA,MAGAC,gBAHA;;AAAA,mBAI0BhB,QAAQ,CAACY,KAAK,CAACK,KAAP,CAJlC;AAAA;AAAA,MAIdC,oBAJc;AAAA,MAIOC,gBAJP;;AAMnB,QAAMC,eAAe,GAAG,MAAI;AACxBN,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACH,GAFD;;AAGA,QAAMO,gBAAgB,GAAG,MAAI;AACzBP,IAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACH,GAFD;;AAIA,QAAMQ,uBAAuB,GAAIC,EAAD,IAAO;AACnCJ,IAAAA,gBAAgB,CAACI,EAAE,CAACC,aAAH,CAAiBC,KAAlB,CAAhB;AACH,GAFD;;AAIC,QAAMC,QAAQ,GAAG,MAAI;AACjBd,IAAAA,KAAK,CAACe,qBAAN,CAA4Bf,KAAK,CAACgB,MAAlC,EAAyChB,KAAK,CAACiB,kBAA/C,EAAkEjB,KAAK,CAACkB,iBAAxE;AACAd,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACD,GAHH;;AAIE,QAAMe,eAAe,GAAG,MAAI;AACxBf,IAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACH,GAFD;;AAKPf,EAAAA,SAAS,CAAC,MAAM;AACZkB,IAAAA,gBAAgB,CAACP,KAAK,CAACK,KAAP,CAAhB;AACC,GAFI,EAEF,CAACL,KAAK,CAACK,KAAP,CAFE,CAAT;AAKA,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACF,CAACJ,aAAD,GACG;AAAK,IAAA,SAAS,EAAEX,IAAI,CAAC8B,gBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI,oBAAC,gBAAD;AAAkB,IAAA,MAAM,EAAEpB,KAAK,CAACgB,MAAhC;AACkB,IAAA,eAAe,EAAER,eADnC;AAEkB,IAAA,GAAG,EAAER,KAAK,CAACqB,mBAF7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAOI;AAAK,IAAA,SAAS,EAAE/B,IAAI,CAACgC,aAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKtB,KAAK,CAACK,KADX,CAPJ,CADH,GAaG;AAAK,IAAA,SAAS,EAAEf,IAAI,CAACiC,yBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,UAAD;AAAY,IAAA,MAAM,EAAEvB,KAAK,CAACgB,MAA1B;AAAkC,IAAA,wBAAwB,EAAEhB,KAAK,CAACwB,wBAAlE;AACY,IAAA,gBAAgB,EAAEf,gBAD9B;AACgD,IAAA,oBAAoB,EAAEH,oBADtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAGgB,oBAAC,YAAD;AAAc,IAAA,aAAa,EAAEG,gBAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHhB,CADJ,EAMI;AAAK,IAAA,SAAS,EAAEnB,IAAI,CAACmC,qBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,kBAAD;AAAoB,IAAA,uBAAuB,EAAEf,uBAA7C;AACoB,IAAA,oBAAoB,EAAEJ,oBAD1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CANJ,CAdD,EA2BFH,aAAa,GACV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,UAAD;AAAY,IAAA,MAAM,EAAEH,KAAK,CAACgB,MAA1B;AAAkC,IAAA,eAAe,EAAEhB,KAAK,CAAC0B,eAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK1B,KAAK,CAAC2B,aAAN,CAAoBC,MAApB,GAA6B,CAA7B,GACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACD,oBAAC,KAAD;AAAO,IAAA,aAAa,EAAE5B,KAAK,CAAC2B,aAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADC,CADH,GAMG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,SAAS,EAAErC,IAAI,CAACuC,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kDADJ,EAKI;AAAK,IAAA,SAAS,EAAEvC,IAAI,CAACO,eAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,eAAD;AAAiB,IAAA,aAAa,EAAEsB,eAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CALJ,CAPR,CAFD,CADU,GAwBV;AAAK,IAAA,SAAS,EAAE7B,IAAI,CAACM,eAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,eAAD;AAAkB,IAAA,aAAa,EAAEkB,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAnDD,CAAP;AA2DH,CA1FD;;AA2FA,eAAef,QAAf","sourcesContent":["import React,{useState,useEffect} from \"react\"\r\nimport TDLS from \"./ToDoLists.module.css\";\r\nimport ToDoListMenuIcon from \"./ListMenu\";\r\nimport SaveButton from \"./SaveButton\";\r\nimport GoBackButton from \"./GoBackButton\";\r\nimport TitleChangingField from \"./TitleChangeField\";\r\nimport AddNewTask from \"./AddNewTask/AddNewTask\";\r\nimport ShowTasksButton from \"./ToDoListTasks/ShowTasksButton\";\r\nimport HideTasksButton from \"./ToDoListTasks/HideTasksButton\";\r\nimport Tasks from \"./ToDoListTasks/Tasks\";\r\n\r\n\r\nconst ToDoList = (props) =>{\r\ndebugger\r\n        let [EditTitleMode, SetEditTitleMode] = useState(false)\r\n        let [ShowTasksMode,SetShowTasksMode] = useState(false)\r\n        let [CurrentToDoListTitle,SetToDoListTitle] =useState(props.title)\r\n\r\n        const EditTitleModeON = ()=>{\r\n            SetEditTitleMode(true)\r\n        }\r\n        const EditTitleModeOFF = ()=>{\r\n            SetEditTitleMode(false)\r\n        }\r\n\r\n        const OnToDoListTitleChanging = (el) =>{\r\n            SetToDoListTitle(el.currentTarget.value)\r\n        }\r\n\r\n         const ShowTask = ()=>{\r\n             props.GetToDoListTasksThunk(props.ListID,props.ToDoListTasksCount,props.ToDoListTasksPage)\r\n             SetShowTasksMode(true)\r\n           }\r\n           const ShowTaskModeOFF = ()=>{\r\n               SetShowTasksMode(false)\r\n           }\r\n\r\n\r\n    useEffect(() => {\r\n        SetToDoListTitle(props.title)\r\n        }, [props.title]\r\n    )\r\n\r\n    return <div>\r\n        {!EditTitleMode ?\r\n            <div className={TDLS.ToDolistsWrapper}>\r\n\r\n                <ToDoListMenuIcon ListID={props.ListID}\r\n                                  EditTitleModeON={EditTitleModeON}\r\n                                  Del={props.DeleteToDoListThunk}\r\n                />\r\n\r\n                <div className={TDLS.ToDoListTitle}>\r\n                    {props.title}\r\n                </div>\r\n            </div>\r\n            :\r\n            <div className={TDLS.ToDolistsChanchingWrapper}>\r\n                <div>\r\n                <SaveButton ListID={props.ListID} ChangeToDoListTitleThunk={props.ChangeToDoListTitleThunk}\r\n                            EditTitleModeOFF={EditTitleModeOFF} CurrentToDoListTitle={CurrentToDoListTitle} />\r\n                                <GoBackButton HandleOnClick={EditTitleModeOFF}/>\r\n            </div>\r\n                <div className={TDLS.ToDoListChangingInput}>\r\n                    <TitleChangingField OnToDoListTitleChanging={OnToDoListTitleChanging}\r\n                                        CurrentToDoListTitle={CurrentToDoListTitle}/>\r\n                </div>\r\n\r\n            </div>\r\n        }\r\n        {ShowTasksMode ?\r\n            <div>\r\n            <AddNewTask ListID={props.ListID} AddNewTaskThunk={props.AddNewTaskThunk}/>\r\n             <div>\r\n                 {props.ToDoListTasks.length > 0 ?\r\n                     <div>\r\n                    <Tasks ToDoListTasks={props.ToDoListTasks}/>\r\n                     </div>\r\n\r\n                     :\r\n                     <div >\r\n                         <h2 className={TDLS.TasksContent}>\r\n                             you don't have any task for this todo list\r\n                         </h2>\r\n\r\n                         <div className={TDLS.HideTasksButton}>\r\n                             <HideTasksButton HandleOnClick={ShowTaskModeOFF}/>\r\n                         </div>\r\n                     </div>\r\n                 }\r\n            </div>\r\n\r\n            </div>\r\n            :\r\n            <div className={TDLS.ShowTasksButton}>\r\n                <ShowTasksButton  HandleOnClick={ShowTask}/>\r\n            </div>\r\n\r\n        }\r\n\r\n\r\n    </div>\r\n}\r\nexport default ToDoList"]},"metadata":{},"sourceType":"module"}