{"ast":null,"code":"var _jsxFileName = \"H:\\\\js_projects\\\\1\\\\my-app\\\\src\\\\components\\\\Header\\\\HeaderContainer.jsx\";\nimport React from 'react';\nimport * as axios from \"axios\";\nimport Header from \"./Header\";\nimport Preloader from \"../assetss/common/Loader/Loader\";\nimport { connect } from \"react-redux\";\nimport { SetAuthUser, ToggleIsFetching } from \"../../data/AuthReducer\";\n\nclass HeaderContainer extends React.Component {\n  componentDidMount() {\n    // это что-то типо конструктора, принято все вещи, которые нарушают идею чистых функцию писать тут\n    this.props.ToggleIsFetching(true);\n    axios.get(\"https://social-network.samuraijs.com/api/1.0/auth/me\").then(responce => {\n      if (responce.data.resultCode === 0) {\n        this.props.SetAuthUser(responce.data.data.login);\n      }\n\n      this.props.ToggleIsFetching(false);\n      /*      this.props.SetAuthUser(responce.data.data.)*/\n    });\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, this.props.IsFetching ? React.createElement(Preloader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }) : null, React.createElement(Header, Object.assign({}, this.props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    })));\n  }\n\n}\n\nlet MapStateToProps = state => ({\n  IsFetching: state.Auth.IsFetching\n});\n\nexport default HeaderContainer = connect(MapStateToProps, {\n  SetAuthUser,\n  ToggleIsFetching\n})(HeaderContainer);","map":{"version":3,"sources":["H:\\js_projects\\1\\my-app\\src\\components\\Header\\HeaderContainer.jsx"],"names":["React","axios","Header","Preloader","connect","SetAuthUser","ToggleIsFetching","HeaderContainer","Component","componentDidMount","props","get","then","responce","data","resultCode","login","render","IsFetching","MapStateToProps","state","Auth"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,SAAP,MAAsB,iCAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,WAAR,EAAoBC,gBAApB,QAA2C,wBAA3C;;AAGA,MAAMC,eAAN,SAA8BP,KAAK,CAACQ,SAApC,CAA8C;AAC1CC,EAAAA,iBAAiB,GAAG;AAChB;AACA,SAAKC,KAAL,CAAWJ,gBAAX,CAA4B,IAA5B;AACAL,IAAAA,KAAK,CAACU,GAAN,yDACKC,IADL,CACUC,QAAQ,IAAI;AACd,UAAIA,QAAQ,CAACC,IAAT,CAAcC,UAAd,KAA6B,CAAjC,EAAmC;AAC/B,aAAKL,KAAL,CAAWL,WAAX,CAAuBQ,QAAQ,CAACC,IAAT,CAAcA,IAAd,CAAmBE,KAA1C;AACH;;AACD,WAAKN,KAAL,CAAWJ,gBAAX,CAA4B,KAA5B;AACN;AACG,KAPL;AAQH;;AACDW,EAAAA,MAAM,GAAG;AACL,WAAO,0CACN,KAAKP,KAAL,CAAWQ,UAAX,GAAwB,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAxB,GAAsC,IADhC,EAEL,oBAAC,MAAD,oBAAY,KAAKR,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAFK,CAAP;AAIH;;AAlByC;;AAqB9C,IAAIS,eAAe,GAAIC,KAAD,KAAW;AAACF,EAAAA,UAAU,EAAGE,KAAK,CAACC,IAAN,CAAWH;AAAzB,CAAX,CAAtB;;AAEA,eAAeX,eAAe,GAAGH,OAAO,CAACe,eAAD,EAAkB;AAACd,EAAAA,WAAD;AAAaC,EAAAA;AAAb,CAAlB,CAAP,CAAyDC,eAAzD,CAAjC","sourcesContent":["import React from 'react';\r\nimport * as axios from \"axios\";\r\nimport Header from \"./Header\";\r\nimport Preloader from \"../assetss/common/Loader/Loader\";\r\nimport {connect} from \"react-redux\";\r\nimport {SetAuthUser,ToggleIsFetching} from \"../../data/AuthReducer\";\r\n\r\n\r\nclass HeaderContainer extends React.Component {\r\n    componentDidMount() {\r\n        // это что-то типо конструктора, принято все вещи, которые нарушают идею чистых функцию писать тут\r\n        this.props.ToggleIsFetching(true)\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/auth/me`)\r\n            .then(responce => {\r\n                if (responce.data.resultCode === 0){\r\n                    this.props.SetAuthUser(responce.data.data.login)\r\n                }\r\n                this.props.ToggleIsFetching(false)\r\n          /*      this.props.SetAuthUser(responce.data.data.)*/\r\n            })\r\n    }\r\n    render() {\r\n        return <>\r\n        {this.props.IsFetching ? <Preloader/> :null}\r\n          <Header {...this.props} />\r\n          </>\r\n    }\r\n\r\n}\r\nlet MapStateToProps = (state) =>({IsFetching : state.Auth.IsFetching})\r\n\r\nexport default HeaderContainer = connect(MapStateToProps, {SetAuthUser,ToggleIsFetching})(HeaderContainer);\r\n"]},"metadata":{},"sourceType":"module"}