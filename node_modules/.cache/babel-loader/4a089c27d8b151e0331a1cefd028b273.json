{"ast":null,"code":"var _jsxFileName = \"H:\\\\js_projects\\\\1\\\\my-app\\\\src\\\\components\\\\Profile\\\\ProfileCOntainer.jsx\";\nimport React from 'react';\nimport Profile from \"./Profile\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from 'react-router-dom';\nimport { setProfileOfUser } from '../../data/ProfileReduser';\nimport { getProfile } from \"../../API/requests\";\n\nclass ProfileContainer extends React.Component {\n  componentDidMount() {\n    let ProfileID = this.props.match.params.userID;\n\n    if (!ProfileID) {\n      ProfileID = 2;\n    } // это что-то типо конструктора, принято все вещи, которые нарушают идею чистых функцию писать тут\n\n\n    getProfile(ProfileID).then(data => {\n      this.props.setProfileOfUser(data);\n    });\n  }\n\n  render() {\n    return React.createElement(Profile, Object.assign({}, this.props, {\n      profile: this.props.profile,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }));\n  }\n\n} // тут объект обернут скобками т.к мы хотим что бы функция вернула объект со свойством\n\n\nlet MapStateToProps = state => ({\n  profile: state.ProfileData.profile\n});\n/*тут короче понадобилось достучаться до линка и взять от туда айдику юзера\r\n* что бы это сделать можно конечно пойти и взять всю строку урла, разбить её на части и тд. но есть\r\n* свпособ проще, так же как и коннект существует метод WithRouter, он прокинет в пропсах нужную нам инфу*/\n\n\nlet WithRouterComponent = withRouter(ProfileContainer);\nexport default connect(MapStateToProps, {\n  setProfileOfUser\n})(WithRouterComponent);","map":{"version":3,"sources":["H:\\js_projects\\1\\my-app\\src\\components\\Profile\\ProfileCOntainer.jsx"],"names":["React","Profile","connect","withRouter","setProfileOfUser","getProfile","ProfileContainer","Component","componentDidMount","ProfileID","props","match","params","userID","then","data","render","profile","MapStateToProps","state","ProfileData","WithRouterComponent"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,SAAQC,gBAAR,QAA+B,2BAA/B;AACA,SAAQC,UAAR,QAAyB,oBAAzB;;AAGA,MAAMC,gBAAN,SAA+BN,KAAK,CAACO,SAArC,CAA+C;AAC3CC,EAAAA,iBAAiB,GAAG;AAEhB,QAAIC,SAAS,GAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,MAAxC;;AACA,QAAG,CAACJ,SAAJ,EAAc;AACVA,MAAAA,SAAS,GAAG,CAAZ;AACH,KALe,CAMhB;;;AAEIJ,IAAAA,UAAU,CAACI,SAAD,CAAV,CAAsBK,IAAtB,CAA2BC,IAAI,IAAI;AAC/B,WAAKL,KAAL,CAAWN,gBAAX,CAA4BW,IAA5B;AACH,KAFD;AAGP;;AAEDC,EAAAA,MAAM,GAAG;AAEL,WACI,oBAAC,OAAD,oBAAa,KAAKN,KAAlB;AAAyB,MAAA,OAAO,EAAE,KAAKA,KAAL,CAAWO,OAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADJ;AAGH;;AAnB0C,C,CAsB/C;;;AACA,IAAIC,eAAe,GAAIC,KAAD,KAAY;AAACF,EAAAA,OAAO,EAAEE,KAAK,CAACC,WAAN,CAAkBH;AAA5B,CAAZ,CAAtB;AACA;;;;;AAGA,IAAII,mBAAmB,GAAGlB,UAAU,CAACG,gBAAD,CAApC;AACA,eAAeJ,OAAO,CAACgB,eAAD,EAAkB;AAACd,EAAAA;AAAD,CAAlB,CAAP,CAA6CiB,mBAA7C,CAAf","sourcesContent":["import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {withRouter} from 'react-router-dom'\r\nimport {setProfileOfUser} from '../../data/ProfileReduser'\r\nimport {getProfile} from \"../../API/requests\"\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount() {\r\n\r\n        let ProfileID = this.props.match.params.userID\r\n        if(!ProfileID){\r\n            ProfileID = 2\r\n        }\r\n        // это что-то типо конструктора, принято все вещи, которые нарушают идею чистых функцию писать тут\r\n\r\n            getProfile(ProfileID).then(data => {\r\n                this.props.setProfileOfUser(data)\r\n            })\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Profile {...this.props} profile={this.props.profile}/>\r\n        )\r\n    }\r\n}\r\n\r\n// тут объект обернут скобками т.к мы хотим что бы функция вернула объект со свойством\r\nlet MapStateToProps = (state) => ({profile: state.ProfileData.profile})\r\n/*тут короче понадобилось достучаться до линка и взять от туда айдику юзера\r\n* что бы это сделать можно конечно пойти и взять всю строку урла, разбить её на части и тд. но есть\r\n* свпособ проще, так же как и коннект существует метод WithRouter, он прокинет в пропсах нужную нам инфу*/\r\nlet WithRouterComponent = withRouter(ProfileContainer)\r\nexport default connect(MapStateToProps, {setProfileOfUser})(WithRouterComponent);"]},"metadata":{},"sourceType":"module"}