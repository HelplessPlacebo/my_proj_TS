{"ast":null,"code":"var _jsxFileName = \"H:\\\\js_projects\\\\1\\\\my-app\\\\src\\\\components\\\\Dialogs\\\\Message\\\\MessagesContainer.jsx\";\nimport React from 'react';\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport { withRouter } from 'react-router-dom';\nimport { GetIsFetchingDialogs, GetMessagesDataSelector } from \"../../../data/DialogsSelectors\";\nimport MessagesWithUser from \"./MessagesWithUser\";\nimport { AuthRedirect } from \"../../hocs/AuthRedirect\";\nimport { SendNewMessageThunk, GetNewMessagesThunk, GetInterlocutorAvatarThunk, setUserAvatarForDialogs, GetProfileAvatarThunk, DeleteMessageThunk, GetNewMessagesCountThunk } from \"../../../data/DIalogsReduser\";\nimport { GetUserIDSelector } from \"../../../data/AuthSelectors\";\nimport { GetNewMessagesCountSelector } from \"../../../data/InitialozationSelectors\";\nimport Preloader from \"../../assetss/common/Loader/Loader\";\n\nclass MessagesContainer extends React.Component {\n  componentDidMount() {\n    const DialoguserID = this.props.match.params.userID;\n    this.props.GetNewMessagesThunk(DialoguserID);\n    this.props.GetInterlocutorAvatarThunk(DialoguserID);\n    this.props.GetProfileAvatarThunk(this.props.MyID);\n\n    if (this.props.NewMessagesCount > 0) {\n      this.props.GetNewMessagesCountThunk();\n    }\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, this.props.IsFetching ? React.createElement(Preloader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }) : React.createElement(MessagesWithUser, Object.assign({}, this.props, {\n      DialoguserID: this.props.match.params.userID,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    })));\n  }\n\n}\n\nlet StateToProps = state => ({\n  MessagesData: GetMessagesDataSelector(state),\n  MyID: GetUserIDSelector(state),\n  NewMessagesCount: GetNewMessagesCountSelector(state),\n  IsFetching: GetIsFetchingDialogs(state)\n});\n\nexport default compose(connect(StateToProps, {\n  GetNewMessagesThunk,\n  SendNewMessageThunk,\n  GetInterlocutorAvatarThunk,\n  setUserAvatarForDialogs,\n  GetProfileAvatarThunk,\n  DeleteMessageThunk,\n  GetNewMessagesCountThunk\n}), AuthRedirect, withRouter)(MessagesContainer);","map":{"version":3,"sources":["H:\\js_projects\\1\\my-app\\src\\components\\Dialogs\\Message\\MessagesContainer.jsx"],"names":["React","connect","compose","withRouter","GetIsFetchingDialogs","GetMessagesDataSelector","MessagesWithUser","AuthRedirect","SendNewMessageThunk","GetNewMessagesThunk","GetInterlocutorAvatarThunk","setUserAvatarForDialogs","GetProfileAvatarThunk","DeleteMessageThunk","GetNewMessagesCountThunk","GetUserIDSelector","GetNewMessagesCountSelector","Preloader","MessagesContainer","Component","componentDidMount","DialoguserID","props","match","params","userID","MyID","NewMessagesCount","render","IsFetching","StateToProps","state","MessagesData"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,OAAR,QAAsB,OAAtB;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,SACIC,oBADJ,EAEIC,uBAFJ,QAGO,gCAHP;AAIA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,SAAQC,YAAR,QAA2B,yBAA3B;AACA,SACIC,mBADJ,EAEIC,mBAFJ,EAGIC,0BAHJ,EAIIC,uBAJJ,EAKIC,qBALJ,EAMIC,kBANJ,EAOIC,wBAPJ,QAQO,8BARP;AASA,SAAQC,iBAAR,QAAgC,6BAAhC;AACA,SAAQC,2BAAR,QAA0C,uCAA1C;AACA,OAAOC,SAAP,MAAsB,oCAAtB;;AAEA,MAAMC,iBAAN,SAAgClB,KAAK,CAACmB,SAAtC,CAAgD;AAE5CC,EAAAA,iBAAiB,GAAG;AAChB,UAAMC,YAAY,GAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,MAA7C;AACA,SAAKH,KAAL,CAAWb,mBAAX,CAA+BY,YAA/B;AACA,SAAKC,KAAL,CAAWZ,0BAAX,CAAsCW,YAAtC;AACA,SAAKC,KAAL,CAAWV,qBAAX,CAAiC,KAAKU,KAAL,CAAWI,IAA5C;;AACA,QAAG,KAAKJ,KAAL,CAAWK,gBAAX,GAA8B,CAAjC,EAAmC;AAC/B,WAAKL,KAAL,CAAWR,wBAAX;AACH;AACJ;;AAGDc,EAAAA,MAAM,GAAG;AACL,WACI,0CAEI,KAAKN,KAAL,CAAWO,UAAX,GAAwB,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAxB,GACI,oBAAC,gBAAD,oBAAsB,KAAKP,KAA3B;AAAkC,MAAA,YAAY,EAAE,KAAKA,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,MAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAHR,CADJ;AASH;;AAvB2C;;AA2BhD,IAAIK,YAAY,GAAIC,KAAD,KAAY;AAC3BC,EAAAA,YAAY,EAAE3B,uBAAuB,CAAC0B,KAAD,CADV;AAE3BL,EAAAA,IAAI,EAAEX,iBAAiB,CAACgB,KAAD,CAFI;AAG3BJ,EAAAA,gBAAgB,EAAGX,2BAA2B,CAACe,KAAD,CAHnB;AAI3BF,EAAAA,UAAU,EAAGzB,oBAAoB,CAAC2B,KAAD;AAJN,CAAZ,CAAnB;;AAOA,eAAgB7B,OAAO,CAACD,OAAO,CAAC6B,YAAD,EAC3B;AACIrB,EAAAA,mBADJ;AACyBD,EAAAA,mBADzB;AAEIE,EAAAA,0BAFJ;AAEgCC,EAAAA,uBAFhC;AAGIC,EAAAA,qBAHJ;AAG0BC,EAAAA,kBAH1B;AAG6CC,EAAAA;AAH7C,CAD2B,CAAR,EAMnBP,YANmB,EAOnBJ,UAPmB,CAAP,CAOAe,iBAPA,CAAhB","sourcesContent":["import React from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {withRouter} from 'react-router-dom'\r\nimport {\r\n    GetIsFetchingDialogs,\r\n    GetMessagesDataSelector,\r\n} from \"../../../data/DialogsSelectors\";\r\nimport MessagesWithUser from \"./MessagesWithUser\";\r\nimport {AuthRedirect} from \"../../hocs/AuthRedirect\";\r\nimport {\r\n    SendNewMessageThunk,\r\n    GetNewMessagesThunk,\r\n    GetInterlocutorAvatarThunk,\r\n    setUserAvatarForDialogs,\r\n    GetProfileAvatarThunk,\r\n    DeleteMessageThunk,\r\n    GetNewMessagesCountThunk\r\n} from \"../../../data/DIalogsReduser\"\r\nimport {GetUserIDSelector} from \"../../../data/AuthSelectors\";\r\nimport {GetNewMessagesCountSelector} from \"../../../data/InitialozationSelectors\";\r\nimport Preloader from \"../../assetss/common/Loader/Loader\";\r\n\r\nclass MessagesContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        const DialoguserID = this.props.match.params.userID\r\n        this.props.GetNewMessagesThunk(DialoguserID)\r\n        this.props.GetInterlocutorAvatarThunk(DialoguserID)\r\n        this.props.GetProfileAvatarThunk(this.props.MyID)\r\n        if(this.props.NewMessagesCount > 0){\r\n            this.props.GetNewMessagesCountThunk()\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n            {\r\n                this.props.IsFetching ? <Preloader/> :\r\n                    <MessagesWithUser {...this.props} DialoguserID={this.props.match.params.userID}/>\r\n            }\r\n            </>\r\n\r\n        )\r\n    }\r\n}\r\n\r\n\r\nlet StateToProps = (state) => ({\r\n    MessagesData: GetMessagesDataSelector(state),\r\n    MyID: GetUserIDSelector(state),\r\n    NewMessagesCount : GetNewMessagesCountSelector(state),\r\n    IsFetching : GetIsFetchingDialogs(state)\r\n})\r\n\r\nexport default  compose(connect(StateToProps,\r\n    {\r\n        GetNewMessagesThunk, SendNewMessageThunk,\r\n        GetInterlocutorAvatarThunk, setUserAvatarForDialogs,\r\n        GetProfileAvatarThunk,DeleteMessageThunk,GetNewMessagesCountThunk\r\n    }),\r\n    AuthRedirect,\r\n    withRouter)(MessagesContainer)"]},"metadata":{},"sourceType":"module"}