{"ast":null,"code":"var _jsxFileName = \"H:\\\\js_projects\\\\1\\\\my-app\\\\src\\\\components\\\\Dialogs\\\\Message\\\\MessagesContainer.tsx\";\nimport React from 'react';\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport { withRouter } from 'react-router-dom';\nimport { GetIsFetchingDialogs, GetDialogsMessagesSelector, GetinterlocutorAvatarSelector, GetUserAvatarSelector } from \"../../../data/DialogsSelectors\";\nimport MessagesWithUser from \"./MessagesWithUser\";\nimport { AuthRedirect } from \"../../hocs/AuthRedirect\";\nimport { SendNewMessageThunk, GetNewMessagesThunk, GetInterlocutorAvatarThunk, GetProfileAvatarThunk, DeleteMessageThunk, GetNewMessagesCountThunk } from \"../../../data/DIalogsReduser\";\nimport { GetUserIDSelector } from \"../../../data/AuthSelectors\";\nimport { GetNewMessagesCountSelector } from \"../../../data/InitialozationSelectors\";\nimport Preloader from \"../../assetss/common/Loader/Loader\";\n\nclass MessagesContainer extends React.Component {\n  componentDidMount() {\n    const DialogUserID = this.props.match.params.userID;\n    this.props.GetNewMessagesThunk(DialogUserID);\n    this.props.GetInterlocutorAvatarThunk(DialogUserID);\n    this.props.GetProfileAvatarThunk(this.props.MyID);\n\n    if (this.props.NewMessagesCount > 0) {\n      this.props.GetNewMessagesCountThunk();\n    }\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, this.props.IsFetching ? React.createElement(Preloader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }) : React.createElement(MessagesWithUser, {\n      InterlocutorAvatar: this.props.InterlocutorAvatar,\n      UserAvatar: this.props.UserAvatar,\n      MyID: this.props.MyID,\n      DialogsMessages: this.props.DialogsMessages,\n      DeleteMessageThunk: this.props.DeleteMessageThunk,\n      SendNewMessageThunk: this.props.SendNewMessageThunk,\n      DialoguserID: this.props.match.params.userID,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }));\n  }\n\n}\n\nlet StateToProps = state => ({\n  DialogsMessages: GetDialogsMessagesSelector(state),\n  InterlocutorAvatar: GetinterlocutorAvatarSelector(state),\n  UserAvatar: GetUserAvatarSelector(state),\n  MyID: GetUserIDSelector(state),\n  NewMessagesCount: GetNewMessagesCountSelector(state),\n  IsFetching: GetIsFetchingDialogs(state)\n});\n\nexport default compose(connect(StateToProps, {\n  GetNewMessagesThunk,\n  SendNewMessageThunk,\n  GetInterlocutorAvatarThunk,\n  GetProfileAvatarThunk,\n  DeleteMessageThunk,\n  GetNewMessagesCountThunk\n}), AuthRedirect, withRouter)(MessagesContainer);","map":{"version":3,"sources":["H:\\js_projects\\1\\my-app\\src\\components\\Dialogs\\Message\\MessagesContainer.tsx"],"names":["React","connect","compose","withRouter","GetIsFetchingDialogs","GetDialogsMessagesSelector","GetinterlocutorAvatarSelector","GetUserAvatarSelector","MessagesWithUser","AuthRedirect","SendNewMessageThunk","GetNewMessagesThunk","GetInterlocutorAvatarThunk","GetProfileAvatarThunk","DeleteMessageThunk","GetNewMessagesCountThunk","GetUserIDSelector","GetNewMessagesCountSelector","Preloader","MessagesContainer","Component","componentDidMount","DialogUserID","props","match","params","userID","MyID","NewMessagesCount","render","IsFetching","InterlocutorAvatar","UserAvatar","DialogsMessages","StateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,OAAR,QAAsB,OAAtB;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,SACIC,oBADJ,EAC0BC,0BAD1B,EAEIC,6BAFJ,EAEmCC,qBAFnC,QAGO,gCAHP;AAIA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,SAAQC,YAAR,QAA2B,yBAA3B;AACA,SACIC,mBADJ,EAEIC,mBAFJ,EAGIC,0BAHJ,EAIIC,qBAJJ,EAKIC,kBALJ,EAMIC,wBANJ,QAOO,8BAPP;AAQA,SAAQC,iBAAR,QAAgC,6BAAhC;AACA,SAAQC,2BAAR,QAA0C,uCAA1C;AACA,OAAOC,SAAP,MAAsB,oCAAtB;;AAMA,MAAMC,iBAAN,SAAgCnB,KAAK,CAACoB,SAAtC,CAAyE;AAErEC,EAAAA,iBAAiB,GAAG;AAChB,UAAMC,YAAY,GAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,MAA7C;AACA,SAAKH,KAAL,CAAWZ,mBAAX,CAA+BW,YAA/B;AACA,SAAKC,KAAL,CAAWX,0BAAX,CAAsCU,YAAtC;AACA,SAAKC,KAAL,CAAWV,qBAAX,CAAiC,KAAKU,KAAL,CAAWI,IAA5C;;AACA,QAAG,KAAKJ,KAAL,CAAWK,gBAAX,GAA8B,CAAjC,EAAmC;AAC/B,WAAKL,KAAL,CAAWR,wBAAX;AACH;AACJ;;AAGDc,EAAAA,MAAM,GAAG;AAEL,WACI,0CAEI,KAAKN,KAAL,CAAWO,UAAX,GAAwB,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAxB,GACI,oBAAC,gBAAD;AAAkB,MAAA,kBAAkB,EAAE,KAAKP,KAAL,CAAWQ,kBAAjD;AACkB,MAAA,UAAU,EAAE,KAAKR,KAAL,CAAWS,UADzC;AAEkB,MAAA,IAAI,EAAE,KAAKT,KAAL,CAAWI,IAFnC;AAGkB,MAAA,eAAe,EAAE,KAAKJ,KAAL,CAAWU,eAH9C;AAIkB,MAAA,kBAAkB,EAAE,KAAKV,KAAL,CAAWT,kBAJjD;AAKkB,MAAA,mBAAmB,EAAE,KAAKS,KAAL,CAAWb,mBALlD;AAMkB,MAAA,YAAY,EAAE,KAAKa,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,MANxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHR,CADJ;AAeH;;AA9BoE;;AAkCzE,IAAIQ,YAAY,GAAIC,KAAD,KAAsD;AACrEF,EAAAA,eAAe,EAAG5B,0BAA0B,CAAC8B,KAAD,CADyB;AAErEJ,EAAAA,kBAAkB,EAAGzB,6BAA6B,CAAC6B,KAAD,CAFmB;AAGrEH,EAAAA,UAAU,EAAIzB,qBAAqB,CAAC4B,KAAD,CAHkC;AAIrER,EAAAA,IAAI,EAAEX,iBAAiB,CAACmB,KAAD,CAJ8C;AAKrEP,EAAAA,gBAAgB,EAAGX,2BAA2B,CAACkB,KAAD,CALuB;AAMrEL,EAAAA,UAAU,EAAG1B,oBAAoB,CAAC+B,KAAD;AANoC,CAAtD,CAAnB;;AASA,eAAgBjC,OAAO,CAACD,OAAO,CAA2FiC,YAA3F,EAC3B;AACIvB,EAAAA,mBADJ;AACyBD,EAAAA,mBADzB;AAEIE,EAAAA,0BAFJ;AAGIC,EAAAA,qBAHJ;AAG0BC,EAAAA,kBAH1B;AAG6CC,EAAAA;AAH7C,CAD2B,CAAR,EAMnBN,YANmB,EAOnBN,UAPmB,CAAP,CAOAgB,iBAPA,CAAhB","sourcesContent":["import React from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {withRouter} from 'react-router-dom'\r\nimport {\r\n    GetIsFetchingDialogs, GetDialogsMessagesSelector,\r\n    GetinterlocutorAvatarSelector, GetUserAvatarSelector\r\n} from \"../../../data/DialogsSelectors\";\r\nimport MessagesWithUser from \"./MessagesWithUser\";\r\nimport {AuthRedirect} from \"../../hocs/AuthRedirect\";\r\nimport {\r\n    SendNewMessageThunk,\r\n    GetNewMessagesThunk,\r\n    GetInterlocutorAvatarThunk,\r\n    GetProfileAvatarThunk,\r\n    DeleteMessageThunk,\r\n    GetNewMessagesCountThunk\r\n} from \"../../../data/DIalogsReduser\"\r\nimport {GetUserIDSelector} from \"../../../data/AuthSelectors\";\r\nimport {GetNewMessagesCountSelector} from \"../../../data/InitialozationSelectors\";\r\nimport Preloader from \"../../assetss/common/Loader/Loader\";\r\nimport {T_MDTP_MessagesContainer,T_MSTP_MessagesContainer, TMessagesContainerOwnProps} from \"../../GlobalTypes/DialogsTypes/MessagesTypes\";\r\nimport {GlobalState} from \"../../../data/redux-store\";\r\n\r\ntype TMessagesContainerProps = T_MDTP_MessagesContainer & T_MSTP_MessagesContainer & TMessagesContainerOwnProps\r\n\r\nclass MessagesContainer extends React.Component<TMessagesContainerProps> {\r\n\r\n    componentDidMount() {\r\n        const DialogUserID = this.props.match.params.userID\r\n        this.props.GetNewMessagesThunk(DialogUserID)\r\n        this.props.GetInterlocutorAvatarThunk(DialogUserID)\r\n        this.props.GetProfileAvatarThunk(this.props.MyID)\r\n        if(this.props.NewMessagesCount > 0){\r\n            this.props.GetNewMessagesCountThunk()\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <>\r\n            {\r\n                this.props.IsFetching ? <Preloader/> :\r\n                    <MessagesWithUser InterlocutorAvatar={this.props.InterlocutorAvatar}\r\n                                      UserAvatar={this.props.UserAvatar}\r\n                                      MyID={this.props.MyID}\r\n                                      DialogsMessages={this.props.DialogsMessages}\r\n                                      DeleteMessageThunk={this.props.DeleteMessageThunk}\r\n                                      SendNewMessageThunk={this.props.SendNewMessageThunk}\r\n                                      DialoguserID={this.props.match.params.userID}/>\r\n            }\r\n            </>\r\n\r\n        )\r\n    }\r\n}\r\n\r\n\r\nlet StateToProps = (state : GlobalState)  : T_MSTP_MessagesContainer => ({\r\n    DialogsMessages : GetDialogsMessagesSelector(state),\r\n    InterlocutorAvatar : GetinterlocutorAvatarSelector(state),\r\n    UserAvatar :  GetUserAvatarSelector(state),\r\n    MyID: GetUserIDSelector(state),\r\n    NewMessagesCount : GetNewMessagesCountSelector(state),\r\n    IsFetching : GetIsFetchingDialogs(state)\r\n})\r\n\r\nexport default  compose(connect<T_MSTP_MessagesContainer,T_MDTP_MessagesContainer,TMessagesContainerOwnProps,GlobalState>(StateToProps,\r\n    {\r\n        GetNewMessagesThunk, SendNewMessageThunk,\r\n        GetInterlocutorAvatarThunk,\r\n        GetProfileAvatarThunk,DeleteMessageThunk,GetNewMessagesCountThunk\r\n    }),\r\n    AuthRedirect,\r\n    withRouter)(MessagesContainer)"]},"metadata":{},"sourceType":"module"}