{"ast":null,"code":"var _jsxFileName = \"H:\\\\js_projects\\\\1\\\\my-app\\\\src\\\\components\\\\Login\\\\Login.jsx\";\nimport React from 'react';\nimport { Field, reduxForm } from \"redux-form\";\nimport { compose } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { LoginThunk } from \"../../data/AuthReducer\";\nimport { required, MaxLengthCreator } from \"../utils/validators\";\nimport { Input } from \"../assetss/common/ValidatorsComponents/ElementsValidators\";\nimport lm from \"../Login/login.module.css\";\nimport LoginUserPhoto from \"../assetss/images/userLog.jpg\";\nimport { Redirect } from \"react-router\";\nconst maxLength50 = MaxLengthCreator(50);\n\nconst MapStateToProps = state => ({\n  IsLogined: state.Auth.IsLogined\n});\n\nlet LoginForm = props => {\n  return React.createElement(\"div\", {\n    className: lm.login,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: props.handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: LoginUserPhoto,\n    className: lm.imgUser,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }), React.createElement(Field, {\n    name: 'email',\n    placeholder: \"Enter the email\",\n    component: Input,\n    validate: [required, maxLength50],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(Field, {\n    name: 'password',\n    placeholder: \"Enter the password\",\n    component: Input,\n    type: \"password\",\n    validate: [required, maxLength50],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: lm.rememberMe,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(Field, {\n    name: 'rememberMe',\n    component: \"input\",\n    type: \"checkbox\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), \" remember me\"), props.error ? React.createElement(\"div\", {\n    className: lm.AuthError,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, props.error) : null, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: lm.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \" Enter\"))));\n};\n\nconst ReduxLoginForm = reduxForm({\n  form: 'login'\n})(LoginForm);\n\nlet Login = props => {\n  const PostUserDataToServer = formDatas => {\n    props.LoginThunk(formDatas.email, formDatas.password, formDatas.rememberMe); //here is all datas of forms, we can do here use some thunk for a make request on server\n  };\n\n  if (props.IsLogined) {\n    return React.createElement(Redirect, {\n      to: \"/Profile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(ReduxLoginForm, {\n    onSubmit: PostUserDataToServer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }));\n};\n\nexport default compose(connect(MapStateToProps, {\n  LoginThunk\n}))(Login);","map":{"version":3,"sources":["H:\\js_projects\\1\\my-app\\src\\components\\Login\\Login.jsx"],"names":["React","Field","reduxForm","compose","connect","LoginThunk","required","MaxLengthCreator","Input","lm","LoginUserPhoto","Redirect","maxLength50","MapStateToProps","state","IsLogined","Auth","LoginForm","props","login","handleSubmit","imgUser","rememberMe","error","AuthError","button","ReduxLoginForm","form","Login","PostUserDataToServer","formDatas","email","password"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {compose} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport {LoginThunk} from \"../../data/AuthReducer\"\r\nimport {required, MaxLengthCreator} from \"../utils/validators\"\r\nimport {Input} from \"../assetss/common/ValidatorsComponents/ElementsValidators\"\r\nimport lm from \"../Login/login.module.css\"\r\nimport LoginUserPhoto from \"../assetss/images/userLog.jpg\"\r\nimport {Redirect} from \"react-router\";\r\n\r\nconst maxLength50 = MaxLengthCreator(50)\r\n\r\nconst MapStateToProps = (state) => ({IsLogined: state.Auth.IsLogined})\r\n\r\nlet LoginForm = (props) => {\r\n\r\n    return (\r\n\r\n        <div className={lm.login}>\r\n            <form onSubmit={props.handleSubmit}>\r\n                <div>\r\n                    <img src={LoginUserPhoto} className={lm.imgUser}/>\r\n                    <Field name={'email'} placeholder={\"Enter the email\"}\r\n                           component={Input}\r\n                           validate={[required, maxLength50]}/>\r\n                </div>\r\n\r\n                <div>\r\n                    <Field name={'password'} placeholder={\"Enter the password\"}\r\n                           component={Input} type={\"password\"}\r\n                           validate={[required, maxLength50]}/>\r\n\r\n                </div>\r\n\r\n                <div className={lm.rememberMe}>\r\n                    <Field name={'rememberMe'} component={\"input\"}\r\n                           type={\"checkbox\"}/> remember me\r\n\r\n                </div>\r\n                {props.error\r\n                    ?\r\n                    <div className={lm.AuthError}>\r\n                        {props.error}\r\n                    </div>\r\n                    : null}\r\n                <div>\r\n                    <button className={lm.button}> Enter</button>\r\n                </div>\r\n            </form>\r\n        </div>)\r\n}\r\nconst ReduxLoginForm = reduxForm({form: 'login'})(LoginForm)\r\n\r\nlet Login = (props) => {\r\n    const PostUserDataToServer = (formDatas) => {\r\n        props.LoginThunk(formDatas.email, formDatas.password, formDatas.rememberMe)\r\n        //here is all datas of forms, we can do here use some thunk for a make request on server\r\n    }\r\n\r\n    if (props.IsLogined) {\r\n        return <Redirect to={\"/Profile\"}/>\r\n    }\r\n    return (<div>\r\n\r\n        <ReduxLoginForm onSubmit={PostUserDataToServer}/>\r\n    </div>)\r\n}\r\n\r\nexport default compose(\r\n    connect(MapStateToProps, {LoginThunk}),\r\n)(Login)"]},"metadata":{},"sourceType":"module"}