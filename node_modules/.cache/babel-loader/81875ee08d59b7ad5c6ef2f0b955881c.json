{"ast":null,"code":"var _jsxFileName = \"H:\\\\js_projects\\\\1\\\\my-app\\\\src\\\\components\\\\Profile\\\\ProfileCOntainer.jsx\";\nimport React from 'react';\nimport Profile from \"./Profile\";\nimport * as axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from 'react-router-dom';\nimport { setProfileOfUser } from '../../data/ProfileReduser';\n\nclass ProfileContainer extends React.Component {\n  componentDidMount() {\n    debugger;\n    let ProfileID = this.props.match.params.userID; // это что-то типо конструктора, принято все вещи, которые нарушают идею чистых функцию писать тут\n\n    axios.get(\"https://social-network.samuraijs.com/api/1.0/profile/\" + ProfileID).then(responce => {\n      this.props.setProfileOfUser(responce.data);\n    });\n  }\n\n  render() {\n    return React.createElement(Profile, Object.assign({}, this.props, {\n      profile: this.props.profile,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }));\n  }\n\n} // тут объект обернут скобками т.к мы хотим что бы функция вернула объект со свойством\n\n\nlet MapStateToProps = state => ({\n  profile: state.ProfileData.profile\n});\n/*тут короче понадобилось достучаться до линка и взять от туда айдику юзера\r\n* что бы это сделать можно конечно пойти и взять всю строку урла, разбить её на части и тд. но есть\r\n* свпособ проще, так же как и коннект существует метод WithRouter, он прокинет в пропсах нужную нам инфу*/\n\n\nlet WithRouterComponent = withRouter(ProfileContainer);\nexport default connect(MapStateToProps, {\n  setProfileOfUser\n})(WithRouterComponent);","map":{"version":3,"sources":["H:\\js_projects\\1\\my-app\\src\\components\\Profile\\ProfileCOntainer.jsx"],"names":["React","Profile","axios","connect","withRouter","setProfileOfUser","ProfileContainer","Component","componentDidMount","ProfileID","props","match","params","userID","get","then","responce","data","render","profile","MapStateToProps","state","ProfileData","WithRouterComponent"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,SAAQC,gBAAR,QAA+B,2BAA/B;;AAGA,MAAMC,gBAAN,SAA+BN,KAAK,CAACO,SAArC,CAA+C;AAC3CC,EAAAA,iBAAiB,GAAG;AACxB;AACQ,QAAIC,SAAS,GAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,MAAxC,CAFgB,CAGhB;;AACAX,IAAAA,KAAK,CAACY,GAAN,CAAU,0DAAwDL,SAAlE,EACKM,IADL,CACUC,QAAQ,IAAI;AACd,WAAKN,KAAL,CAAWL,gBAAX,CAA4BW,QAAQ,CAACC,IAArC;AACH,KAHL;AAIH;;AAEDC,EAAAA,MAAM,GAAG;AAEL,WACI,oBAAC,OAAD,oBAAa,KAAKR,KAAlB;AAAyB,MAAA,OAAO,EAAE,KAAKA,KAAL,CAAWS,OAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADJ;AAGH;;AAhB0C,C,CAmB/C;;;AACA,IAAIC,eAAe,GAAIC,KAAD,KAAY;AAACF,EAAAA,OAAO,EAAEE,KAAK,CAACC,WAAN,CAAkBH;AAA5B,CAAZ,CAAtB;AACA;;;;;AAGA,IAAII,mBAAmB,GAAGnB,UAAU,CAACE,gBAAD,CAApC;AACA,eAAeH,OAAO,CAACiB,eAAD,EAAkB;AAACf,EAAAA;AAAD,CAAlB,CAAP,CAA6CkB,mBAA7C,CAAf","sourcesContent":["import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport * as axios from \"axios\";\r\nimport {connect} from \"react-redux\";\r\nimport {withRouter} from 'react-router-dom'\r\nimport {setProfileOfUser} from '../../data/ProfileReduser'\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount() {\r\ndebugger\r\n        let ProfileID = this.props.match.params.userID\r\n        // это что-то типо конструктора, принято все вещи, которые нарушают идею чистых функцию писать тут\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/profile/`+ProfileID)\r\n            .then(responce => {\r\n                this.props.setProfileOfUser(responce.data)\r\n            })\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Profile {...this.props} profile={this.props.profile}/>\r\n        )\r\n    }\r\n}\r\n\r\n// тут объект обернут скобками т.к мы хотим что бы функция вернула объект со свойством\r\nlet MapStateToProps = (state) => ({profile: state.ProfileData.profile})\r\n/*тут короче понадобилось достучаться до линка и взять от туда айдику юзера\r\n* что бы это сделать можно конечно пойти и взять всю строку урла, разбить её на части и тд. но есть\r\n* свпособ проще, так же как и коннект существует метод WithRouter, он прокинет в пропсах нужную нам инфу*/\r\nlet WithRouterComponent = withRouter(ProfileContainer)\r\nexport default connect(MapStateToProps, {setProfileOfUser})(WithRouterComponent);"]},"metadata":{},"sourceType":"module"}