{"ast":null,"code":"var _jsxFileName = \"H:\\\\js_projects\\\\1\\\\my-app\\\\src\\\\components\\\\Header\\\\HeaderContainer.jsx\";\nimport React from 'react';\nimport Header from \"./Header\";\nimport Preloader from \"../assetss/common/Loader/Loader\";\nimport { connect } from \"react-redux\";\nimport { SetAuthUser, ToggleIsFetching } from \"../../data/AuthReducer\";\nimport { API } from \"../../API/requests\";\n\nclass HeaderContainer extends React.Component {\n  componentDidMount() {\n    // это что-то типо конструктора, принято все вещи, которые нарушают идею чистых функцию писать тут\n    this.props.AuthMeThunk();\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, this.props.IsFetching ? React.createElement(Preloader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }) : null, React.createElement(Header, Object.assign({}, this.props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    })));\n  }\n\n}\n\nlet MapStateToProps = state => ({\n  IsFetching: state.Auth.IsFetching,\n  IsLogined: state.Auth.IsLogined,\n  login: state.Auth.login\n});\n\nexport default HeaderContainer = connect(MapStateToProps, {\n  AuthMeThunk\n})(HeaderContainer);","map":{"version":3,"sources":["H:\\js_projects\\1\\my-app\\src\\components\\Header\\HeaderContainer.jsx"],"names":["React","Header","Preloader","connect","SetAuthUser","ToggleIsFetching","API","HeaderContainer","Component","componentDidMount","props","AuthMeThunk","render","IsFetching","MapStateToProps","state","Auth","IsLogined","login"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,SAAP,MAAsB,iCAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,WAAR,EAAoBC,gBAApB,QAA2C,wBAA3C;AACA,SAAQC,GAAR,QAAkB,oBAAlB;;AAGA,MAAMC,eAAN,SAA8BP,KAAK,CAACQ,SAApC,CAA8C;AAC1CC,EAAAA,iBAAiB,GAAG;AAChB;AACL,SAAKC,KAAL,CAAWC,WAAX;AACE;;AAEDC,EAAAA,MAAM,GAAG;AACL,WAAO,0CACN,KAAKF,KAAL,CAAWG,UAAX,GAAwB,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAxB,GAAsC,IADhC,EAEL,oBAAC,MAAD,oBAAY,KAAKH,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAFK,CAAP;AAIH;;AAXyC;;AAc9C,IAAII,eAAe,GAAIC,KAAD,KACjB;AAACF,EAAAA,UAAU,EAAGE,KAAK,CAACC,IAAN,CAAWH,UAAzB;AACDI,EAAAA,SAAS,EAACF,KAAK,CAACC,IAAN,CAAWC,SADpB;AAEDC,EAAAA,KAAK,EAACH,KAAK,CAACC,IAAN,CAAWE;AAFhB,CADiB,CAAtB;;AAKA,eAAeX,eAAe,GAAGJ,OAAO,CAACW,eAAD,EAAkB;AAACH,EAAAA;AAAD,CAAlB,CAAP,CAAwCJ,eAAxC,CAAjC","sourcesContent":["import React from 'react';\r\nimport Header from \"./Header\";\r\nimport Preloader from \"../assetss/common/Loader/Loader\";\r\nimport {connect} from \"react-redux\";\r\nimport {SetAuthUser,ToggleIsFetching} from \"../../data/AuthReducer\";\r\nimport {API} from \"../../API/requests\"\r\n\r\n\r\nclass HeaderContainer extends React.Component {\r\n    componentDidMount() {\r\n        // это что-то типо конструктора, принято все вещи, которые нарушают идею чистых функцию писать тут\r\n   this.props.AuthMeThunk()\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n        {this.props.IsFetching ? <Preloader/> :null}\r\n          <Header {...this.props} />\r\n          </>\r\n    }\r\n\r\n}\r\nlet MapStateToProps = (state) =>\r\n    ({IsFetching : state.Auth.IsFetching,\r\n    IsLogined:state.Auth.IsLogined,\r\n    login:state.Auth.login})\r\n\r\nexport default HeaderContainer = connect(MapStateToProps, {AuthMeThunk})(HeaderContainer);\r\n"]},"metadata":{},"sourceType":"module"}