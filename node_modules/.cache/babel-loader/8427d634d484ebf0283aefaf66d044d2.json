{"ast":null,"code":"var _jsxFileName = \"H:\\\\js_projects\\\\1\\\\my-app\\\\src\\\\components\\\\Profile\\\\ProfileCOntainer.jsx\";\nimport React from 'react';\nimport Profile from \"./Profile\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from 'react-router-dom';\nimport { GetProfileThunk } from '../../data/ProfileReduser';\nimport { AuthRedirect } from \"../hocs/AuthRedirect\";\nimport { compose } from \"redux\";\n\nclass ProfileContainer extends React.Component {\n  componentDidMount() {\n    let ProfileID = this.props.match.params.userID;\n\n    if (!ProfileID) {\n      ProfileID = 2;\n    }\n\n    this.props.GetProfileThunk(ProfileID);\n    this.props.GetProfileStatusThunk(ProfileID);\n  }\n\n  render() {\n    return React.createElement(Profile, Object.assign({}, this.props, {\n      profile: this.props.profile,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }));\n  }\n\n}\n\nlet MapStateToProps = state => ({\n  profile: state.ProfileData.profile\n}); // тут объект обернут скобками т.к мы хотим что бы функция вернула объект со свойством\n\n/*тут короче понадобилось достучаться до линка и взять от туда айди юзера\r\n* что бы это сделать можно конечно пойти и взять всю строку урла, разбить её на части и тд. но есть\r\n* свпособ проще, так же как и коннект существует метод WithRouter, он прокинет в пропсах нужную нам инфу*/\n\n\nexport default compose(connect(MapStateToProps, {\n  GetProfileThunk\n}), withRouter, AuthRedirect)(ProfileContainer);","map":{"version":3,"sources":["H:\\js_projects\\1\\my-app\\src\\components\\Profile\\ProfileCOntainer.jsx"],"names":["React","Profile","connect","withRouter","GetProfileThunk","AuthRedirect","compose","ProfileContainer","Component","componentDidMount","ProfileID","props","match","params","userID","GetProfileStatusThunk","render","profile","MapStateToProps","state","ProfileData"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAASC,UAAT,QAA0B,kBAA1B;AACA,SAAQC,eAAR,QAA8B,2BAA9B;AACA,SAAQC,YAAR,QAA2B,sBAA3B;AACA,SAAQC,OAAR,QAAsB,OAAtB;;AAGA,MAAMC,gBAAN,SAA+BP,KAAK,CAACQ,SAArC,CAA+C;AAC3CC,EAAAA,iBAAiB,GAAG;AAEhB,QAAIC,SAAS,GAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,MAAxC;;AACA,QAAG,CAACJ,SAAJ,EAAc;AACVA,MAAAA,SAAS,GAAG,CAAZ;AACH;;AACH,SAAKC,KAAL,CAAWP,eAAX,CAA2BM,SAA3B;AACA,SAAKC,KAAL,CAAWI,qBAAX,CAAiCL,SAAjC;AAED;;AAEDM,EAAAA,MAAM,GAAG;AAEL,WACI,oBAAC,OAAD,oBAAa,KAAKL,KAAlB;AAAyB,MAAA,OAAO,EAAE,KAAKA,KAAL,CAAWM,OAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADJ;AAGH;;AAjB0C;;AAoB/C,IAAIC,eAAe,GAAIC,KAAD,KAAY;AAACF,EAAAA,OAAO,EAAEE,KAAK,CAACC,WAAN,CAAkBH;AAA5B,CAAZ,CAAtB,C,CAEA;;AACA;;;;;AAIA,eAAeX,OAAO,CAClBJ,OAAO,CAACgB,eAAD,EAAkB;AAACd,EAAAA;AAAD,CAAlB,CADW,EAElBD,UAFkB,EAGlBE,YAHkB,CAAP,CAGGE,gBAHH,CAAf","sourcesContent":["import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport { withRouter} from 'react-router-dom'\r\nimport {GetProfileThunk} from '../../data/ProfileReduser'\r\nimport {AuthRedirect} from \"../hocs/AuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount() {\r\n\r\n        let ProfileID = this.props.match.params.userID\r\n        if(!ProfileID){\r\n            ProfileID = 2\r\n        }\r\n      this.props.GetProfileThunk(ProfileID)\r\n      this.props.GetProfileStatusThunk(ProfileID)\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Profile {...this.props} profile={this.props.profile}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet MapStateToProps = (state) => ({profile: state.ProfileData.profile})\r\n\r\n// тут объект обернут скобками т.к мы хотим что бы функция вернула объект со свойством\r\n/*тут короче понадобилось достучаться до линка и взять от туда айди юзера\r\n* что бы это сделать можно конечно пойти и взять всю строку урла, разбить её на части и тд. но есть\r\n* свпособ проще, так же как и коннект существует метод WithRouter, он прокинет в пропсах нужную нам инфу*/\r\n\r\nexport default compose(\r\n    connect(MapStateToProps, {GetProfileThunk}),\r\n    withRouter,\r\n    AuthRedirect)(ProfileContainer)"]},"metadata":{},"sourceType":"module"}