{"ast":null,"code":"import _objectSpread from \"H:\\\\js_projects\\\\1\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { API } from \"../API/requests\";\nconst Set_All_Dialogs = 'Dialogs/Set_All_Dialogs';\nconst Set_New_Messages = 'Dialogs/Set_New_Messages';\nlet DefaultState = {\n  users: [],\n  messages: [],\n  avatars: [{}],\n  NewMessageText: '',\n  AllDialogs: []\n};\n\nconst DialogsReducer = (state = DefaultState, action) => {\n  switch (action.type) {\n    case Set_All_Dialogs:\n      {\n        return _objectSpread({}, state, {\n          AllDialogs: action.NewAllDialogs\n        });\n      }\n\n    case Set_New_Messages:\n      {\n        return _objectSpread({}, state, {\n          messages: [...state.messages, {\n            message: action.NewMessages\n          }]\n        });\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const SetAllDialogs = NewAllDialogs => {\n  return {\n    type: Set_All_Dialogs,\n    NewAllDialogs\n  };\n};\nexport const SetNewMessages = NewMessages => {\n  return {\n    type: Set_New_Messages,\n    NewMessages\n  };\n};\nexport const GetAllDialogsThunk = () => async dispatch => {\n  const data = await API.GetAllDialogs();\n  dispatch(SetAllDialogs(data));\n};\nexport default DialogsReducer;","map":{"version":3,"sources":["H:\\js_projects\\1\\my-app\\src\\data\\DIalogsReduser.js"],"names":["API","Set_All_Dialogs","Set_New_Messages","DefaultState","users","messages","avatars","NewMessageText","AllDialogs","DialogsReducer","state","action","type","NewAllDialogs","message","NewMessages","SetAllDialogs","SetNewMessages","GetAllDialogsThunk","dispatch","data","GetAllDialogs"],"mappings":";AAAA,SAAQA,GAAR,QAAkB,iBAAlB;AAEA,MAAMC,eAAe,GAAG,yBAAxB;AACA,MAAMC,gBAAgB,GAAG,0BAAzB;AAEA,IAAIC,YAAY,GAAG;AACfC,EAAAA,KAAK,EAAE,EADQ;AAIfC,EAAAA,QAAQ,EAAE,EAJK;AAOfC,EAAAA,OAAO,EAAE,CACL,EADK,CAPM;AAYfC,EAAAA,cAAc,EAAE,EAZD;AAafC,EAAAA,UAAU,EAAG;AAbE,CAAnB;;AAgBA,MAAMC,cAAc,GAAG,CAACC,KAAK,GAAGP,YAAT,EAAuBQ,MAAvB,KAAkC;AACrD,UAAQA,MAAM,CAACC,IAAf;AAEI,SAAKX,eAAL;AAAuB;AACnB,iCAAWS,KAAX;AAAiBF,UAAAA,UAAU,EAAEG,MAAM,CAACE;AAApC;AACH;;AACD,SAAMX,gBAAN;AAAyB;AACrB,iCAAUQ,KAAV;AACIL,UAAAA,QAAQ,EAAC,CAAC,GAAGK,KAAK,CAACL,QAAV,EAAmB;AAAES,YAAAA,OAAO,EAAEH,MAAM,CAACI;AAAlB,WAAnB;AADb;AAGH;;AACD;AACI,aAAOL,KAAP;AAXR;AAcH,CAfD;;AAkBA,OAAO,MAAMM,aAAa,GAAIH,aAAD,IAAmB;AAC5C,SAAO;AAACD,IAAAA,IAAI,EAAEX,eAAP;AAAuBY,IAAAA;AAAvB,GAAP;AACH,CAFM;AAGP,OAAO,MAAMI,cAAc,GAAIF,WAAD,IAAiB;AAC3C,SAAO;AAACH,IAAAA,IAAI,EAAEV,gBAAP;AAAwBa,IAAAA;AAAxB,GAAP;AACH,CAFM;AAIP,OAAO,MAAMG,kBAAkB,GAAG,MAAM,MAAOC,QAAP,IAAoB;AACxD,QAAMC,IAAI,GAAG,MAAMpB,GAAG,CAACqB,aAAJ,EAAnB;AACIF,EAAAA,QAAQ,CAACH,aAAa,CAACI,IAAD,CAAd,CAAR;AACP,CAHM;AAKP,eAAeX,cAAf","sourcesContent":["import {API} from \"../API/requests\";\r\n\r\nconst Set_All_Dialogs = 'Dialogs/Set_All_Dialogs'\r\nconst Set_New_Messages = 'Dialogs/Set_New_Messages'\r\n\r\nlet DefaultState = {\r\n    users: [\r\n\r\n    ],\r\n    messages: [\r\n\r\n    ],\r\n    avatars: [\r\n        {\r\n\r\n        }\r\n    ],\r\n    NewMessageText: '',\r\n    AllDialogs : []\r\n}\r\n\r\nconst DialogsReducer = (state = DefaultState, action) => {\r\n    switch (action.type) {\r\n\r\n        case Set_All_Dialogs : {\r\n            return {...state,AllDialogs: action.NewAllDialogs}\r\n        }\r\n        case  Set_New_Messages : {\r\n            return{...state,\r\n                messages:[...state.messages,{ message: action.NewMessages}]\r\n            }\r\n        }\r\n        default :\r\n            return state\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const SetAllDialogs = (NewAllDialogs) => {\r\n    return {type: Set_All_Dialogs,NewAllDialogs}\r\n}\r\nexport const SetNewMessages = (NewMessages) => {\r\n    return {type: Set_New_Messages,NewMessages}\r\n}\r\n\r\nexport const GetAllDialogsThunk = () => async (dispatch) => {\r\n    const data = await API.GetAllDialogs()\r\n        dispatch(SetAllDialogs(data))\r\n}\r\n\r\nexport default DialogsReducer"]},"metadata":{},"sourceType":"module"}