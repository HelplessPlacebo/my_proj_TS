{"ast":null,"code":"import _objectSpread from \"H:\\\\js_projects\\\\1\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { API } from \"../API/requests\";\nimport { stopSubmit } from \"redux-form\";\nconst follow = 'Users/FOLLOW';\nconst unfollow = 'Users/UNFOLLOW';\nconst setusers = 'Users/SET_USERS';\nconst Set_Current_Page = 'Users/SET_CURRENT_PAGE';\nconst Set_Total_Count_Of_Users = 'Users/Set_Total_Count_Of_Users';\nconst IsFetching_Toggle = 'Users/Toggle_is_fetching';\nconst IsInProcess_Togle = 'Users/IsInProcess_Togle';\nconst Portion_Size_Changer = 'Users/Portion_Size_C                                                                hanger';\nconst Set_Founded_User = 'Users/Set_Founded_User';\nlet DefaultState = {\n  Users: [],\n  pageSize: 9,\n  totalUsersCount: 0,\n  currentPage: 1,\n  IsFetching: false,\n  InProcess: [],\n  PortionSize: 1,\n  FoundedUser: null\n};\n\nconst UsersReducer = (state = DefaultState, action) => {\n  switch (action.type) {\n    case follow:\n      {\n        return _objectSpread({}, state, {\n          Users: state.Users.map(us => {\n            if (us.id === action.userID) {\n              return _objectSpread({}, us, {\n                followed: true\n              });\n            }\n\n            return us;\n          })\n        });\n      }\n\n    case unfollow:\n      {\n        return _objectSpread({}, state, {\n          Users: state.Users.map(us => {\n            if (us.id === action.userID) {\n              return _objectSpread({}, us, {\n                followed: false\n              });\n            }\n\n            return us;\n          })\n        });\n      }\n\n    case setusers:\n      {\n        return _objectSpread({}, state, {\n          Users: action.users\n        });\n      }\n\n    case Set_Current_Page:\n      {\n        return _objectSpread({}, state, {\n          currentPage: action.currentPage\n        });\n      }\n\n    case Set_Total_Count_Of_Users:\n      {\n        return _objectSpread({}, state, {\n          totalUsersCount: action.totalUsersCount\n        });\n      }\n\n    case IsFetching_Toggle:\n      {\n        return _objectSpread({}, state, {\n          IsFetching: action.IsFetching\n        });\n      }\n\n    case IsInProcess_Togle:\n      {\n        return _objectSpread({}, state, {\n          InProcess: action.IsFetching ? [...state.InProcess, action.UserID] : state.InProcess.filter(id => id != action.UserID)\n        });\n      }\n\n    case Portion_Size_Changer:\n      {\n        return _objectSpread({}, state, {\n          PortionSize: action.PortionSizeChangingValue\n        });\n      }\n\n    case Set_Founded_User:\n      {\n        return _objectSpread({}, state, {\n          FoundedUser: action.NewFoundedUser\n        });\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const OnFollow = userID => {\n  return {\n    type: follow,\n    userID: userID\n  };\n};\nexport const onUnFollow = userID => {\n  return {\n    type: unfollow,\n    userID: userID\n  };\n};\nexport const setUsers = users => {\n  return {\n    type: setusers,\n    users: users\n  };\n};\nexport const SetCurrentPage = currentPage => {\n  return {\n    type: Set_Current_Page,\n    currentPage: currentPage\n  };\n};\nexport const SetTotalCountOfUsers = totalCount => {\n  return {\n    type: Set_Total_Count_Of_Users,\n    totalUsersCount: totalCount\n  };\n};\nexport const ToggleIsFetching = IsFetching => {\n  return {\n    type: IsFetching_Toggle,\n    IsFetching\n  };\n};\nexport const ToggleInProcess = (IsFetching, UserID) => {\n  return {\n    type: IsInProcess_Togle,\n    IsFetching,\n    UserID\n  };\n};\nexport const ChangePortionSize = value => {\n  return {\n    type: Portion_Size_Changer,\n    PortionSizeChangingValue: value\n  };\n};\nexport const SetFoundedUser = NewFoundedUser => {\n  return {\n    type: Set_Founded_User,\n    NewFoundedUser\n  };\n};\nexport const getUsersThunk = (currentPage, pageSize) => async dispatch => {\n  dispatch(ToggleIsFetching(true));\n  const data = await API.getUsers(currentPage, pageSize);\n  dispatch(ToggleIsFetching(false));\n  dispatch(setUsers(data.items));\n  dispatch(SetTotalCountOfUsers(data.totalCount));\n};\nexport const unfollowThunk = userID => async dispatch => {\n  dispatch(ToggleInProcess(true, userID));\n  const data = await API.DelSub(userID);\n\n  if (data.resultCode == 0) {\n    dispatch(onUnFollow(userID));\n  }\n\n  dispatch(ToggleInProcess(false, userID));\n};\nexport const followThunk = userID => async dispatch => {\n  dispatch(ToggleInProcess(true, userID));\n  const data = await API.AddSub(userID);\n\n  if (data.resultCode == 0) {\n    dispatch(OnFollow(userID));\n  }\n\n  dispatch(ToggleInProcess(false, userID));\n};\nexport const FindUserThunk = UserName => async dispatch => {\n  dispatch(ToggleIsFetching(true));\n  const data = await API.FindUser(UserName);\n\n  if (!data.data.error) {\n    dispatch(ToggleIsFetching(false));\n    dispatch(SetFoundedUser(data));\n  } else {\n    dispatch(stopSubmit(\"FindUser\", {\n      _error: data.data.messages[0]\n    }));\n  }\n};\nexport default UsersReducer;","map":{"version":3,"sources":["H:\\js_projects\\1\\my-app\\src\\data\\UsersReduser.js"],"names":["API","stopSubmit","follow","unfollow","setusers","Set_Current_Page","Set_Total_Count_Of_Users","IsFetching_Toggle","IsInProcess_Togle","Portion_Size_Changer","Set_Founded_User","DefaultState","Users","pageSize","totalUsersCount","currentPage","IsFetching","InProcess","PortionSize","FoundedUser","UsersReducer","state","action","type","map","us","id","userID","followed","users","UserID","filter","PortionSizeChangingValue","NewFoundedUser","OnFollow","onUnFollow","setUsers","SetCurrentPage","SetTotalCountOfUsers","totalCount","ToggleIsFetching","ToggleInProcess","ChangePortionSize","value","SetFoundedUser","getUsersThunk","dispatch","data","getUsers","items","unfollowThunk","DelSub","resultCode","followThunk","AddSub","FindUserThunk","UserName","FindUser","error","_error","messages"],"mappings":"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","sourcesContent":["import {API} from \"../API/requests\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst follow = 'Users/FOLLOW'\r\nconst unfollow = 'Users/UNFOLLOW'\r\nconst setusers = 'Users/SET_USERS'\r\nconst Set_Current_Page= 'Users/SET_CURRENT_PAGE'\r\nconst Set_Total_Count_Of_Users = 'Users/Set_Total_Count_Of_Users'\r\nconst IsFetching_Toggle = 'Users/Toggle_is_fetching'\r\nconst IsInProcess_Togle = 'Users/IsInProcess_Togle'\r\nconst Portion_Size_Changer='Users/Portion_Size_C                                                                hanger'\r\nconst Set_Founded_User='Users/Set_Founded_User'\r\n\r\nlet DefaultState = {\r\n        Users: [],\r\n        pageSize : 9,\r\n        totalUsersCount:0,\r\n        currentPage : 1,\r\n         IsFetching : false,\r\n        InProcess : [],\r\n    PortionSize : 1,\r\n    FoundedUser : null\r\n}\r\n\r\nconst UsersReducer =  (state = DefaultState,action) => {\r\n    switch (action.type) {\r\n        case follow: {\r\n        return {\r\n          ...state,\r\n          Users:state.Users.map(us =>  {\r\n              if (us.id === action.userID) {\r\n                  return {\r\n                      ...us,\r\n                      followed:true\r\n                  }\r\n              }\r\n              return us\r\n          })\r\n        }\r\n    }\r\n        case unfollow: {\r\n            return {\r\n                ...state,\r\n                Users: state.Users.map(us =>{\r\n                    if(us.id === action.userID){\r\n                        return {\r\n                            ...us,\r\n                            followed:false\r\n                        }\r\n                    }\r\n                    return us\r\n                })\r\n            }\r\n        }\r\n        case setusers:{\r\n            return {...state, Users: action.users}\r\n        }\r\n        case Set_Current_Page:{\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case Set_Total_Count_Of_Users:{\r\n            return {...state, totalUsersCount: action.totalUsersCount}\r\n        }\r\n        case IsFetching_Toggle:{\r\n            return {...state, IsFetching: action.IsFetching}\r\n        }\r\n        case IsInProcess_Togle:{\r\n            return {...state,\r\n                InProcess : action.IsFetching ?\r\n                    [...state.InProcess, action.UserID]\r\n                    : state.InProcess.filter(id => id != action.UserID)\r\n            }\r\n        }\r\n        case Portion_Size_Changer:{\r\n            return {...state,PortionSize : action.PortionSizeChangingValue}\r\n        }\r\n        case Set_Founded_User:{\r\n            return {...state, FoundedUser : action.NewFoundedUser}\r\n        }\r\n        default :\r\n            return state\r\n    }\r\n}\r\nexport const OnFollow = (userID) => {\r\n    return {type : follow,userID:userID }\r\n}\r\nexport const onUnFollow = (userID) => {\r\n    return {type : unfollow, userID:userID }\r\n}\r\nexport const setUsers = (users) => {\r\n    return {type : setusers, users:users }\r\n}\r\nexport const SetCurrentPage = (currentPage) => {\r\n    return {type : Set_Current_Page, currentPage: currentPage}\r\n}\r\nexport const SetTotalCountOfUsers = (totalCount) => {\r\n    return {type : Set_Total_Count_Of_Users, totalUsersCount: totalCount}\r\n}\r\nexport const ToggleIsFetching = (IsFetching) => {\r\n    return {type : IsFetching_Toggle, IsFetching}\r\n}\r\nexport const ToggleInProcess = (IsFetching,UserID) => {\r\n    return {type : IsInProcess_Togle, IsFetching,UserID}\r\n}\r\n\r\nexport const ChangePortionSize = (value) => {\r\n    return {type : Portion_Size_Changer, PortionSizeChangingValue : value }\r\n}\r\nexport const SetFoundedUser = (NewFoundedUser) => {\r\n    return {type : Set_Founded_User, NewFoundedUser }\r\n}\r\n\r\nexport const getUsersThunk = (currentPage,pageSize) =>async (dispatch) =>{\r\n        dispatch (ToggleIsFetching(true))\r\n       const data = await API.getUsers(currentPage,pageSize)\r\n            dispatch(ToggleIsFetching(false))\r\n            dispatch( setUsers(data.items))\r\n            dispatch(SetTotalCountOfUsers(data.totalCount))\r\n    }\r\n\r\nexport  const  unfollowThunk = (userID) =>async (dispatch) =>{\r\n        dispatch(ToggleInProcess(true,userID))\r\n       const data = await API.DelSub(userID)\r\n            if (data.resultCode == 0) {\r\n                dispatch(onUnFollow(userID))\r\n            }\r\n            dispatch(ToggleInProcess(false,userID))\r\n    }\r\n\r\nexport  const  followThunk = (userID) =>async (dispatch) =>{\r\n        dispatch(ToggleInProcess(true,userID))\r\n      const data = await API.AddSub(userID)\r\n            if (data.resultCode == 0) {\r\n                dispatch(OnFollow(userID))\r\n            }\r\n            dispatch(ToggleInProcess(false,userID))\r\n    }\r\n\r\nexport const FindUserThunk = (UserName) =>async (dispatch) =>{\r\n    dispatch (ToggleIsFetching(true))\r\n    const data = await API.FindUser(UserName)\r\n    if(!data.data.error)\r\n    {\r\n        dispatch(ToggleIsFetching(false))\r\n        dispatch(SetFoundedUser(data))\r\n    }else {\r\n        dispatch(stopSubmit(\"FindUser\", {_error: data.data.messages[0]}))\r\n    }\r\n}\r\n\r\nexport default UsersReducer"]},"metadata":{},"sourceType":"module"}