{"ast":null,"code":"var _jsxFileName = \"H:\\\\js_projects\\\\1\\\\my-app\\\\src\\\\components\\\\Users\\\\Users.jsx\";\nimport React from 'react';\nimport um from './Users.module.css';\nimport * as axios from 'axios';\nimport UserPhoto from '../assetss/images/userPhoto.jpg';\n/* this component using for make requests on server for a new users and drawing\r\nUi component (Users)*/\n\nclass UsersAPItoServer extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.OnChangedPage = pageNumber => {\n      this.props.SetCurrentPage(pageNumber);\n      axios.get(\"https://social-network.samuraijs.com/api/1.0/users?page= \".concat(pageNumber, \"\\n    &count=\").concat(this.props.pageSize)).then(responce => {\n        this.props.setUsers(responce.data.items);\n      });\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"https://social-network.samuraijs.com/api/1.0/users?page= \".concat(this.props.currentPage, \"\\n    &count=\").concat(this.props.pageSize)).then(responce => {\n      this.props.setUsers(responce.data.items);\n      this.props.SetTotalCountOfUsers(responce.data.totalCount);\n    });\n  }\n\n  render() {\n    let pagesCount = Math.ceil(this.props.totalUsersCount / this.props.pageSize);\n    let pages = [];\n\n    for (let i = 1; i <= pagesCount; i++) {\n      pages.push(i);\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, this.props.Users.map(us => React.createElement(\"div\", {\n      key: us.id,\n      className: um.Main,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: um.img,\n      src: us.photos.small != null ? us.photos.small : UserPhoto,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, us.followed ? React.createElement(\"button\", {\n      onClick: () => {\n        this.props.onUnFollow(us.id);\n      },\n      className: um.button,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"unfollow\") : React.createElement(\"button\", {\n      onClick: () => {\n        this.props.onFollow(us.id);\n      },\n      className: um.button,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"follow\"))), React.createElement(\"div\", {\n      className: um.Names,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, us.name, React.createElement(\"div\", {\n      className: um.Posts,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, us.status)), React.createElement(\"div\", {\n      className: um.Country,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, 'country', ',', React.createElement(\"div\", {\n      className: um.City,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, 'city')))), React.createElement(\"div\", {\n      className: um.setNumbers,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, pages.map(p => {\n      return React.createElement(\"span\", {\n        className: this.props.currentPage === p && um.numbers,\n        onClick: ev => {\n          this.OnChangedPage(p);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"    \" + p);\n    })));\n  }\n\n}\n\nexport default UsersAPItoServer;","map":{"version":3,"sources":["H:\\js_projects\\1\\my-app\\src\\components\\Users\\Users.jsx"],"names":["React","um","axios","UserPhoto","UsersAPItoServer","Component","OnChangedPage","pageNumber","props","SetCurrentPage","get","pageSize","then","responce","setUsers","data","items","componentDidMount","currentPage","SetTotalCountOfUsers","totalCount","render","pagesCount","Math","ceil","totalUsersCount","pages","i","push","Users","map","us","id","Main","img","photos","small","followed","onUnFollow","button","onFollow","Names","name","Posts","status","Country","City","setNumbers","p","numbers","ev"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport um from './Users.module.css'\r\nimport * as axios from 'axios'\r\nimport UserPhoto from '../assetss/images/userPhoto.jpg'\r\n/* this component using for make requests on server for a new users and drawing\r\nUi component (Users)*/\r\nclass UsersAPItoServer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page= ${this.props.currentPage}\r\n    &count=${this.props.pageSize}`)\r\n            .then(responce => {\r\n                this.props.setUsers(responce.data.items)\r\n                this.props.SetTotalCountOfUsers(responce.data.totalCount)\r\n            })\r\n    }\r\n\r\n    OnChangedPage = (pageNumber) => {\r\n        this.props.SetCurrentPage(pageNumber)\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page= ${pageNumber}\r\n    &count=${this.props.pageSize}`)\r\n            .then(responce => {\r\n                this.props.setUsers(responce.data.items)\r\n            })\r\n    }\r\n\r\n    render() {\r\n        let pagesCount = Math.ceil(this.props.totalUsersCount / this.props.pageSize)\r\n        let pages = []\r\n        for (let i = 1; i <= pagesCount; i++) {\r\n            pages.push(i)\r\n        }\r\n        return <div>\r\n\r\n            {\r\n                this.props.Users.map(us => <div key={us.id} className={um.Main}>\r\n                    <div>\r\n                        <img className={um.img} src={us.photos.small != null ? us.photos.small : UserPhoto}/>\r\n                        <div>\r\n                            {us.followed\r\n                                ? <button onClick={() => {\r\n                                    this.props.onUnFollow(us.id)\r\n                                }} className={um.button}>\r\n                                    unfollow\r\n                                </button>\r\n                                : <button onClick={() => {\r\n                                    this.props.onFollow(us.id)\r\n                                }} className={um.button}>\r\n                                    follow\r\n                                </button>}\r\n                        </div>\r\n                    </div>\r\n                    <div className={um.Names}>\r\n                        {us.name}\r\n                        <div className={um.Posts}>\r\n                            {us.status}\r\n                        </div>\r\n                    </div>\r\n                    <div className={um.Country}>\r\n                        {'country'}\r\n                        {','}\r\n                        <div className={um.City}>\r\n                            {'city'}\r\n                        </div>\r\n                    </div>\r\n                </div>)\r\n            }\r\n            <div className={um.setNumbers}>\r\n                {pages.map(p => {\r\n                    return (\r\n                        <span className={this.props.currentPage === p && um.numbers}\r\n                              onClick={(ev) => {\r\n                                  this.OnChangedPage(p)\r\n                              }}>\r\n                            {\"    \" + p}\r\n                        </span>\r\n\r\n                    )\r\n                })}\r\n            </div>\r\n        </div>\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default UsersAPItoServer"]},"metadata":{},"sourceType":"module"}