{"ast":null,"code":"import _slicedToArray from \"H:\\\\js_projects\\\\1\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"H:\\\\js_projects\\\\1\\\\my-app\\\\src\\\\components\\\\ToDoLists\\\\ToDoListTasks\\\\Task.jsx\";\nimport React, { useState } from \"react\";\nimport ts from \"./Tasks.module.css\";\nimport classNames from 'classnames';\nimport DeleteButton from \"./DeleteTaskButton\";\nimport TaskDoneIcon from \"./DoneIcone\";\nimport EditTaskButton from \"./EditTaskButton\";\nimport TaskDetails from \"./TaskDetails\";\nimport NotDoneIcon from \"./NotDoneIcon\";\nimport TaskEditForm from \"./TaskEditForm\";\nimport { reduxForm } from \"redux-form\";\n\nconst Task = props => {\n  let _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      TaskEditMode = _useState2[0],\n      SetTaskEditMode = _useState2[1];\n\n  const TaskEditModeON = () => {\n    SetTaskEditMode(true);\n  };\n\n  const TaskEditModeOFF = () => {\n    SetTaskEditMode(false);\n  };\n\n  const TaskExecutedStyleForWindow = classNames({\n    [ts.Ramka]: !props.completed,\n    [ts.DoneRamka]: props.completed\n  });\n\n  const SaveNewToDoListTaskInfo = formData => {\n    console.log(formData); // props.ChangeToDoListTitleThunk(props.ListID,props.TaskID,formData)\n\n    props.EditTitleModeOFF();\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  },\n  /*  props.ToDoListTasks.map(el => el.ListId === props.ListID && el.TaskData.items.map(key =>{\r\n         return <div key={key.id}>\r\n             {key.title}\r\n         </div>\r\n         })\r\n     )*/\n  !TaskEditMode ? React.createElement(\"div\", {\n    className: ts.Main,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classNames(ts.MainWrapper),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: ts.TaskEditButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(EditTaskButton, {\n    ButtonSize: \"small\",\n    HandleOnClick: TaskEditModeON,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: TaskExecutedStyleForWindow,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: ts.TaskBodyWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, props.completed ? React.createElement(\"div\", {\n    className: ts.iconStatus,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(TaskDoneIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  })) : React.createElement(\"div\", {\n    className: ts.iconStatus,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(NotDoneIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: ts.Title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, props.TaskTitle), React.createElement(\"div\", {\n    className: ts.ToTrashIcon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(DeleteButton, {\n    DeleteTaskThunk: props.DeleteTaskThunk,\n    ShowButtonBlocked: props.ShowButtonBlocked,\n    ListID: props.ListID,\n    TaskID: props.TaskID,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(TaskDetails, {\n    addedDate: props.TaskAddedDate,\n    deadline: props.TaskDeadline,\n    description: props.TaskDescription,\n    ShowButtonBlocked: props.ShowButtonBlocked,\n    ShowButtonBlockedON: props.ShowButtonBlockedON,\n    ShowButtonBlockedOFF: props.ShowButtonBlockedOFF,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }))))) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(TaskEditFormRedux, {\n    CurrentTask: props.CurrentTask,\n    TaskEditModeOFF: TaskEditModeOFF,\n    ListID: props.ListID,\n    TaskID: props.TaskID,\n    onSubmit: SaveNewToDoListTaskInfo,\n    TaskExecutedStyleForWindow: TaskExecutedStyleForWindow,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  })));\n};\n\nconst TaskEditFormRedux = reduxForm({\n  form: 'TaskEditorForm'\n})(TaskEditForm);\nexport default Task;","map":{"version":3,"sources":["H:\\js_projects\\1\\my-app\\src\\components\\ToDoLists\\ToDoListTasks\\Task.jsx"],"names":["React","useState","ts","classNames","DeleteButton","TaskDoneIcon","EditTaskButton","TaskDetails","NotDoneIcon","TaskEditForm","reduxForm","Task","props","TaskEditMode","SetTaskEditMode","TaskEditModeON","TaskEditModeOFF","TaskExecutedStyleForWindow","Ramka","completed","DoneRamka","SaveNewToDoListTaskInfo","formData","console","log","EditTitleModeOFF","Main","MainWrapper","TaskEditButton","TaskBodyWrapper","iconStatus","Title","TaskTitle","ToTrashIcon","DeleteTaskThunk","ShowButtonBlocked","ListID","TaskID","TaskAddedDate","TaskDeadline","TaskDescription","ShowButtonBlockedON","ShowButtonBlockedOFF","CurrentTask","TaskEditFormRedux","form"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\"\r\nimport ts from \"./Tasks.module.css\"\r\nimport classNames from 'classnames';\r\nimport DeleteButton from \"./DeleteTaskButton\";\r\nimport TaskDoneIcon from \"./DoneIcone\";\r\nimport EditTaskButton from \"./EditTaskButton\";\r\nimport TaskDetails from \"./TaskDetails\";\r\nimport NotDoneIcon from \"./NotDoneIcon\";\r\nimport TaskEditForm from \"./TaskEditForm\";\r\nimport {reduxForm} from \"redux-form\";\r\n\r\n\r\n\r\nconst Task = (props) => {\r\n\r\n    let [TaskEditMode, SetTaskEditMode] = useState(false)\r\n\r\n    const TaskEditModeON = () => {\r\n        SetTaskEditMode(true)\r\n    }\r\n    const TaskEditModeOFF = () => {\r\n        SetTaskEditMode(false)\r\n    }\r\n    const TaskExecutedStyleForWindow = classNames({\r\n        [ts.Ramka] : !props.completed,\r\n        [ts.DoneRamka] : props.completed\r\n    })\r\n\r\n    const SaveNewToDoListTaskInfo= (formData)=>{\r\n        console.log(formData)\r\n       // props.ChangeToDoListTitleThunk(props.ListID,props.TaskID,formData)\r\n        props.EditTitleModeOFF()\r\n\r\n    }\r\n\r\n    return <div>\r\n        {  /*  props.ToDoListTasks.map(el => el.ListId === props.ListID && el.TaskData.items.map(key =>{\r\n                  return <div key={key.id}>\r\n                      {key.title}\r\n                  </div>\r\n                  })\r\n              )*/\r\n            !TaskEditMode ?\r\n            <div  className={ts.Main}>\r\n\r\n                <div className={classNames(ts.MainWrapper)}>\r\n\r\n                    <div className={ts.TaskEditButton}>\r\n                        <EditTaskButton ButtonSize={\"small\"} HandleOnClick={TaskEditModeON}/>\r\n                    </div>\r\n\r\n                    <div className={TaskExecutedStyleForWindow}>\r\n                        <div className={ts.TaskBodyWrapper}>\r\n                            {props.completed ?\r\n                                <div className={ts.iconStatus}>\r\n                                    <TaskDoneIcon/>\r\n                                </div>\r\n                                :\r\n                                <div className={ts.iconStatus}>\r\n                                    <NotDoneIcon/>\r\n                                </div>\r\n                            }\r\n\r\n\r\n                            <div className={ts.Title}>\r\n                                {props.TaskTitle}\r\n                            </div>\r\n\r\n\r\n                            <div className={ts.ToTrashIcon}>\r\n                                <DeleteButton DeleteTaskThunk={props.DeleteTaskThunk}\r\n                                              ShowButtonBlocked={props.ShowButtonBlocked}\r\n                                              ListID={props.ListID} TaskID={props.TaskID}/>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        <div>\r\n                            <TaskDetails\r\n                                addedDate={props.TaskAddedDate}\r\n                                deadline={props.TaskDeadline}\r\n                                description={props.TaskDescription}\r\n                                ShowButtonBlocked={props.ShowButtonBlocked}\r\n                                ShowButtonBlockedON={props.ShowButtonBlockedON}\r\n                                ShowButtonBlockedOFF={props.ShowButtonBlockedOFF}\r\n                            />\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n                :\r\n                <div>\r\n                    <TaskEditFormRedux CurrentTask={props.CurrentTask}\r\n                                       TaskEditModeOFF={TaskEditModeOFF}\r\n                                       ListID={props.ListID}\r\n                                       TaskID={props.TaskID}\r\n                                       onSubmit={SaveNewToDoListTaskInfo}\r\n                                       TaskExecutedStyleForWindow={TaskExecutedStyleForWindow}\r\n                    />\r\n                </div>\r\n        }\r\n\r\n    </div>\r\n}\r\nconst TaskEditFormRedux = reduxForm({form: 'TaskEditorForm'})(TaskEditForm)\r\n\r\nexport default Task"]},"metadata":{},"sourceType":"module"}