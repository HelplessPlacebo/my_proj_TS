{"ast":null,"code":"import _slicedToArray from \"H:\\\\js_projects\\\\1\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"H:\\\\js_projects\\\\1\\\\my-app\\\\src\\\\components\\\\Profile\\\\UserInfo\\\\SendMessageOnUserPage.jsx\";\nimport React, { useState } from \"react\";\nimport pds from \"./ProfileData.module.css\";\nimport lm from \"../../Login/login.module.css\";\nimport { CreateField, TextAreaMessage } from \"../../assetss/common/ValidatorsComponents/ElementsValidators\";\nimport { MaxLengthCreator, required } from \"../../utils/validators\";\nimport { reduxForm } from \"redux-form\";\nimport d from \"../../Dialogs/Dialogs.module.css\";\nimport pc from \"./UserInfo.module.css\";\nlet maxLength300 = MaxLengthCreator(300);\n\nconst SendMessageOnUserPageForm = props => {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: props.handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, CreateField(\"Enter message text\", \"MessageFromUserPage\", [required, maxLength300], TextAreaMessage)), props.error ? React.createElement(\"div\", {\n    className: lm.AuthError,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, props.error) : null, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: pc.buttonSaveChanges,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \" send message\"), React.createElement(\"button\", {\n    className: pc.buttonGoBack,\n    onClick: props.MessageSendingModOFF,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \" go back \"))));\n};\n\nconst ReduxSendMessageOnUserPageForm = reduxForm({\n  form: 'SendMessageForm'\n})(SendMessageOnUserPageForm);\n\nconst SendMessageOnUserPage = props => {\n  let _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      ChosedSendMessage = _useState2[0],\n      SetChosedSendMessage = _useState2[1];\n\n  const MessageSendingModON = () => {\n    SetChosedSendMessage(true);\n  };\n\n  const MessageSendingModOFF = () => {\n    SetChosedSendMessage(false);\n  };\n\n  const SendNewMessage = Formdata => {\n    props.SendNewMessageThunk(props.UserID, Formdata.MessageFromUserPage);\n    SetChosedSendMessage(false);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, !props.IsMyPage ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, !ChosedSendMessage ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: pds.buttonEditInformation,\n    onClick: MessageSendingModON,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"send message to \", props.UserName)) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(ReduxSendMessageOnUserPageForm, {\n    onSubmit: SendNewMessage,\n    MessageSendingModOFF: MessageSendingModOFF,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }))) : \"\");\n};\n\nexport default SendMessageOnUserPage;","map":{"version":3,"sources":["H:\\js_projects\\1\\my-app\\src\\components\\Profile\\UserInfo\\SendMessageOnUserPage.jsx"],"names":["React","useState","pds","lm","CreateField","TextAreaMessage","MaxLengthCreator","required","reduxForm","d","pc","maxLength300","SendMessageOnUserPageForm","props","handleSubmit","error","AuthError","buttonSaveChanges","buttonGoBack","MessageSendingModOFF","ReduxSendMessageOnUserPageForm","form","SendMessageOnUserPage","ChosedSendMessage","SetChosedSendMessage","MessageSendingModON","SendNewMessage","Formdata","SendNewMessageThunk","UserID","MessageFromUserPage","IsMyPage","buttonEditInformation","UserName"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,GAAP,MAAgB,0BAAhB;AACA,OAAOC,EAAP,MAAe,8BAAf;AACA,SAAQC,WAAR,EAAqBC,eAArB,QAA2C,8DAA3C;AACA,SAAQC,gBAAR,EAA0BC,QAA1B,QAAyC,wBAAzC;AACA,SAAQC,SAAR,QAAwB,YAAxB;AACA,OAAOC,CAAP,MAAc,kCAAd;AACA,OAAOC,EAAP,MAAe,uBAAf;AAEA,IAAIC,YAAY,GAAGL,gBAAgB,CAAC,GAAD,CAAnC;;AAEA,MAAMM,yBAAyB,GAAIC,KAAD,IAAW;AAEzC,SAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAM,IAAA,QAAQ,EAAEA,KAAK,CAACC,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKV,WAAW,CAAC,oBAAD,EAAuB,qBAAvB,EACR,CAACG,QAAD,EAAWI,YAAX,CADQ,EACkBN,eADlB,CADhB,CADJ,EAMKQ,KAAK,CAACE,KAAN,GAEG;AAAK,IAAA,SAAS,EAAEZ,EAAE,CAACa,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKH,KAAK,CAACE,KADX,CAFH,GAKK,IAXV,EAaI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAQ,IAAA,SAAS,EAAEL,EAAE,CAACO,iBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,EAEI;AAAQ,IAAA,SAAS,EAAEP,EAAE,CAACQ,YAAtB;AACQ,IAAA,OAAO,EAAEL,KAAK,CAACM,oBADvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFJ,CAbJ,CADJ,CAFJ;AAwBH,CA1BD;;AA2BA,MAAMC,8BAA8B,GAAGZ,SAAS,CAAC;AAACa,EAAAA,IAAI,EAAE;AAAP,CAAD,CAAT,CAAqCT,yBAArC,CAAvC;;AAEA,MAAMU,qBAAqB,GAAIT,KAAD,IAAW;AAAA,kBAEWZ,QAAQ,CAAC,KAAD,CAFnB;AAAA;AAAA,MAEhCsB,iBAFgC;AAAA,MAEbC,oBAFa;;AAKrC,QAAMC,mBAAmB,GAAG,MAAM;AAC9BD,IAAAA,oBAAoB,CAAC,IAAD,CAApB;AACH,GAFD;;AAIA,QAAML,oBAAoB,GAAG,MAAM;AAC/BK,IAAAA,oBAAoB,CAAC,KAAD,CAApB;AACH,GAFD;;AAIA,QAAME,cAAc,GAAIC,QAAD,IAAc;AACjCd,IAAAA,KAAK,CAACe,mBAAN,CAA0Bf,KAAK,CAACgB,MAAhC,EAAwCF,QAAQ,CAACG,mBAAjD;AACAN,IAAAA,oBAAoB,CAAC,KAAD,CAApB;AACH,GAHD;;AAMA,SAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGC,CAACX,KAAK,CAACkB,QAAP,GACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK,CAACR,iBAAD,GACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAQ,IAAA,SAAS,EAAErB,GAAG,CAAC8B,qBAAvB;AAA8C,IAAA,OAAO,EAAEP,mBAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBACqBZ,KAAK,CAACoB,QAD3B,CADJ,CADH,GAOG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAE,8BAAF;AACI,IAAA,QAAQ,EAAEP,cADd;AAEI,IAAA,oBAAoB,EAAEP,oBAF1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CARR,CADH,GAgBK,EAnBN,CAAR;AAuBH,CA1CD;;AA6CA,eAAeG,qBAAf","sourcesContent":["import React, {useState} from \"react\"\r\nimport pds from \"./ProfileData.module.css\";\r\nimport lm from \"../../Login/login.module.css\";\r\nimport {CreateField, TextAreaMessage} from \"../../assetss/common/ValidatorsComponents/ElementsValidators\";\r\nimport {MaxLengthCreator, required} from \"../../utils/validators\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport d from \"../../Dialogs/Dialogs.module.css\";\r\nimport pc from \"./UserInfo.module.css\";\r\n\r\nlet maxLength300 = MaxLengthCreator(300)\r\n\r\nconst SendMessageOnUserPageForm = (props) => {\r\n\r\n    return (\r\n\r\n        <div>\r\n            <form onSubmit={props.handleSubmit}>\r\n                <div>\r\n                    {CreateField(\"Enter message text\", \"MessageFromUserPage\",\r\n                        [required, maxLength300], TextAreaMessage)}\r\n                </div>\r\n\r\n                {props.error\r\n                    ?\r\n                    <div className={lm.AuthError}>\r\n                        {props.error}\r\n                    </div>\r\n                    : null\r\n                }\r\n                <div>\r\n                    <button className={pc.buttonSaveChanges}> send message</button>\r\n                    <button className={pc.buttonGoBack }\r\n                            onClick={props.MessageSendingModOFF}> go back </button>\r\n                </div>\r\n\r\n            </form>\r\n        </div>)\r\n}\r\nconst ReduxSendMessageOnUserPageForm = reduxForm({form: 'SendMessageForm'})(SendMessageOnUserPageForm)\r\n\r\nconst SendMessageOnUserPage = (props) => {\r\n\r\n    let [ChosedSendMessage, SetChosedSendMessage] = useState(false)\r\n\r\n\r\n    const MessageSendingModON = () => {\r\n        SetChosedSendMessage(true)\r\n    }\r\n\r\n    const MessageSendingModOFF = () => {\r\n        SetChosedSendMessage(false)\r\n    }\r\n\r\n    const SendNewMessage = (Formdata) => {\r\n        props.SendNewMessageThunk(props.UserID, Formdata.MessageFromUserPage)\r\n        SetChosedSendMessage(false)\r\n    }\r\n\r\n\r\n    return (<div>\r\n\r\n\r\n            {!props.IsMyPage ?\r\n                <div>\r\n                    {!ChosedSendMessage ?\r\n                        <div>\r\n                            <button className={pds.buttonEditInformation} onClick={MessageSendingModON}>\r\n                                send message to {props.UserName}\r\n                            </button>\r\n                        </div>\r\n                        :\r\n                        <div>\r\n                            < ReduxSendMessageOnUserPageForm\r\n                                onSubmit={SendNewMessage}\r\n                                MessageSendingModOFF={MessageSendingModOFF}/>\r\n                        </div>\r\n                    }\r\n                </div>\r\n                : \"\"\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default SendMessageOnUserPage"]},"metadata":{},"sourceType":"module"}