{"ast":null,"code":"var _jsxFileName = \"H:\\\\js_projects\\\\1\\\\my-app\\\\src\\\\components\\\\Header\\\\HeaderContainer.jsx\";\nimport React from 'react';\nimport Header from \"./Header\";\nimport Preloader from \"../assetss/common/Loader/Loader\";\nimport { connect } from \"react-redux\";\nimport { LogOutThunk } from \"../../data/AuthReducer\";\nimport { GetOwnNameSelector, GetProfileSelector } from \"../../data/ProfileSelectors\";\nimport { GetNewMessagesCountThunk } from \"../../data/DIalogsReduser\";\nimport { GetIsFetchingSelector, GetIsLoginedSelector, GetLoginSelector, GetUserIDSelector } from \"../../data/AuthSelectors\";\nimport { GetNewMessagesCountSelector } from \"../../data/InitialozationSelectors\";\n\nclass HeaderContainer extends React.Component {\n  componentDidMount() {\n    this.props.GetNewMessagesCountThunk();\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (this.props.match.params.userID !== prevProps.match.params.userID) {\n      this.ProfileDataToPaint();\n    }\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, this.props.IsFetching ? React.createElement(Preloader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }) : null, React.createElement(Header, Object.assign({}, this.props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    })));\n  }\n\n}\n\nlet MapStateToProps = state => ({\n  IsFetching: GetIsFetchingSelector(state),\n  IsLogined: GetIsLoginedSelector(state),\n  login: GetLoginSelector(state),\n  UserProfile: GetProfileSelector(state),\n  OwnID: GetUserIDSelector(state),\n  OwnName: GetOwnNameSelector(state),\n  NewMessagesCount: GetNewMessagesCountSelector(state)\n});\n\nexport default HeaderContainer = connect(MapStateToProps, {\n  LogOutThunk,\n  GetNewMessagesCountThunk\n})(HeaderContainer);","map":{"version":3,"sources":["H:\\js_projects\\1\\my-app\\src\\components\\Header\\HeaderContainer.jsx"],"names":["React","Header","Preloader","connect","LogOutThunk","GetOwnNameSelector","GetProfileSelector","GetNewMessagesCountThunk","GetIsFetchingSelector","GetIsLoginedSelector","GetLoginSelector","GetUserIDSelector","GetNewMessagesCountSelector","HeaderContainer","Component","componentDidMount","props","componentDidUpdate","prevProps","prevState","snapshot","match","params","userID","ProfileDataToPaint","render","IsFetching","MapStateToProps","state","IsLogined","login","UserProfile","OwnID","OwnName","NewMessagesCount"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,SAAP,MAAsB,iCAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,WAAR,QAA0B,wBAA1B;AACA,SAAQC,kBAAR,EAA4BC,kBAA5B,QAAqD,6BAArD;AACA,SAAQC,wBAAR,QAAuC,2BAAvC;AACA,SACIC,qBADJ,EAEIC,oBAFJ,EAGIC,gBAHJ,EAIIC,iBAJJ,QAKO,0BALP;AAMA,SAAQC,2BAAR,QAA0C,oCAA1C;;AAGA,MAAMC,eAAN,SAA8Bb,KAAK,CAACc,SAApC,CAA8C;AAC1CC,EAAAA,iBAAiB,GAAG;AACnB,SAAKC,KAAL,CAAWT,wBAAX;AACA;;AAEDU,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuBC,QAAvB,EAAiC;AAE/C,QAAG,KAAKJ,KAAL,CAAWK,KAAX,CAAiBC,MAAjB,CAAwBC,MAAxB,KAAmCL,SAAS,CAACG,KAAV,CAAgBC,MAAhB,CAAuBC,MAA7D,EAAqE;AACjE,WAAKC,kBAAL;AACH;AACJ;;AAEDC,EAAAA,MAAM,GAAG;AACL,WAAO,0CACN,KAAKT,KAAL,CAAWU,UAAX,GAAwB,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAxB,GAAsC,IADhC,EAEL,oBAAC,MAAD,oBAAY,KAAKV,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAFK,CAAP;AAIH;;AAjByC;;AAoB9C,IAAIW,eAAe,GAAIC,KAAD,KAAY;AAC9BF,EAAAA,UAAU,EAAGlB,qBAAqB,CAACoB,KAAD,CADJ;AAE9BC,EAAAA,SAAS,EAAEpB,oBAAoB,CAACmB,KAAD,CAFD;AAG9BE,EAAAA,KAAK,EAACpB,gBAAgB,CAACkB,KAAD,CAHQ;AAI9BG,EAAAA,WAAW,EAAEzB,kBAAkB,CAACsB,KAAD,CAJD;AAK9BI,EAAAA,KAAK,EAAGrB,iBAAiB,CAACiB,KAAD,CALK;AAM9BK,EAAAA,OAAO,EAAG5B,kBAAkB,CAACuB,KAAD,CANE;AAO9BM,EAAAA,gBAAgB,EAAGtB,2BAA2B,CAACgB,KAAD;AAPhB,CAAZ,CAAtB;;AAUA,eAAef,eAAe,GAAGV,OAAO,CAACwB,eAAD,EACpC;AAACvB,EAAAA,WAAD;AAAaG,EAAAA;AAAb,CADoC,CAAP,CAEhCM,eAFgC,CAAjC","sourcesContent":["import React from 'react';\r\nimport Header from \"./Header\";\r\nimport Preloader from \"../assetss/common/Loader/Loader\";\r\nimport {connect} from \"react-redux\";\r\nimport {LogOutThunk} from \"../../data/AuthReducer\";\r\nimport {GetOwnNameSelector, GetProfileSelector} from \"../../data/ProfileSelectors\";\r\nimport {GetNewMessagesCountThunk} from \"../../data/DIalogsReduser\"\r\nimport {\r\n    GetIsFetchingSelector,\r\n    GetIsLoginedSelector,\r\n    GetLoginSelector,\r\n    GetUserIDSelector\r\n} from \"../../data/AuthSelectors\";\r\nimport {GetNewMessagesCountSelector} from \"../../data/InitialozationSelectors\";\r\n\r\n\r\nclass HeaderContainer extends React.Component {\r\n    componentDidMount() {\r\n     this.props.GetNewMessagesCountThunk()\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n\r\n        if(this.props.match.params.userID !== prevProps.match.params.userID ){\r\n            this.ProfileDataToPaint()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n        {this.props.IsFetching ? <Preloader/> :null}\r\n          <Header {...this.props} />\r\n          </>\r\n    }\r\n\r\n}\r\nlet MapStateToProps = (state) => ({\r\n    IsFetching : GetIsFetchingSelector(state),\r\n    IsLogined: GetIsLoginedSelector(state),\r\n    login:GetLoginSelector(state),\r\n    UserProfile: GetProfileSelector(state),\r\n    OwnID : GetUserIDSelector(state),\r\n    OwnName : GetOwnNameSelector(state),\r\n    NewMessagesCount : GetNewMessagesCountSelector(state)\r\n})\r\n\r\nexport default HeaderContainer = connect(MapStateToProps,\r\n    {LogOutThunk,GetNewMessagesCountThunk})\r\n(HeaderContainer);\r\n"]},"metadata":{},"sourceType":"module"}