{"ast":null,"code":"var _jsxFileName = \"H:\\\\js_projects\\\\1\\\\my-app\\\\src\\\\components\\\\hocs\\\\AuthRedirect.js\";\nimport React from \"react\";\nimport { Redirect } from \"react-router\";\n\nlet StateToProps = state => {\n  return {\n    IsLogined: state.Auth.IsLogined\n  };\n};\n\nexport const AuthRedirect = Component => {\n  class RedirectComp extends React.Component {\n    render() {\n      if (!this.props.IsLogined) {\n        // редирект на страничку авторизации\n        return React.createElement(Redirect, {\n          to: \"/Login\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 15\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(Component, Object.assign({}, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }));\n    }\n\n  }\n\n  return RedirectComp;\n};","map":{"version":3,"sources":["H:\\js_projects\\1\\my-app\\src\\components\\hocs\\AuthRedirect.js"],"names":["React","Redirect","StateToProps","state","IsLogined","Auth","AuthRedirect","Component","RedirectComp","render","props"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,QAAuB,cAAvB;;AAEA,IAAIC,YAAY,GAAIC,KAAD,IAAS;AACxB,SAAM;AACFC,IAAAA,SAAS,EAAGD,KAAK,CAACE,IAAN,CAAWD;AADrB,GAAN;AAGH,CAJD;;AAMA,OAAO,MAAME,YAAY,GAAIC,SAAD,IAAc;AAC1C,QAAMC,YAAN,SAA2BR,KAAK,CAACO,SAAjC,CAA2C;AACvCE,IAAAA,MAAM,GAAG;AACL,UAAI,CAAC,KAAKC,KAAL,CAAWN,SAAhB,EAA2B;AACvB;AACA,eAAO,oBAAC,QAAD;AAAU,UAAA,EAAE,EAAE,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH;;AACD,aAAO,oBAAC,SAAD,oBAAe,KAAKM,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AACH;;AAPsC;;AAS3C,SAAOF,YAAP;AACC,CAXM","sourcesContent":["import React from \"react\"\r\nimport {Redirect} from \"react-router\";\r\n\r\nlet StateToProps = (state)=>{\r\n    return{\r\n        IsLogined : state.Auth.IsLogined\r\n    }\r\n}\r\n\r\nexport const AuthRedirect = (Component) =>{\r\nclass RedirectComp extends React.Component {\r\n    render() {\r\n        if (!this.props.IsLogined) {\r\n            // редирект на страничку авторизации\r\n            return <Redirect to={\"/Login\"} />\r\n        }\r\n        return <Component {...this.props} />\r\n    }\r\n}\r\nreturn RedirectComp\r\n}"]},"metadata":{},"sourceType":"module"}