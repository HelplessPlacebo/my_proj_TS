{"ast":null,"code":"var _jsxFileName = \"H:\\\\js_projects\\\\1\\\\my-app\\\\src\\\\components\\\\ToDoLists\\\\ToDoListTasks\\\\TaskEditForm.jsx\";\nimport React from \"react\";\nimport { Input, CreateField } from \"../../assetss/common/ValidatorsComponents/ElementsValidators\";\nimport { MaxLengthCreator, required } from \"../../utils/validators\";\nimport ts from \"./Tasks.module.css\";\nimport GoBackButton from \"../GoBackButton\";\nimport Button from \"@material-ui/core/Button\";\nimport SaveIcon from \"@material-ui/core/SvgIcon/SvgIcon\";\n\nconst TaskEditForm = props => {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: props.handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: ts.TaskFormWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: ts.TaskEditFromButtons,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    size: \"small\",\n    startIcon: React.createElement(SaveIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"Save\"), React.createElement(\"div\", {\n    className: ts.GoBackButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(GoBackButton, {\n    HandleOnClick: props.TaskEditModeOFF,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: props.TaskExecutedStyleForWindow,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: ts.MainFormWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"Completed?\"), React.createElement(\"div\", {\n    className: ts.CompletedInput,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, CreateField(\"completed\", \"completed\", [], Input, {\n    type: \"checkbox\"\n  }))), React.createElement(\"div\", {\n    className: ts.Title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Task title :\", CreateField(\"title\", \"title\", [], Input))), React.createElement(\"div\", {\n    className: ts.detailsWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: ts.startDate,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Start date :\", CreateField(\"start date\", \"startDate\", [], Input)), React.createElement(\"div\", {\n    className: ts.deadline,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"deadline :\", CreateField(\"deadline\", \"deadline\", [], Input))), React.createElement(\"div\", {\n    className: ts.FormDescription,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"description :\", CreateField(\"description\", \"description\", [], Input)), React.createElement(\"div\", {\n    className: ts.detailsWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: ts.priority,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"priority :\", CreateField(\"priority\", \"priority\", [], Input)), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"status :\", CreateField(\"status\", \"status\", [], Input))))))));\n};\n\nexport default TaskEditForm;","map":{"version":3,"sources":["H:\\js_projects\\1\\my-app\\src\\components\\ToDoLists\\ToDoListTasks\\TaskEditForm.jsx"],"names":["React","Input","CreateField","MaxLengthCreator","required","ts","GoBackButton","Button","SaveIcon","TaskEditForm","props","handleSubmit","TaskFormWrapper","TaskEditFromButtons","TaskEditModeOFF","TaskExecutedStyleForWindow","MainFormWrapper","CompletedInput","type","Title","detailsWrapper","startDate","deadline","FormDescription","priority"],"mappings":"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","sourcesContent":["import React from \"react\"\r\nimport {\r\n    Input,\r\n    CreateField,\r\n} from \"../../assetss/common/ValidatorsComponents/ElementsValidators\";\r\nimport {MaxLengthCreator, required} from \"../../utils/validators\";\r\nimport ts from \"./Tasks.module.css\";\r\nimport GoBackButton from \"../GoBackButton\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport SaveIcon from \"@material-ui/core/SvgIcon/SvgIcon\";\r\n\r\n\r\nconst TaskEditForm = (props) => {\r\n\r\n    return <div>\r\n\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div className={ts.TaskFormWrapper}>\r\n\r\n                <div className={ts.TaskEditFromButtons}>\r\n\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        size=\"small\"\r\n                        startIcon={<SaveIcon />}\r\n                    >\r\n                        Save\r\n                    </Button>\r\n\r\n                    <div className={ts.GoBackButton}>\r\n                    <GoBackButton HandleOnClick={props.TaskEditModeOFF}/>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n\r\n                <div>\r\n                    <div className={props.TaskExecutedStyleForWindow}>\r\n                        <div className={ts.MainFormWrapper}>\r\n\r\n                            <div>\r\n                                <div>\r\n                                    Completed?\r\n                                </div>\r\n\r\n                                <div className={ts.CompletedInput}>\r\n                                    {CreateField(\"completed\", \"completed\", [], Input, {type: \"checkbox\"})}\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className={ts.Title}>\r\n                                Task title :\r\n                                {CreateField(\"title\", \"title\", [], Input)}\r\n                            </div>\r\n                        </div>\r\n\r\n                            <div className={ts.detailsWrapper}>\r\n                                <div className={ts.startDate}>\r\n                                    Start date :\r\n                                    {CreateField(\"start date\", \"startDate\", [], Input)}\r\n                                </div>\r\n\r\n                                <div className={ts.deadline}>\r\n                                    deadline :\r\n                                    {CreateField(\"deadline\", \"deadline\", [], Input)}\r\n                                </div>\r\n                            </div>\r\n                            <div className={ts.FormDescription}>\r\n                                description :\r\n                                {CreateField(\"description\", \"description\", [], Input)}\r\n                            </div>\r\n\r\n                        <div className={ts.detailsWrapper}>\r\n                            <div className={ts.priority}>\r\n                                priority :\r\n                                {CreateField(\"priority\", \"priority\", [], Input)}\r\n                            </div>\r\n\r\n                            <div>\r\n                                status :\r\n                                {CreateField(\"status\", \"status\", [], Input)}\r\n                            </div>\r\n                        </div>\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n        </form>\r\n    </div>\r\n}\r\n\r\nexport default TaskEditForm"]},"metadata":{},"sourceType":"module"}