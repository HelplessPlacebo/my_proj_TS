{"ast":null,"code":"var _jsxFileName = \"H:\\\\js_projects\\\\1\\\\my-app\\\\src\\\\components\\\\Header\\\\HeaderContainer.jsx\";\nimport React from 'react';\nimport * as axios from \"axios\";\nimport Header from \"./Header\";\nimport Preloader from \"../assetss/common/Loader/Loader\";\nimport { connect } from \"react-redux\";\nimport { SetAuthUser, ToggleIsFetching } from \"../../data/AuthReducer\";\n\nclass HeaderContainer extends React.Component {\n  componentDidMount() {\n    // это что-то типо конструктора, принято все вещи, которые нарушают идею чистых функцию писать тут\n    this.props.ToggleIsFetching(true);\n    axios.get(\"https://social-network.samuraijs.com/api/1.0/auth/me\", {\n      // юзается что бы кука\n      withCredentials: true\n    }).then(responce => {\n      this.props.ToggleIsFetching(false);\n\n      if (responce.data.resultCode === 0) {\n        let _responce$data$data = responce.data.data,\n            id = _responce$data$data.id,\n            email = _responce$data$data.email,\n            login = _responce$data$data.login;\n        this.props.SetAuthUser(id, email, login);\n      }\n    });\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, this.props.IsFetching ? React.createElement(Preloader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }) : null, React.createElement(Header, Object.assign({}, this.props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    })));\n  }\n\n}\n\nlet MapStateToProps = state => ({\n  IsFetching: state.Auth.IsFetching,\n  IsLogined: state.Auth.IsLogined,\n  login: state.Auth.login\n});\n\nexport default HeaderContainer = connect(MapStateToProps, {\n  SetAuthUser,\n  ToggleIsFetching\n})(HeaderContainer);","map":{"version":3,"sources":["H:\\js_projects\\1\\my-app\\src\\components\\Header\\HeaderContainer.jsx"],"names":["React","axios","Header","Preloader","connect","SetAuthUser","ToggleIsFetching","HeaderContainer","Component","componentDidMount","props","get","withCredentials","then","responce","data","resultCode","id","email","login","render","IsFetching","MapStateToProps","state","Auth","IsLogined"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,SAAP,MAAsB,iCAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,WAAR,EAAoBC,gBAApB,QAA2C,wBAA3C;;AAGA,MAAMC,eAAN,SAA8BP,KAAK,CAACQ,SAApC,CAA8C;AAC1CC,EAAAA,iBAAiB,GAAG;AAChB;AACA,SAAKC,KAAL,CAAWJ,gBAAX,CAA4B,IAA5B;AACAL,IAAAA,KAAK,CAACU,GAAN,yDAAiE;AAC7D;AACAC,MAAAA,eAAe,EAAG;AAF2C,KAAjE,EAIKC,IAJL,CAIUC,QAAQ,IAAI;AACd,WAAKJ,KAAL,CAAWJ,gBAAX,CAA4B,KAA5B;;AACA,UAAIQ,QAAQ,CAACC,IAAT,CAAcC,UAAd,KAA6B,CAAjC,EAAmC;AAAA,kCACRF,QAAQ,CAACC,IAAT,CAAcA,IADN;AAAA,YAC1BE,EAD0B,uBAC1BA,EAD0B;AAAA,YACvBC,KADuB,uBACvBA,KADuB;AAAA,YACjBC,KADiB,uBACjBA,KADiB;AAE/B,aAAKT,KAAL,CAAWL,WAAX,CAAuBY,EAAvB,EAA0BC,KAA1B,EAAgCC,KAAhC;AACH;AACJ,KAVL;AAWH;;AACDC,EAAAA,MAAM,GAAG;AACL,WAAO,0CACN,KAAKV,KAAL,CAAWW,UAAX,GAAwB,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAxB,GAAsC,IADhC,EAEL,oBAAC,MAAD,oBAAY,KAAKX,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAFK,CAAP;AAIH;;AArByC;;AAwB9C,IAAIY,eAAe,GAAIC,KAAD,KACjB;AAACF,EAAAA,UAAU,EAAGE,KAAK,CAACC,IAAN,CAAWH,UAAzB;AACDI,EAAAA,SAAS,EAACF,KAAK,CAACC,IAAN,CAAWC,SADpB;AAEDN,EAAAA,KAAK,EAACI,KAAK,CAACC,IAAN,CAAWL;AAFhB,CADiB,CAAtB;;AAKA,eAAeZ,eAAe,GAAGH,OAAO,CAACkB,eAAD,EAAkB;AAACjB,EAAAA,WAAD;AAAaC,EAAAA;AAAb,CAAlB,CAAP,CAAyDC,eAAzD,CAAjC","sourcesContent":["import React from 'react';\r\nimport * as axios from \"axios\";\r\nimport Header from \"./Header\";\r\nimport Preloader from \"../assetss/common/Loader/Loader\";\r\nimport {connect} from \"react-redux\";\r\nimport {SetAuthUser,ToggleIsFetching} from \"../../data/AuthReducer\";\r\n\r\n\r\nclass HeaderContainer extends React.Component {\r\n    componentDidMount() {\r\n        // это что-то типо конструктора, принято все вещи, которые нарушают идею чистых функцию писать тут\r\n        this.props.ToggleIsFetching(true)\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/auth/me`,{\r\n            // юзается что бы кука\r\n            withCredentials : true\r\n        })\r\n            .then(responce => {\r\n                this.props.ToggleIsFetching(false)\r\n                if (responce.data.resultCode === 0){\r\n                    let {id,email,login} = responce.data.data\r\n                    this.props.SetAuthUser(id,email,login)\r\n                }\r\n            })\r\n    }\r\n    render() {\r\n        return <>\r\n        {this.props.IsFetching ? <Preloader/> :null}\r\n          <Header {...this.props} />\r\n          </>\r\n    }\r\n\r\n}\r\nlet MapStateToProps = (state) =>\r\n    ({IsFetching : state.Auth.IsFetching,\r\n    IsLogined:state.Auth.IsLogined,\r\n    login:state.Auth.login})\r\n\r\nexport default HeaderContainer = connect(MapStateToProps, {SetAuthUser,ToggleIsFetching})(HeaderContainer);\r\n"]},"metadata":{},"sourceType":"module"}