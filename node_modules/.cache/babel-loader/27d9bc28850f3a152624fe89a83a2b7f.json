{"ast":null,"code":"var _jsxFileName = \"H:\\\\js_projects\\\\1\\\\my-app\\\\src\\\\components\\\\Users\\\\UsersContainer.tsx\";\nimport React from 'react';\nimport { connect } from \"react-redux\";\nimport { followThunk, ChangePageSize, unfollowThunk, SetCurrentPage, getUsersThunk, ToggleInProcess, ChangePortionSize, FindUserThunk } from \"../../data/UsersReduser\";\nimport PurifyUsers from \"./Users\";\nimport Preloader from \"../assetss/common/Loader/Loader\";\nimport { compose } from \"redux\";\nimport { GetCurrentPage, GetInProgress, GetIsFeching, GetPageSize, GetTotalUsersCount, GetUsers, GetPortionSize, GetFoundedUserSelector, FindUserIsFetching } from \"../../data/Users-Selectors\";\nimport { GetIsLoginedSelector } from \"../../data/AuthSelectors\";\n\nclass UsersContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.OnChangedPage = pageNumber => {\n      this.props.SetCurrentPage(pageNumber);\n      this.props.getUsersThunk(pageNumber, this.props.pageSize);\n    };\n\n    this.OnPageSizeChange = PageSize => {\n      this.props.ChangePageSize(PageSize);\n      this.props.getUsersThunk(this.props.currentPage, PageSize);\n    };\n  }\n\n  componentDidMount() {\n    this.props.getUsersThunk(this.props.currentPage, this.props.pageSize);\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, this.props.IsFetching ? React.createElement(Preloader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }) : React.createElement(PurifyUsers, {\n      Users: this.props.Users,\n      totalUsersCount: this.props.totalUsersCount,\n      pageSize: this.props.pageSize,\n      OnChangedPage: this.OnChangedPage,\n      OnFollow: this.props.followThunk,\n      OnUnFollow: this.props.unfollowThunk,\n      currentPage: this.props.currentPage,\n      ToggleInProcess: this.props.ToggleInProcess,\n      InProcess: this.props.InProcess,\n      IsLogined: this.props.IsLogined,\n      ChangePortionSize: this.props.ChangePortionSize,\n      PortionSize: this.props.PortionSize,\n      FindUserThunk: this.props.FindUserThunk,\n      FoundedUsers: this.props.FoundedUsers,\n      FindUserIsFetching: this.props.FindUserIsFetching,\n      OnPageSizeChange: this.OnPageSizeChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }));\n  }\n\n}\n\nlet StateToProps = state => ({\n  IsLogined: GetIsLoginedSelector(state),\n  Users: GetUsers(state),\n  pageSize: GetPageSize(state),\n  totalUsersCount: GetTotalUsersCount(state),\n  currentPage: GetCurrentPage(state),\n  IsFetching: GetIsFeching(state),\n  FindUserIsFetching: FindUserIsFetching(state),\n  InProcess: GetInProgress(state),\n  PortionSize: GetPortionSize(state),\n  FoundedUsers: GetFoundedUserSelector(state)\n});\n\nexport default compose(connect(StateToProps, {\n  followThunk,\n  unfollowThunk,\n  SetCurrentPage,\n  ToggleInProcess,\n  getUsersThunk,\n  ChangePortionSize,\n  FindUserThunk,\n  ChangePageSize\n}) //@ts-ignore\n)(UsersContainer);","map":{"version":3,"sources":["H:\\js_projects\\1\\my-app\\src\\components\\Users\\UsersContainer.tsx"],"names":["React","connect","followThunk","ChangePageSize","unfollowThunk","SetCurrentPage","getUsersThunk","ToggleInProcess","ChangePortionSize","FindUserThunk","PurifyUsers","Preloader","compose","GetCurrentPage","GetInProgress","GetIsFeching","GetPageSize","GetTotalUsersCount","GetUsers","GetPortionSize","GetFoundedUserSelector","FindUserIsFetching","GetIsLoginedSelector","UsersContainer","Component","OnChangedPage","pageNumber","props","pageSize","OnPageSizeChange","PageSize","currentPage","componentDidMount","render","IsFetching","Users","totalUsersCount","InProcess","IsLogined","PortionSize","FoundedUsers","StateToProps","state"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    followThunk,\r\n    ChangePageSize,\r\n    unfollowThunk,\r\n    SetCurrentPage,\r\n    getUsersThunk,\r\n    ToggleInProcess,\r\n    ChangePortionSize,FindUserThunk\r\n} from \"../../data/UsersReduser\";\r\nimport PurifyUsers from \"./Users\";\r\nimport Preloader from \"../assetss/common/Loader/Loader\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    GetCurrentPage,\r\n    GetInProgress,\r\n    GetIsFeching,\r\n    GetPageSize,\r\n    GetTotalUsersCount,\r\n    GetUsers,\r\n    GetPortionSize, GetFoundedUserSelector,FindUserIsFetching\r\n} from \"../../data/Users-Selectors\";\r\nimport { GetIsLoginedSelector} from \"../../data/AuthSelectors\";\r\nimport {GlobalState} from \"../../data/redux-store\";\r\nimport {\r\n    T_MDTP_UsersContainer,\r\n    T_MSTP_UsersContainer,\r\n    TUsersContainerOwnProps\r\n} from \"../GlobalTypes/UsersTypes/UsersTypes\";\r\n\r\ntype TUsersContainerProps = T_MDTP_UsersContainer & T_MSTP_UsersContainer & TUsersContainerOwnProps\r\n\r\nclass UsersContainer extends React.Component<TUsersContainerProps> {\r\n\r\n    componentDidMount() {\r\n        this.props.getUsersThunk(this.props.currentPage, this.props.pageSize)\r\n    }\r\n\r\n   OnChangedPage = (pageNumber : number) => {\r\n        this.props.SetCurrentPage(pageNumber)\r\n        this.props.getUsersThunk(pageNumber, this.props.pageSize)\r\n    }\r\n    OnPageSizeChange =  (PageSize : number) => {\r\n     this.props.ChangePageSize(PageSize)\r\n        this.props.getUsersThunk(this.props.currentPage, PageSize)\r\n}\r\n\r\n    render() {\r\n\r\n        return <>\r\n            {this.props.IsFetching ? <Preloader/> :\r\n                <PurifyUsers Users={this.props.Users}\r\n                             totalUsersCount={this.props.totalUsersCount}\r\n                             pageSize={this.props.pageSize}\r\n                             OnChangedPage={this.OnChangedPage}\r\n                             OnFollow={this.props.followThunk}\r\n                             OnUnFollow={this.props.unfollowThunk}\r\n                             currentPage={this.props.currentPage}\r\n                             ToggleInProcess={this.props.ToggleInProcess}\r\n                             InProcess={this.props.InProcess}\r\n                             IsLogined={this.props.IsLogined}\r\n                             ChangePortionSize={this.props.ChangePortionSize}\r\n                             PortionSize={this.props.PortionSize}\r\n                             FindUserThunk={this.props.FindUserThunk}\r\n                             FoundedUsers={this.props.FoundedUsers}\r\n                             FindUserIsFetching={this.props.FindUserIsFetching}\r\n                             OnPageSizeChange={this.OnPageSizeChange}\r\n                />\r\n            }\r\n        </>\r\n    }\r\n}\r\n\r\nlet StateToProps = (state : GlobalState) : T_MSTP_UsersContainer => ({\r\n        IsLogined : GetIsLoginedSelector(state),\r\n        Users: GetUsers(state),\r\n        pageSize: GetPageSize(state),\r\n        totalUsersCount: GetTotalUsersCount(state),\r\n        currentPage: GetCurrentPage(state),\r\n        IsFetching: GetIsFeching(state),\r\n        FindUserIsFetching: FindUserIsFetching(state),\r\n        InProcess: GetInProgress(state),\r\n        PortionSize : GetPortionSize(state),\r\n        FoundedUsers : GetFoundedUserSelector(state)\r\n})\r\n\r\n\r\n\r\nexport default compose(\r\n    connect<T_MSTP_UsersContainer,T_MDTP_UsersContainer,TUsersContainerOwnProps, GlobalState>(StateToProps,\r\n        {followThunk, unfollowThunk, SetCurrentPage,\r\n            ToggleInProcess, getUsersThunk,ChangePortionSize,FindUserThunk, ChangePageSize})\r\n    //@ts-ignore\r\n)(UsersContainer)"]},"metadata":{},"sourceType":"module"}