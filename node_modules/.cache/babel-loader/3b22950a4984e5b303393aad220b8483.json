{"ast":null,"code":"import _slicedToArray from \"H:\\\\js_projects\\\\1\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"H:\\\\js_projects\\\\1\\\\my-app\\\\src\\\\components\\\\Dialogs\\\\Message\\\\MessagesWithUser.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport Preloader from \"../../assetss/common/Loader/Loader\";\nimport { NavLink } from \"react-router-dom\";\nimport mwuStyles from \"./Messages.module.css\";\nimport UserPhoto from \"../../assetss/images/userPhoto.jpg\";\nimport Viewed from \"../../assetss/images/viewed1.jpg\";\nimport { MaxLengthCreator, required } from \"../../utils/validators\";\nimport d from \"../Dialogs.module.css\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { TextAreaDialogsMessage } from \"../../assetss/common/ValidatorsComponents/ElementsValidators\";\nimport Paginator from \"../../assetss/common/Paginator/Paginator\";\nimport DeleteMessage from \"./DeleteMessage\";\nconst maxValue300 = MaxLengthCreator(300);\n\nconst MessageWithUserForm = props => {\n  return React.createElement(\"form\", {\n    onSubmit: props.handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: d.messages,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(Field, {\n    name: \"MessageTextArea\",\n    component: TextAreaDialogsMessage,\n    placeholder: \"Enter your message here\",\n    validate: [required, maxValue300],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: d.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \" send message\"))))));\n};\n\nconst ReduxMessageWithUserForm = reduxForm({\n  form: 'messages'\n})(MessageWithUserForm);\n\nconst MessagesWithUser = props => {\n  debugger;\n\n  const SendNewMessage = Formdata => {\n    debugger;\n    props.SendNewMessageThunk(props.DialoguserID, Formdata.MessageTextArea);\n  };\n\n  let MessagesWithUserData = {\n    InterlocutorAvatar: props.InterlocutorAvatar,\n    UserAvatar: props.UserAvatar,\n    DialogsMessages: props.DialogsMessages\n  };\n\n  let _useState = useState(MessagesWithUserData),\n      _useState2 = _slicedToArray(_useState, 2),\n      MessagesData = _useState2[0],\n      SetMessagesData = _useState2[1];\n\n  useEffect(() => {\n    SetMessagesData(MessagesWithUserData);\n  }, [MessagesWithUserData]);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, MessagesData.DialogsMessages.items ? MessagesData.DialogsMessages.items.map(item => {\n    return React.createElement(\"div\", {\n      className: mwuStyles.fontStyles,\n      key: item.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: mwuStyles.dateStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"was sent at : \\xA0\\xA0\", item.addedAt.split(\"T\")[0]), React.createElement(\"div\", {\n      className: mwuStyles.MessageFormStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, item.senderName, \"  \\xA0\\xA0\", item.addedAt.split(\"T\")[1].split(\".\")[0].split(\":\")[0], \":\", item.addedAt.split(\"T\")[1].split(\".\")[0].split(\":\")[1]), React.createElement(NavLink, {\n      to: \"/Profile/\".concat(item.senderId),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, item.senderId !== props.MyID ? React.createElement(\"img\", {\n      className: mwuStyles.img,\n      src: MessagesData.InterlocutorAvatar != null ? MessagesData.InterlocutorAvatar : UserPhoto,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }) : React.createElement(\"img\", {\n      className: mwuStyles.img,\n      src: MessagesData.UserAvatar != null ? MessagesData.UserAvatar : UserPhoto,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: mwuStyles.messageText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"\\xA0\\xA0  \", item.body), React.createElement(DeleteMessage, {\n      DialoguserID: props.DialoguserID,\n      MessageID: item.id,\n      DeleteMessageThunk: props.DeleteMessageThunk,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, item.viewed && React.createElement(\"img\", {\n      src: Viewed,\n      className: mwuStyles.viewed,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }))));\n  }) : React.createElement(Preloader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }), MessagesData.DialogsMessages ? React.createElement(React.Fragment, null, React.createElement(ReduxMessageWithUserForm, Object.assign({\n    onSubmit: SendNewMessage\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }))) : React.createElement(Preloader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }));\n};\n\nexport default MessagesWithUser;","map":{"version":3,"sources":["H:\\js_projects\\1\\my-app\\src\\components\\Dialogs\\Message\\MessagesWithUser.jsx"],"names":["React","useEffect","useState","Preloader","NavLink","mwuStyles","UserPhoto","Viewed","MaxLengthCreator","required","d","Field","reduxForm","TextAreaDialogsMessage","Paginator","DeleteMessage","maxValue300","MessageWithUserForm","props","handleSubmit","messages","button","ReduxMessageWithUserForm","form","MessagesWithUser","SendNewMessage","Formdata","SendNewMessageThunk","DialoguserID","MessageTextArea","MessagesWithUserData","InterlocutorAvatar","UserAvatar","DialogsMessages","MessagesData","SetMessagesData","items","map","item","fontStyles","id","dateStyle","addedAt","split","MessageFormStyle","senderName","senderId","MyID","img","messageText","body","DeleteMessageThunk","viewed"],"mappings":"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","sourcesContent":["import React, {useEffect,useState} from \"react\"\r\nimport Preloader from \"../../assetss/common/Loader/Loader\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport mwuStyles from \"./Messages.module.css\"\r\nimport UserPhoto from \"../../assetss/images/userPhoto.jpg\";\r\nimport Viewed from \"../../assetss/images/viewed1.jpg\";\r\nimport {MaxLengthCreator, required} from \"../../utils/validators\";\r\nimport d from \"../Dialogs.module.css\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {TextAreaDialogsMessage} from \"../../assetss/common/ValidatorsComponents/ElementsValidators\";\r\nimport Paginator from \"../../assetss/common/Paginator/Paginator\";\r\nimport DeleteMessage from \"./DeleteMessage\";\r\n\r\n\r\n\r\nconst maxValue300 = MaxLengthCreator(300)\r\n\r\n\r\nconst MessageWithUserForm = (props) => {\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div >\r\n\r\n                <div className={d.messages}>\r\n                    <div>\r\n                        <div>\r\n                            <Field name={\"MessageTextArea\"}\r\n                                   component={TextAreaDialogsMessage}\r\n                                   placeholder={\"Enter your message here\"}\r\n                                   validate={[required, maxValue300]}/>\r\n                        </div>\r\n                        <div>\r\n                            <button className={d.button}> send message</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst ReduxMessageWithUserForm = reduxForm({form: 'messages'})(MessageWithUserForm)\r\n\r\n\r\nconst MessagesWithUser = (props) => {\r\n\r\ndebugger\r\n    const SendNewMessage = (Formdata) => {\r\n        debugger\r\n        props.SendNewMessageThunk(props.DialoguserID, Formdata.MessageTextArea)\r\n    }\r\n\r\n    let MessagesWithUserData = {\r\n        InterlocutorAvatar : props.InterlocutorAvatar,\r\n        UserAvatar : props.UserAvatar,\r\n        DialogsMessages : props.DialogsMessages\r\n    }\r\n\r\n    let [MessagesData, SetMessagesData] = useState(MessagesWithUserData)\r\n\r\n\r\n    useEffect(() => {\r\n        SetMessagesData(MessagesWithUserData)\r\n        }, [MessagesWithUserData]\r\n    )\r\n\r\n    return <div>\r\n        {MessagesData.DialogsMessages.items  ?\r\n            MessagesData.DialogsMessages.items.map(item => {\r\n                return (\r\n                    <div  className={mwuStyles.fontStyles} key={item.id} >\r\n                        <div className={mwuStyles.dateStyle}>\r\n                            was sent at : &nbsp;&nbsp;\r\n                            {item.addedAt.split(\"T\")[0]}\r\n                        </div>\r\n\r\n\r\n                        <div className={mwuStyles.MessageFormStyle}>\r\n                            <div>\r\n\r\n                                {item.senderName}  &nbsp;&nbsp;\r\n                                {item.addedAt.split(\"T\")[1].split(\".\")[0].split(\":\")[0]}:\r\n                                {item.addedAt.split(\"T\")[1].split(\".\")[0].split(\":\")[1]}\r\n                            </div>\r\n\r\n\r\n\r\n                            <NavLink to={`/Profile/${item.senderId}`}>\r\n                                {item.senderId !== props.MyID ?\r\n                                    <img className={mwuStyles.img}\r\n                                         src={MessagesData.InterlocutorAvatar != null\r\n                                             ? MessagesData.InterlocutorAvatar\r\n                                             : UserPhoto}/>\r\n                                    :\r\n                                    <img className={mwuStyles.img}\r\n                                         src={MessagesData.UserAvatar!= null ?\r\n                                             MessagesData.UserAvatar\r\n                                             : UserPhoto}/>\r\n                                }\r\n                            </NavLink>\r\n\r\n                            <div className={mwuStyles.messageText}>\r\n                                &nbsp;&nbsp;  {item.body}\r\n                            </div>\r\n                            <DeleteMessage DialoguserID={props.DialoguserID}\r\n                                           MessageID={item.id}\r\n                                           DeleteMessageThunk={props.DeleteMessageThunk}\r\n                            />\r\n                            <div>\r\n                                {item.viewed &&\r\n                                <img src={Viewed} className={mwuStyles.viewed}/>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            })\r\n\r\n            : <Preloader/>\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n        {MessagesData.DialogsMessages ?\r\n            <>\r\n                <ReduxMessageWithUserForm onSubmit={SendNewMessage} {...props} />\r\n            {/*<Paginator OnChangedPage={props.OnChangedPage}\r\n                       currentPage={props.currentPage}\r\n                       totalUsersCount={props.MessagesData.DialogsMessages.totalCount}\r\n                       pageSize={props.pageSize}\r\n                       PortionSize={props.PortionSize}\r\n            />*/}\r\n            </>\r\n            : <Preloader/>\r\n        }\r\n    </div>\r\n\r\n}\r\nexport default MessagesWithUser"]},"metadata":{},"sourceType":"module"}