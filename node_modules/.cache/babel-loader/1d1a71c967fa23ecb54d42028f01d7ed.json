{"ast":null,"code":"import _slicedToArray from \"H:\\\\js_projects\\\\1\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"H:\\\\js_projects\\\\1\\\\my-app\\\\src\\\\components\\\\Profile\\\\UserInfo\\\\ProfileStatusF.tsx\";\nimport React, { useState, useEffect } from \"react\";\n\nconst ProfileStatusF = props => {\n  let _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      IsStatusChanging = _useState2[0],\n      SetIsStatusChanging = _useState2[1];\n\n  let _useState3 = useState(props.status),\n      _useState4 = _slicedToArray(_useState3, 2),\n      Status = _useState4[0],\n      SetStatus = _useState4[1];\n\n  useEffect(() => {\n    SetStatus(props.status);\n  }, [props.status]);\n\n  const StatusChangingON = () => {\n    SetIsStatusChanging(true);\n  };\n\n  const StatusChangingOFF = () => {\n    SetIsStatusChanging(false);\n    props.SetProfileStatus(Status);\n  };\n\n  const OnStatusChange = e => {\n    SetStatus(e.currentTarget.value);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, props.IsMyPage ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, !IsStatusChanging ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    onClick: StatusChangingON,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Status  : \", Status || \"the status is empty\")) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    onChange: OnStatusChange,\n    onBlur: StatusChangingOFF,\n    autoFocus: true,\n    value: Status ? Status : \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }))) : Status || \"the status is empty\");\n};\n\nexport default ProfileStatusF;","map":{"version":3,"sources":["H:\\js_projects\\1\\my-app\\src\\components\\Profile\\UserInfo\\ProfileStatusF.tsx"],"names":["React","useState","useEffect","ProfileStatusF","props","IsStatusChanging","SetIsStatusChanging","status","Status","SetStatus","StatusChangingON","StatusChangingOFF","SetProfileStatus","OnStatusChange","e","currentTarget","value","IsMyPage"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;;AAGA,MAAMC,cAA+C,GAAIC,KAAD,IAAW;AAAA,kBAGjBH,QAAQ,CAAC,KAAD,CAHS;AAAA;AAAA,MAG1DI,gBAH0D;AAAA,MAGxCC,mBAHwC;;AAAA,mBAIrCL,QAAQ,CAAgBG,KAAK,CAACG,MAAtB,CAJ6B;AAAA;AAAA,MAI1DC,MAJ0D;AAAA,MAIlDC,SAJkD;;AAM/DP,EAAAA,SAAS,CAAC,MAAM;AACRO,IAAAA,SAAS,CAACL,KAAK,CAACG,MAAP,CAAT;AACH,GAFI,EAEF,CAACH,KAAK,CAACG,MAAP,CAFE,CAAT;;AAKA,QAAMG,gBAAgB,GAAG,MAAM;AAC3BJ,IAAAA,mBAAmB,CAAC,IAAD,CAAnB;AACH,GAFD;;AAIA,QAAMK,iBAAiB,GAAG,MAAM;AAC5BL,IAAAA,mBAAmB,CAAC,KAAD,CAAnB;AACAF,IAAAA,KAAK,CAACQ,gBAAN,CAAuBJ,MAAvB;AAEH,GAJD;;AAMA,QAAMK,cAAc,GAAIC,CAAD,IAA0C;AAC7DL,IAAAA,SAAS,CAACK,CAAC,CAACC,aAAF,CAAgBC,KAAjB,CAAT;AACH,GAFD;;AAIA,SAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCZ,KAAK,CAACa,QAAN,GACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK,CAACZ,gBAAD,GACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACR;AAAM,IAAA,OAAO,EAAEK,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACWF,MAAM,IAAI,qBADrB,CADQ,CADH,GAOG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAQ,IAAA,QAAQ,EAAEK,cAAlB;AAAkC,IAAA,MAAM,EAAEF,iBAA1C;AAA6D,IAAA,SAAS,EAAE,IAAxE;AACO,IAAA,KAAK,EAAEH,MAAM,GAAGA,MAAH,GAAY,EADhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CARR,CADH,GAeKA,MAAM,IAAI,qBAhBhB,CAAR;AAoBH,CA7CD;;AAgDA,eAAeL,cAAf","sourcesContent":["import React, {useState, useEffect} from \"react\"\r\nimport {TProfileStatusFProps} from \"../../GlobalTypes/ProfileTypes/ProfileTypes\";\r\n\r\nconst ProfileStatusF : React.FC<TProfileStatusFProps> = (props) => {\r\n\r\n\r\n    let [IsStatusChanging, SetIsStatusChanging] = useState(false)\r\n    let [Status, SetStatus] = useState<string | null>(props.status)\r\n\r\n    useEffect(() => {\r\n            SetStatus(props.status)\r\n        }, [props.status]\r\n    )\r\n\r\n    const StatusChangingON = () => {\r\n        SetIsStatusChanging(true)\r\n    }\r\n\r\n    const StatusChangingOFF = () => {\r\n        SetIsStatusChanging(false)\r\n        props.SetProfileStatus(Status)\r\n\r\n    }\r\n\r\n    const OnStatusChange = (e: React.FormEvent<HTMLInputElement>) => {\r\n        SetStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (<div>\r\n            {props.IsMyPage ?\r\n                <div>\r\n                    {!IsStatusChanging ?\r\n                        <div>\r\n                <span onClick={StatusChangingON}>\r\n                Status  : {Status || \"the status is empty\"}\r\n                </span>\r\n                        </div>\r\n                        :\r\n                        <div>\r\n                            <input  onChange={OnStatusChange} onBlur={StatusChangingOFF} autoFocus={true}\r\n                                   value={Status ? Status : \"\"}/>\r\n                        </div>\r\n                    }\r\n                </div>\r\n                : Status || \"the status is empty\"\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ProfileStatusF"]},"metadata":{},"sourceType":"module"}