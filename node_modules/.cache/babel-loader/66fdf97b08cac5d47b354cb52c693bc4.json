{"ast":null,"code":"import _slicedToArray from \"H:\\\\js_projects\\\\1\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"H:\\\\js_projects\\\\1\\\\my-app\\\\src\\\\components\\\\ToDoLists\\\\ToDoList.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport TDLS from \"./ToDoLists.module.css\";\nimport ToDoListMenuIcon from \"./ListMenu\";\nimport SaveButton from \"./SaveButton\";\nimport GoBackButton from \"./GoBackButton\";\nimport TitleChangingField from \"./TitleChangeField\";\nimport AddNewTask from \"./AddNewTask/AddNewTask\";\nimport ShowTasksButton from \"./ToDoListTasks/ShowTasksButton\";\nimport HideTasksButton from \"./ToDoListTasks/HideTasksButton\";\nimport Tasks from \"./ToDoListTasks/Tasks\";\nimport Preloader from \"../assetss/common/Loader/Loader\";\n\nconst ToDoList = props => {\n  let _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      EditTitleMode = _useState2[0],\n      SetEditTitleMode = _useState2[1];\n\n  let _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      ShowTasksMode = _useState4[0],\n      SetShowTasksMode = _useState4[1];\n\n  let _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      TaskEditMode = _useState6[0],\n      SetTaskEditMode = _useState6[1];\n\n  let _useState7 = useState(props.title),\n      _useState8 = _slicedToArray(_useState7, 2),\n      CurrentToDoListTitle = _useState8[0],\n      SetToDoListTitle = _useState8[1];\n\n  const EditTitleModeON = () => {\n    SetEditTitleMode(true);\n  };\n\n  const EditTitleModeOFF = () => {\n    SetEditTitleMode(false);\n  };\n\n  const OnToDoListTitleChanging = el => {\n    SetToDoListTitle(el.currentTarget.value);\n  };\n\n  const ShowTask = () => {\n    props.GetToDoListTasksThunk(props.ListID, props.ToDoListTasksCount, props.ToDoListTasksPage);\n    SetShowTasksMode(true);\n    props.ButtonIsDesabledON();\n  };\n\n  const ShowTaskModeOFF = () => {\n    SetShowTasksMode(false);\n    props.ButtonIsDesabledOFF();\n  };\n\n  const TaskEditModeON = () => {\n    SetTaskEditMode(true);\n  };\n\n  const TaskEditModeOFF = () => {\n    SetTaskEditMode(false);\n  };\n\n  useEffect(() => {\n    SetToDoListTitle(props.title);\n  }, [props.title]);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, !EditTitleMode ? React.createElement(\"div\", {\n    className: TDLS.ToDolistsWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(ToDoListMenuIcon, {\n    ListID: props.ListID,\n    ShowTasksMode: ShowTasksMode,\n    EditTitleModeON: EditTitleModeON,\n    Del: props.DeleteToDoListThunk,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: TDLS.ToDoListTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, props.title)) : React.createElement(\"div\", {\n    className: TDLS.ToDolistsChanchingWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(SaveButton, {\n    ListID: props.ListID,\n    ChangeToDoListTitleThunk: props.ChangeToDoListTitleThunk,\n    EditTitleModeOFF: EditTitleModeOFF,\n    CurrentToDoListTitle: CurrentToDoListTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }), React.createElement(GoBackButton, {\n    HandleOnClick: EditTitleModeOFF,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: TDLS.ToDoListChangingInput,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(TitleChangingField, {\n    OnToDoListTitleChanging: OnToDoListTitleChanging,\n    CurrentToDoListTitle: CurrentToDoListTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }))), ShowTasksMode ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(AddNewTask, {\n    ListID: props.ListID,\n    AddNewTaskThunk: props.AddNewTaskThunk,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, props.ToDoListTasks.items ? React.createElement(\"div\", {\n    className: TDLS.tasksposititon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(Tasks, {\n    DeleteTaskThunk: props.DeleteTaskThunk,\n    ToDoListTasks: props.ToDoListTasks,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  })) : React.createElement(Preloader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: TDLS.HideTasksButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(HideTasksButton, {\n    HandleOnClick: ShowTaskModeOFF,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  })))) : React.createElement(\"div\", {\n    className: TDLS.ShowTasksButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(ShowTasksButton, {\n    ShowTasksMode: ShowTasksMode,\n    HandleOnClick: ShowTask,\n    ButtonIsDesabled: props.ButtonIsDesabled,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  })));\n};\n\nexport default ToDoList;","map":{"version":3,"sources":["H:\\js_projects\\1\\my-app\\src\\components\\ToDoLists\\ToDoList.jsx"],"names":["React","useState","useEffect","TDLS","ToDoListMenuIcon","SaveButton","GoBackButton","TitleChangingField","AddNewTask","ShowTasksButton","HideTasksButton","Tasks","Preloader","ToDoList","props","EditTitleMode","SetEditTitleMode","ShowTasksMode","SetShowTasksMode","TaskEditMode","SetTaskEditMode","title","CurrentToDoListTitle","SetToDoListTitle","EditTitleModeON","EditTitleModeOFF","OnToDoListTitleChanging","el","currentTarget","value","ShowTask","GetToDoListTasksThunk","ListID","ToDoListTasksCount","ToDoListTasksPage","ButtonIsDesabledON","ShowTaskModeOFF","ButtonIsDesabledOFF","TaskEditModeON","TaskEditModeOFF","ToDolistsWrapper","DeleteToDoListThunk","ToDoListTitle","ToDolistsChanchingWrapper","ChangeToDoListTitleThunk","ToDoListChangingInput","AddNewTaskThunk","ToDoListTasks","items","tasksposititon","DeleteTaskThunk","ButtonIsDesabled"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\"\r\nimport TDLS from \"./ToDoLists.module.css\";\r\nimport ToDoListMenuIcon from \"./ListMenu\";\r\nimport SaveButton from \"./SaveButton\";\r\nimport GoBackButton from \"./GoBackButton\";\r\nimport TitleChangingField from \"./TitleChangeField\";\r\nimport AddNewTask from \"./AddNewTask/AddNewTask\";\r\nimport ShowTasksButton from \"./ToDoListTasks/ShowTasksButton\";\r\nimport HideTasksButton from \"./ToDoListTasks/HideTasksButton\";\r\nimport Tasks from \"./ToDoListTasks/Tasks\";\r\nimport Preloader from \"../assetss/common/Loader/Loader\";\r\n\r\n\r\nconst ToDoList = (props) => {\r\n    let [EditTitleMode, SetEditTitleMode] = useState(false)\r\n    let [ShowTasksMode, SetShowTasksMode] = useState(false)\r\n    let [TaskEditMode, SetTaskEditMode] = useState(false)\r\n\r\n\r\n    let [CurrentToDoListTitle, SetToDoListTitle] = useState(props.title)\r\n\r\n    const EditTitleModeON = () => {\r\n        SetEditTitleMode(true)\r\n    }\r\n    const EditTitleModeOFF = () => {\r\n        SetEditTitleMode(false)\r\n    }\r\n\r\n    const OnToDoListTitleChanging = (el) => {\r\n        SetToDoListTitle(el.currentTarget.value)\r\n    }\r\n\r\n    const ShowTask = () => {\r\n        props.GetToDoListTasksThunk(props.ListID, props.ToDoListTasksCount, props.ToDoListTasksPage)\r\n        SetShowTasksMode(true)\r\n        props.ButtonIsDesabledON()\r\n    }\r\n\r\n    const ShowTaskModeOFF = () => {\r\n        SetShowTasksMode(false)\r\n        props.ButtonIsDesabledOFF()\r\n    }\r\n\r\n    const TaskEditModeON = () => {\r\n        SetTaskEditMode(true)\r\n    }\r\n    const TaskEditModeOFF = () => {\r\n        SetTaskEditMode(false)\r\n    }\r\n\r\n    useEffect(() => {\r\n            SetToDoListTitle(props.title)\r\n        }, [props.title]\r\n    )\r\n\r\n\r\n    return <div>\r\n        {!EditTitleMode ?\r\n            <div className={TDLS.ToDolistsWrapper}>\r\n\r\n                <ToDoListMenuIcon ListID={props.ListID}\r\n                                  ShowTasksMode={ShowTasksMode}\r\n                                  EditTitleModeON={EditTitleModeON}\r\n                                  Del={props.DeleteToDoListThunk}/>\r\n\r\n                <div className={TDLS.ToDoListTitle}>\r\n                    {props.title}\r\n                </div>\r\n            </div>\r\n\r\n            :\r\n            <div className={TDLS.ToDolistsChanchingWrapper}>\r\n                <div>\r\n                    <SaveButton ListID={props.ListID} ChangeToDoListTitleThunk={props.ChangeToDoListTitleThunk}\r\n                                EditTitleModeOFF={EditTitleModeOFF} CurrentToDoListTitle={CurrentToDoListTitle}/>\r\n                    <GoBackButton HandleOnClick={EditTitleModeOFF}/>\r\n                </div>\r\n                <div className={TDLS.ToDoListChangingInput}>\r\n                    <TitleChangingField OnToDoListTitleChanging={OnToDoListTitleChanging}\r\n                                        CurrentToDoListTitle={CurrentToDoListTitle}/>\r\n                </div>\r\n\r\n            </div>\r\n        }\r\n\r\n        {ShowTasksMode ?\r\n\r\n            <div>\r\n\r\n                <AddNewTask ListID={props.ListID} AddNewTaskThunk={props.AddNewTaskThunk}/>\r\n\r\n                <div>\r\n                    {props.ToDoListTasks.items ?\r\n                        <div className={TDLS.tasksposititon}>\r\n                            <Tasks\r\n                                   DeleteTaskThunk={props.DeleteTaskThunk}\r\n                                   ToDoListTasks={props.ToDoListTasks}\r\n                            />\r\n                        </div>\r\n\r\n                        :\r\n                        <Preloader/>\r\n                    }\r\n\r\n\r\n                    <div className={TDLS.HideTasksButton}>\r\n                        <HideTasksButton HandleOnClick={ShowTaskModeOFF}/>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n            :\r\n            <div className={TDLS.ShowTasksButton}>\r\n                <ShowTasksButton ShowTasksMode={ShowTasksMode}\r\n                                 HandleOnClick={ShowTask}\r\n                                 ButtonIsDesabled={props.ButtonIsDesabled}\r\n                />\r\n            </div>\r\n\r\n        }\r\n    </div>\r\n}\r\nexport default ToDoList"]},"metadata":{},"sourceType":"module"}