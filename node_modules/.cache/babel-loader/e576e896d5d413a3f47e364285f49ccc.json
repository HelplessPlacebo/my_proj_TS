{"ast":null,"code":"import _slicedToArray from \"H:\\\\js_projects\\\\1\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"H:\\\\js_projects\\\\1\\\\my-app\\\\src\\\\components\\\\ToDoLists\\\\ToDoListTasks\\\\Task.jsx\";\nimport React, { useState } from \"react\";\nimport ts from \"./Tasks.module.css\";\nimport classNames from 'classnames';\nimport DeleteButton from \"./DeleteTaskButton\";\nimport TaskDoneIcon from \"./DoneIcone\";\nimport EditTaskButton from \"./EditTaskButton\";\nimport TaskDetails from \"./TaskDetails\";\nimport NotDoneIcon from \"./NotDoneIcon\";\nimport TaskEditForm from \"./TaskEditForm\";\n\nconst Task = props => {\n  let _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      TaskEditMode = _useState2[0],\n      SetTaskEditMode = _useState2[1];\n\n  const TaskEditModeON = () => {\n    SetTaskEditMode(true);\n  };\n\n  const TaskEditModeOFF = () => {\n    SetTaskEditMode(false);\n  };\n\n  const TaskExecutedStyleForWindow = classNames({\n    [ts.Ramka]: !props.completed,\n    [ts.DoneRamka]: props.completed\n  });\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  },\n  /*  props.ToDoListTasks.map(el => el.ListId === props.ListID && el.TaskData.items.map(key =>{\r\n         return <div key={key.id}>\r\n             {key.title}\r\n         </div>\r\n         })\r\n     )*/\n  !TaskEditMode ? React.createElement(\"div\", {\n    className: ts.Main,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classNames(ts.MainWrapper),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: ts.TaskEditButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(EditTaskButton, {\n    ButtonSize: \"small\",\n    HandleOnClick: TaskEditModeON,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: TaskExecutedStyleForWindow,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: ts.TaskBodyWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, props.completed ? React.createElement(\"div\", {\n    className: ts.iconStatus,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(TaskDoneIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  })) : React.createElement(\"div\", {\n    className: ts.iconStatus,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(NotDoneIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: ts.Title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, props.TaskTitle), React.createElement(\"div\", {\n    className: ts.ToTrashIcon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(DeleteButton, {\n    DeleteTaskThunk: props.DeleteTaskThunk,\n    ShowButtonBlocked: props.ShowButtonBlocked,\n    ListID: props.ListID,\n    TaskID: props.TaskID,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(TaskDetails, {\n    addedDate: props.TaskAddedDate,\n    deadline: props.TaskDeadline,\n    description: props.TaskDescription,\n    ShowButtonBlocked: props.ShowButtonBlocked,\n    ShowButtonBlockedON: props.ShowButtonBlockedON,\n    ShowButtonBlockedOFF: props.ShowButtonBlockedOFF,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }))))) : React.createElement(\"button\", {\n    onClick: TaskEditModeOFF,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(TaskEditForm, {\n    CurrentTask: props.CurrentTask,\n    TaskEditModeOFF: TaskEditModeOFF,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  })));\n};\n\nexport default Task;","map":{"version":3,"sources":["H:\\js_projects\\1\\my-app\\src\\components\\ToDoLists\\ToDoListTasks\\Task.jsx"],"names":["React","useState","ts","classNames","DeleteButton","TaskDoneIcon","EditTaskButton","TaskDetails","NotDoneIcon","TaskEditForm","Task","props","TaskEditMode","SetTaskEditMode","TaskEditModeON","TaskEditModeOFF","TaskExecutedStyleForWindow","Ramka","completed","DoneRamka","Main","MainWrapper","TaskEditButton","TaskBodyWrapper","iconStatus","Title","TaskTitle","ToTrashIcon","DeleteTaskThunk","ShowButtonBlocked","ListID","TaskID","TaskAddedDate","TaskDeadline","TaskDescription","ShowButtonBlockedON","ShowButtonBlockedOFF","CurrentTask"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\"\r\nimport ts from \"./Tasks.module.css\"\r\nimport classNames from 'classnames';\r\nimport DeleteButton from \"./DeleteTaskButton\";\r\nimport TaskDoneIcon from \"./DoneIcone\";\r\nimport EditTaskButton from \"./EditTaskButton\";\r\nimport TaskDetails from \"./TaskDetails\";\r\nimport NotDoneIcon from \"./NotDoneIcon\";\r\nimport TaskEditForm from \"./TaskEditForm\";\r\n\r\n\r\nconst Task = (props) => {\r\n    let [TaskEditMode, SetTaskEditMode] = useState(false)\r\n\r\n\r\n    const TaskEditModeON = () => {\r\n        SetTaskEditMode(true)\r\n    }\r\n    const TaskEditModeOFF = () => {\r\n        SetTaskEditMode(false)\r\n    }\r\n    const TaskExecutedStyleForWindow = classNames({\r\n        [ts.Ramka] : !props.completed,\r\n        [ts.DoneRamka] : props.completed\r\n    })\r\n\r\n    return <div>\r\n        {  /*  props.ToDoListTasks.map(el => el.ListId === props.ListID && el.TaskData.items.map(key =>{\r\n                  return <div key={key.id}>\r\n                      {key.title}\r\n                  </div>\r\n                  })\r\n              )*/\r\n            !TaskEditMode ?\r\n            <div  className={ts.Main}>\r\n\r\n                <div className={classNames(ts.MainWrapper)}>\r\n\r\n                    <div className={ts.TaskEditButton}>\r\n                        <EditTaskButton ButtonSize={\"small\"} HandleOnClick={TaskEditModeON}/>\r\n                    </div>\r\n\r\n                    <div className={TaskExecutedStyleForWindow}>\r\n                        <div className={ts.TaskBodyWrapper}>\r\n                            {props.completed ?\r\n                                <div className={ts.iconStatus}>\r\n                                    <TaskDoneIcon/>\r\n                                </div>\r\n                                :\r\n                                <div className={ts.iconStatus}>\r\n                                    <NotDoneIcon/>\r\n                                </div>\r\n                            }\r\n\r\n\r\n                            <div className={ts.Title}>\r\n                                {props.TaskTitle}\r\n                            </div>\r\n\r\n\r\n                            <div className={ts.ToTrashIcon}>\r\n                                <DeleteButton DeleteTaskThunk={props.DeleteTaskThunk}\r\n                                              ShowButtonBlocked={props.ShowButtonBlocked}\r\n                                              ListID={props.ListID} TaskID={props.TaskID}/>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        <div>\r\n                            <TaskDetails\r\n                                addedDate={props.TaskAddedDate}\r\n                                deadline={props.TaskDeadline}\r\n                                description={props.TaskDescription}\r\n                                ShowButtonBlocked={props.ShowButtonBlocked}\r\n                                ShowButtonBlockedON={props.ShowButtonBlockedON}\r\n                                ShowButtonBlockedOFF={props.ShowButtonBlockedOFF}\r\n                            />\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n                :\r\n                <button onClick={TaskEditModeOFF}>\r\n                    <TaskEditForm CurrentTask={props.CurrentTask}\r\n                                  TaskEditModeOFF={TaskEditModeOFF}\r\n                    />\r\n                </button>\r\n        }\r\n\r\n    </div>\r\n}\r\n\r\n\r\nexport default Task"]},"metadata":{},"sourceType":"module"}