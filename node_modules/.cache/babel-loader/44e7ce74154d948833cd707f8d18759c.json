{"ast":null,"code":"import _slicedToArray from \"H:\\\\js_projects\\\\1\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"H:\\\\js_projects\\\\1\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"H:\\\\js_projects\\\\1\\\\my-app\\\\src\\\\components\\\\ModalWindow\\\\ModalSelectLanguage.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Radio from '@material-ui/core/Radio';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nconst options = ['English', 'Russian', 'Ukraine', 'Poland', 'Germany'];\n\nfunction ConfirmationDialogRaw(props) {\n  const onClose = props.onClose,\n        valueProp = props.value,\n        open = props.open,\n        other = _objectWithoutProperties(props, [\"onClose\", \"value\", \"open\"]);\n\n  const _React$useState = React.useState(valueProp),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        value = _React$useState2[0],\n        setValue = _React$useState2[1];\n\n  const radioGroupRef = React.useRef(null);\n  React.useEffect(() => {\n    if (!open) {\n      setValue(valueProp);\n    }\n  }, [valueProp, open]);\n\n  const handleEntering = () => {\n    if (radioGroupRef.current != null) {\n      radioGroupRef.current.focus();\n    }\n  };\n\n  const handleCancel = () => {\n    onClose();\n  };\n\n  const handleOk = () => {\n    onClose(value);\n  };\n\n  const handleChange = event => {\n    setValue(event.target.value);\n  };\n\n  return React.createElement(Dialog, Object.assign({\n    disableBackdropClick: true,\n    disableEscapeKeyDown: true,\n    maxWidth: \"xs\",\n    onEntering: handleEntering,\n    \"aria-labelledby\": \"confirmation-dialog-title\",\n    open: open\n  }, other, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), React.createElement(DialogTitle, {\n    id: \"confirmation-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Select Language\"), React.createElement(DialogContent, {\n    dividers: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(RadioGroup, {\n    ref: radioGroupRef,\n    \"aria-label\": \"ringtone\",\n    name: \"ringtone\",\n    value: value,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, options.map(option => React.createElement(FormControlLabel, {\n    value: option,\n    key: option,\n    control: React.createElement(Radio, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }),\n    label: option,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  })))), React.createElement(DialogActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(Button, {\n    autoFocus: true,\n    onClick: handleCancel,\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \"Cancel\"), React.createElement(Button, {\n    onClick: handleOk,\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \"Ok\")));\n}\n\nConfirmationDialogRaw.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  value: PropTypes.string.isRequired\n};\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper\n  },\n  paper: {\n    width: '80%',\n    maxHeight: 435\n  }\n}));\n\nconst SelectLanguageWindow = () => {\n  const classes = useStyles();\n\n  const _React$useState3 = React.useState(false),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        open = _React$useState4[0],\n        setOpen = _React$useState4[1];\n\n  const _React$useState5 = React.useState('Dione'),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        value = _React$useState6[0],\n        setValue = _React$useState6[1];\n\n  const handleClickListItem = () => {\n    setOpen(true);\n  };\n\n  const handleClose = newValue => {\n    setOpen(false);\n\n    if (newValue) {\n      setValue(newValue);\n    }\n  };\n\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, React.createElement(List, {\n    component: \"div\",\n    role: \"list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(ListItem, {\n    button: true,\n    divider: true,\n    disabled: true,\n    role: \"listitem\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, React.createElement(ListItemText, {\n    primary: \"Interruptions\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  })), React.createElement(ListItem, {\n    button: true,\n    divider: true,\n    \"aria-haspopup\": \"true\",\n    \"aria-controls\": \"ringtone-menu\",\n    \"aria-label\": \"phone ringtone\",\n    onClick: handleClickListItem,\n    role: \"listitem\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, React.createElement(ListItemText, {\n    primary: \"Phone ringtone\",\n    secondary: value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  })), React.createElement(ListItem, {\n    button: true,\n    divider: true,\n    disabled: true,\n    role: \"listitem\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, React.createElement(ListItemText, {\n    primary: \"Default notification ringtone\",\n    secondary: \"Tethys\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  })), React.createElement(ConfirmationDialogRaw, {\n    classes: {\n      paper: classes.paper\n    },\n    id: \"ringtone-menu\",\n    keepMounted: true,\n    open: open,\n    onClose: handleClose,\n    value: value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  })));\n};\n\nexport default SelectLanguageWindow;","map":{"version":3,"sources":["H:\\js_projects\\1\\my-app\\src\\components\\ModalWindow\\ModalSelectLanguage.jsx"],"names":["React","PropTypes","makeStyles","Button","List","ListItem","ListItemText","DialogTitle","DialogContent","DialogActions","Dialog","RadioGroup","Radio","FormControlLabel","options","ConfirmationDialogRaw","props","onClose","valueProp","value","open","other","useState","setValue","radioGroupRef","useRef","useEffect","handleEntering","current","focus","handleCancel","handleOk","handleChange","event","target","map","option","propTypes","func","isRequired","bool","string","useStyles","theme","root","width","maxWidth","backgroundColor","palette","background","paper","maxHeight","SelectLanguageWindow","classes","setOpen","handleClickListItem","handleClose","newValue"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AAEA,MAAMC,OAAO,GAAG,CACZ,SADY,EAEZ,SAFY,EAGZ,SAHY,EAIZ,QAJY,EAKZ,SALY,CAAhB;;AAQA,SAASC,qBAAT,CAA+BC,KAA/B,EAAsC;AAAA,QAC1BC,OAD0B,GACoBD,KADpB,CAC1BC,OAD0B;AAAA,QACVC,SADU,GACoBF,KADpB,CACjBG,KADiB;AAAA,QACCC,IADD,GACoBJ,KADpB,CACCI,IADD;AAAA,QACUC,KADV,4BACoBL,KADpB;;AAAA,0BAERhB,KAAK,CAACsB,QAAN,CAAeJ,SAAf,CAFQ;AAAA;AAAA,QAE3BC,KAF2B;AAAA,QAEpBI,QAFoB;;AAGlC,QAAMC,aAAa,GAAGxB,KAAK,CAACyB,MAAN,CAAa,IAAb,CAAtB;AAEAzB,EAAAA,KAAK,CAAC0B,SAAN,CAAgB,MAAM;AAClB,QAAI,CAACN,IAAL,EAAW;AACPG,MAAAA,QAAQ,CAACL,SAAD,CAAR;AACH;AACJ,GAJD,EAIG,CAACA,SAAD,EAAYE,IAAZ,CAJH;;AAMA,QAAMO,cAAc,GAAG,MAAM;AACzB,QAAIH,aAAa,CAACI,OAAd,IAAyB,IAA7B,EAAmC;AAC/BJ,MAAAA,aAAa,CAACI,OAAd,CAAsBC,KAAtB;AACH;AACJ,GAJD;;AAMA,QAAMC,YAAY,GAAG,MAAM;AACvBb,IAAAA,OAAO;AACV,GAFD;;AAIA,QAAMc,QAAQ,GAAG,MAAM;AACnBd,IAAAA,OAAO,CAACE,KAAD,CAAP;AACH,GAFD;;AAIA,QAAMa,YAAY,GAAGC,KAAK,IAAI;AAC1BV,IAAAA,QAAQ,CAACU,KAAK,CAACC,MAAN,CAAaf,KAAd,CAAR;AACH,GAFD;;AAIA,SACI,oBAAC,MAAD;AACI,IAAA,oBAAoB,MADxB;AAEI,IAAA,oBAAoB,MAFxB;AAGI,IAAA,QAAQ,EAAC,IAHb;AAII,IAAA,UAAU,EAAEQ,cAJhB;AAKI,uBAAgB,2BALpB;AAMI,IAAA,IAAI,EAAEP;AANV,KAOQC,KAPR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MASI,oBAAC,WAAD;AAAa,IAAA,EAAE,EAAC,2BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBATJ,EAUI,oBAAC,aAAD;AAAe,IAAA,QAAQ,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,UAAD;AACI,IAAA,GAAG,EAAEG,aADT;AAEI,kBAAW,UAFf;AAGI,IAAA,IAAI,EAAC,UAHT;AAII,IAAA,KAAK,EAAEL,KAJX;AAKI,IAAA,QAAQ,EAAEa,YALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOKlB,OAAO,CAACqB,GAAR,CAAYC,MAAM,IACf,oBAAC,gBAAD;AAAkB,IAAA,KAAK,EAAEA,MAAzB;AAAiC,IAAA,GAAG,EAAEA,MAAtC;AAA8C,IAAA,OAAO,EAAE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAvD;AAAkE,IAAA,KAAK,EAAEA,MAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,CAPL,CADJ,CAVJ,EAuBI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAQ,IAAA,SAAS,MAAjB;AAAkB,IAAA,OAAO,EAAEN,YAA3B;AAAyC,IAAA,KAAK,EAAC,SAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAII,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEC,QAAjB;AAA2B,IAAA,KAAK,EAAC,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAJJ,CAvBJ,CADJ;AAkCH;;AAEDhB,qBAAqB,CAACsB,SAAtB,GAAkC;AAC9BpB,EAAAA,OAAO,EAAEhB,SAAS,CAACqC,IAAV,CAAeC,UADM;AAE9BnB,EAAAA,IAAI,EAAEnB,SAAS,CAACuC,IAAV,CAAeD,UAFS;AAG9BpB,EAAAA,KAAK,EAAElB,SAAS,CAACwC,MAAV,CAAiBF;AAHM,CAAlC;AAMA,MAAMG,SAAS,GAAGxC,UAAU,CAACyC,KAAK,KAAK;AACnCC,EAAAA,IAAI,EAAE;AACFC,IAAAA,KAAK,EAAE,MADL;AAEFC,IAAAA,QAAQ,EAAE,GAFR;AAGFC,IAAAA,eAAe,EAAEJ,KAAK,CAACK,OAAN,CAAcC,UAAd,CAAyBC;AAHxC,GAD6B;AAMnCA,EAAAA,KAAK,EAAE;AACHL,IAAAA,KAAK,EAAE,KADJ;AAEHM,IAAAA,SAAS,EAAE;AAFR;AAN4B,CAAL,CAAN,CAA5B;;AAYA,MAAMC,oBAAoB,GAAG,MAAM;AAC/B,QAAMC,OAAO,GAAGX,SAAS,EAAzB;;AAD+B,2BAEP1C,KAAK,CAACsB,QAAN,CAAe,KAAf,CAFO;AAAA;AAAA,QAExBF,IAFwB;AAAA,QAElBkC,OAFkB;;AAAA,2BAGLtD,KAAK,CAACsB,QAAN,CAAe,OAAf,CAHK;AAAA;AAAA,QAGxBH,KAHwB;AAAA,QAGjBI,QAHiB;;AAK/B,QAAMgC,mBAAmB,GAAG,MAAM;AAC9BD,IAAAA,OAAO,CAAC,IAAD,CAAP;AACH,GAFD;;AAIA,QAAME,WAAW,GAAGC,QAAQ,IAAI;AAC5BH,IAAAA,OAAO,CAAC,KAAD,CAAP;;AAEA,QAAIG,QAAJ,EAAc;AACVlC,MAAAA,QAAQ,CAACkC,QAAD,CAAR;AACH;AACJ,GAND;;AAQA,SACI;AAAK,IAAA,SAAS,EAAEJ,OAAO,CAACT,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,KAAhB;AAAsB,IAAA,IAAI,EAAC,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,QAAD;AAAU,IAAA,MAAM,MAAhB;AAAiB,IAAA,OAAO,MAAxB;AAAyB,IAAA,QAAQ,MAAjC;AAAkC,IAAA,IAAI,EAAC,UAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAC,eAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,EAII,oBAAC,QAAD;AACI,IAAA,MAAM,MADV;AAEI,IAAA,OAAO,MAFX;AAGI,qBAAc,MAHlB;AAII,qBAAc,eAJlB;AAKI,kBAAW,gBALf;AAMI,IAAA,OAAO,EAAEW,mBANb;AAOI,IAAA,IAAI,EAAC,UAPT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASI,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAC,gBAAtB;AAAuC,IAAA,SAAS,EAAEpC,KAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATJ,CAJJ,EAeI,oBAAC,QAAD;AAAU,IAAA,MAAM,MAAhB;AAAiB,IAAA,OAAO,MAAxB;AAAyB,IAAA,QAAQ,MAAjC;AAAkC,IAAA,IAAI,EAAC,UAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAC,+BAAtB;AAAsD,IAAA,SAAS,EAAC,QAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAfJ,EAkBI,oBAAC,qBAAD;AACI,IAAA,OAAO,EAAE;AACL+B,MAAAA,KAAK,EAAEG,OAAO,CAACH;AADV,KADb;AAII,IAAA,EAAE,EAAC,eAJP;AAKI,IAAA,WAAW,MALf;AAMI,IAAA,IAAI,EAAE9B,IANV;AAOI,IAAA,OAAO,EAAEoC,WAPb;AAQI,IAAA,KAAK,EAAErC,KARX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlBJ,CADJ,CADJ;AAiCH,CAlDD;;AAmDA,eAAeiC,oBAAf","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\n\r\nconst options = [\r\n    'English',\r\n    'Russian',\r\n    'Ukraine',\r\n    'Poland',\r\n    'Germany',\r\n];\r\n\r\nfunction ConfirmationDialogRaw(props) {\r\n    const { onClose, value: valueProp, open, ...other } = props;\r\n    const [value, setValue] = React.useState(valueProp);\r\n    const radioGroupRef = React.useRef(null);\r\n\r\n    React.useEffect(() => {\r\n        if (!open) {\r\n            setValue(valueProp);\r\n        }\r\n    }, [valueProp, open]);\r\n\r\n    const handleEntering = () => {\r\n        if (radioGroupRef.current != null) {\r\n            radioGroupRef.current.focus();\r\n        }\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        onClose();\r\n    };\r\n\r\n    const handleOk = () => {\r\n        onClose(value);\r\n    };\r\n\r\n    const handleChange = event => {\r\n        setValue(event.target.value);\r\n    };\r\n\r\n    return (\r\n        <Dialog\r\n            disableBackdropClick\r\n            disableEscapeKeyDown\r\n            maxWidth=\"xs\"\r\n            onEntering={handleEntering}\r\n            aria-labelledby=\"confirmation-dialog-title\"\r\n            open={open}\r\n            {...other}\r\n        >\r\n            <DialogTitle id=\"confirmation-dialog-title\">Select Language</DialogTitle>\r\n            <DialogContent dividers>\r\n                <RadioGroup\r\n                    ref={radioGroupRef}\r\n                    aria-label=\"ringtone\"\r\n                    name=\"ringtone\"\r\n                    value={value}\r\n                    onChange={handleChange}\r\n                >\r\n                    {options.map(option => (\r\n                        <FormControlLabel value={option} key={option} control={<Radio />} label={option} />\r\n                    ))}\r\n                </RadioGroup>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button autoFocus onClick={handleCancel} color=\"primary\">\r\n                    Cancel\r\n                </Button>\r\n                <Button onClick={handleOk} color=\"primary\">\r\n                    Ok\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\nConfirmationDialogRaw.propTypes = {\r\n    onClose: PropTypes.func.isRequired,\r\n    open: PropTypes.bool.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        width: '100%',\r\n        maxWidth: 360,\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n    paper: {\r\n        width: '80%',\r\n        maxHeight: 435,\r\n    },\r\n}));\r\n\r\nconst SelectLanguageWindow = () => {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(false);\r\n    const [value, setValue] = React.useState('Dione');\r\n\r\n    const handleClickListItem = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = newValue => {\r\n        setOpen(false);\r\n\r\n        if (newValue) {\r\n            setValue(newValue);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <List component=\"div\" role=\"list\">\r\n                <ListItem button divider disabled role=\"listitem\">\r\n                    <ListItemText primary=\"Interruptions\" />\r\n                </ListItem>\r\n                <ListItem\r\n                    button\r\n                    divider\r\n                    aria-haspopup=\"true\"\r\n                    aria-controls=\"ringtone-menu\"\r\n                    aria-label=\"phone ringtone\"\r\n                    onClick={handleClickListItem}\r\n                    role=\"listitem\"\r\n                >\r\n                    <ListItemText primary=\"Phone ringtone\" secondary={value} />\r\n                </ListItem>\r\n                <ListItem button divider disabled role=\"listitem\">\r\n                    <ListItemText primary=\"Default notification ringtone\" secondary=\"Tethys\" />\r\n                </ListItem>\r\n                <ConfirmationDialogRaw\r\n                    classes={{\r\n                        paper: classes.paper,\r\n                    }}\r\n                    id=\"ringtone-menu\"\r\n                    keepMounted\r\n                    open={open}\r\n                    onClose={handleClose}\r\n                    value={value}\r\n                />\r\n            </List>\r\n        </div>\r\n    );\r\n}\r\nexport default SelectLanguageWindow"]},"metadata":{},"sourceType":"module"}