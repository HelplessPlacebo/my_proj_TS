{"ast":null,"code":"var _jsxFileName = \"H:\\\\js_projects\\\\1\\\\my-app\\\\src\\\\components\\\\Dialogs\\\\Dialogs.jsx\";\nimport React from 'react';\nimport d from './Dialogs.module.css';\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport Message from \"./Message/Message\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { required, MaxLengthCreator } from \"../utils/validators\";\nimport { TextArea } from \"../assetss/common/ValidatorsComponents/ElementsValidators\";\nimport { SetNewMessages } from \"../../data/DIalogsReduser\";\nconst maxValue300 = MaxLengthCreator(300);\n\nconst DialogsForm = props => {\n  let dialogsElement = props.MessagesData.users.map(d => React.createElement(DialogItem, {\n    key: d.id,\n    name: d.name,\n    id: d.id,\n    avatars: props.MessagesData.avatars,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }));\n  let messagesElements = props.MessagesData.messages.map(m => React.createElement(Message, {\n    key: m.id,\n    message: m.message,\n    id: m.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }));\n  return React.createElement(\"form\", {\n    onSubmit: props.handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: d.dialogs,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: d.dialogsItems,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, dialogsElement), React.createElement(\"div\", {\n    className: d.messages,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, messagesElements, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(Field, {\n    name: \"MessageTextArea\",\n    component: TextArea,\n    placeholder: \"Enter your message here\",\n    validate: [required, maxValue300],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: d.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \" send message \"))))));\n};\n\nconst ReduxDialogsForm = reduxForm({\n  form: 'dialogs'\n})(DialogsForm);\n\nconst Dialogs = props => {\n  let SendMessage = data => {\n    props.SetNewMessages(data.MessageTextArea);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: d.header,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"My messages\"), props.AllDialogs.length ? props.AllDialogs : \"now is empty dialogs\", props.MessagesData.DialogsMessages.length ? props.MessagesData.DialogsMessages.length : \"you have not messages\", React.createElement(ReduxDialogsForm, Object.assign({\n    onSubmit: SendMessage\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  })));\n};\n\nexport default Dialogs;","map":{"version":3,"sources":["H:\\js_projects\\1\\my-app\\src\\components\\Dialogs\\Dialogs.jsx"],"names":["React","d","DialogItem","Message","Field","reduxForm","required","MaxLengthCreator","TextArea","SetNewMessages","maxValue300","DialogsForm","props","dialogsElement","MessagesData","users","map","id","name","avatars","messagesElements","messages","m","message","handleSubmit","dialogs","dialogsItems","button","ReduxDialogsForm","form","Dialogs","SendMessage","data","MessageTextArea","header","AllDialogs","length","DialogsMessages"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport d from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {required,MaxLengthCreator} from \"../utils/validators\"\r\nimport {TextArea} from \"../assetss/common/ValidatorsComponents/ElementsValidators\"\r\nimport {SetNewMessages} from \"../../data/DIalogsReduser\";\r\n\r\n\r\nconst  maxValue300 = MaxLengthCreator(300)\r\n\r\nconst DialogsForm = (props) =>{\r\n\r\n    let dialogsElement = props.MessagesData.users.map(d => <DialogItem key={d.id} name={d.name} id={d.id} avatars={props.MessagesData.avatars}/>);\r\n    let messagesElements = props.MessagesData.messages.map(m => < Message key={m.id} message={m.message} id={m.id}/>);\r\n\r\n    return(\r\n\r\n        <form onSubmit={props.handleSubmit}>\r\n        <div className={d.dialogs}>\r\n            <div className={d.dialogsItems}>\r\n                {dialogsElement}\r\n            </div>\r\n            <div className={d.messages}>\r\n\r\n                {messagesElements}\r\n\r\n                <div>\r\n                    <div>\r\n                      <Field  name={\"MessageTextArea\"}\r\n                              component={TextArea}\r\n                              placeholder={\"Enter your message here\"}\r\n                              validate={[required,maxValue300]}/>\r\n                    </div>\r\n                    <div>\r\n                        <button className={d.button}> send message </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst ReduxDialogsForm = reduxForm({form: 'dialogs'})(DialogsForm)\r\n\r\n\r\nconst Dialogs = (props) => {\r\n    let SendMessage = (data)=>{\r\n        props.SetNewMessages(data.MessageTextArea)\r\n    }\r\n\r\n    return (<div>\r\n            <h1 className={d.header}>My messages</h1>\r\n            {props.AllDialogs.length  ? props.AllDialogs : \"now is empty dialogs\"}\r\n\r\n            {\r\n                props.MessagesData.DialogsMessages.length  ?\r\n                props.MessagesData.DialogsMessages.length\r\n                : \"you have not messages\"\r\n            }\r\n       <ReduxDialogsForm onSubmit={SendMessage} {...props} />\r\n        </div>\r\n    )\r\n}\r\nexport default Dialogs;"]},"metadata":{},"sourceType":"module"}