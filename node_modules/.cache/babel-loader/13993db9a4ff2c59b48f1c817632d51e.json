{"ast":null,"code":"import _slicedToArray from \"H:\\\\js_projects\\\\1\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"H:\\\\js_projects\\\\1\\\\my-app\\\\src\\\\components\\\\Profile\\\\UserInfo\\\\ProfileStatusF.jsx\";\nimport React, { useState } from \"react\";\n\nconst ProfileStatusF = props => {\n  let _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      StatusChanging = _useState2[0],\n      SetStatusChanging = _useState2[1];\n\n  let _useState3 = useState(props.status),\n      _useState4 = _slicedToArray(_useState3, 2),\n      Status = _useState4[0],\n      SetStatus = _useState4[1];\n\n  debugger;\n\n  const StatusChangingON = () => {\n    SetStatusChanging(true);\n  };\n\n  const StatusChangingOFF = () => {\n    SetStatusChanging(false);\n    props.SetProfileStatus(Status);\n  };\n\n  const OnStatusChange = e => {\n    SetStatus(Status = e.currentTarget.value);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, !StatusChanging ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    onDoubleClick: StatusChangingON,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, Status || \"the status is empty\" //проверка на наличие статуса, если его нет - показать  статус ис эмпти\n  )) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    onChange: OnStatusChange,\n    onBlur: StatusChangingOFF,\n    autoFocus: true,\n    value: Status,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  })));\n};\n\nexport default ProfileStatusF;","map":{"version":3,"sources":["H:\\js_projects\\1\\my-app\\src\\components\\Profile\\UserInfo\\ProfileStatusF.jsx"],"names":["React","useState","ProfileStatusF","props","StatusChanging","SetStatusChanging","status","Status","SetStatus","StatusChangingON","StatusChangingOFF","SetProfileStatus","OnStatusChange","e","currentTarget","value"],"mappings":";;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;;AAEA,MAAOC,cAAc,GAAIC,KAAD,IAAW;AAAA,kBAGWF,QAAQ,CAAC,KAAD,CAHnB;AAAA;AAAA,MAG3BG,cAH2B;AAAA,MAGXC,iBAHW;;AAAA,mBAILJ,QAAQ,CAACE,KAAK,CAACG,MAAP,CAJH;AAAA;AAAA,MAI3BC,MAJ2B;AAAA,MAInBC,SAJmB;;AAKnC;;AAGI,QAAMC,gBAAgB,GAAG,MAAM;AAC3BJ,IAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACH,GAFD;;AAGD,QAAMK,iBAAiB,GAAG,MAAM;AAC5BL,IAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACCF,IAAAA,KAAK,CAACQ,gBAAN,CAAuBJ,MAAvB;AAEH,GAJF;;AAKC,QAAMK,cAAc,GAAIC,CAAD,IAAO;AAC1BL,IAAAA,SAAS,CAACD,MAAM,GAAGM,CAAC,CAACC,aAAF,CAAgBC,KAA1B,CAAT;AACH,GAFD;;AAMI,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK,CAACX,cAAD,GACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK;AAAM,IAAA,aAAa,EAAEK,gBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACDF,MAAM,IAAI,qBADT,CAEE;AAFF,GADL,CADH,GASG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,QAAQ,EAAEK,cAAjB;AAAiC,IAAA,MAAM,EAAEF,iBAAzC;AAA4D,IAAA,SAAS,EAAE,IAAvE;AACO,IAAA,KAAK,EAAEH,MADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAVR,CADJ;AAkBH,CAxCL;;AA2CA,eAAeL,cAAf","sourcesContent":["import React,{useState} from \"react\"\r\n\r\nconst  ProfileStatusF = (props) => {\r\n\r\n\r\n   let [StatusChanging, SetStatusChanging ] = useState(false)\r\n   let [Status, SetStatus ] = useState(props.status)\r\ndebugger\r\n\r\n\r\n    const StatusChangingON = () => {\r\n        SetStatusChanging(true)\r\n    }\r\n   const StatusChangingOFF = () => {\r\n       SetStatusChanging(false)\r\n        props.SetProfileStatus(Status)\r\n\r\n    }\r\n    const OnStatusChange = (e) => {\r\n        SetStatus(Status = e.currentTarget.value)\r\n    }\r\n\r\n\r\n\r\n        return (\r\n            <div>\r\n                {!StatusChanging ?\r\n                    <div>\r\n                         <span onDoubleClick={StatusChangingON}>\r\n                       {Status || \"the status is empty\"\r\n                           //проверка на наличие статуса, если его нет - показать  статус ис эмпти\r\n                       }\r\n                        </span>\r\n                    </div>\r\n                    :\r\n                    <div>\r\n                        <input onChange={OnStatusChange} onBlur={StatusChangingOFF} autoFocus={true}\r\n                               value={Status}/>\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\nexport default ProfileStatusF"]},"metadata":{},"sourceType":"module"}