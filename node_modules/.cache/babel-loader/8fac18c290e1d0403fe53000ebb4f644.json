{"ast":null,"code":"import _objectSpread from \"H:\\\\js_projects\\\\1\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { API } from \"../API/requests\";\nconst send_message = 'Dialogs/SEND-MESSAGE';\nconst Set_All_Dialogs = 'Dialogs/Set_All_Dialogs';\nlet DefaultState = {\n  users: [],\n  messages: [],\n  avatars: [{}],\n  NewMessageText: '',\n  AllDialogs: \"Now The you're dialogs is empty\"\n};\n\nconst DialogsReducer = (state = DefaultState, action) => {\n  switch (action.type) {\n    case send_message:\n      {\n        return _objectSpread({}, state, {\n          NewMessageText: action.NewMessageText,\n          messages: [...state.messages, {\n            id: 6,\n            message: action.NewMessageText\n          }]\n        });\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const sendmessage = text => {\n  return {\n    type: send_message,\n    NewMessageText: text\n  };\n};\nexport const SetAllDialogs = () => {\n  return {\n    type: Set_All_Dialogs\n  };\n};\nexport const SetProfilePhotoThunk = () => async dispatch => {\n  const data = await API.GetAllDialogs();\n  dispatch(SetAllDialogs(data));\n};\nexport default DialogsReducer;","map":{"version":3,"sources":["H:\\js_projects\\1\\my-app\\src\\data\\DIalogsReduser.js"],"names":["API","send_message","Set_All_Dialogs","DefaultState","users","messages","avatars","NewMessageText","AllDialogs","DialogsReducer","state","action","type","id","message","sendmessage","text","SetAllDialogs","SetProfilePhotoThunk","dispatch","data","GetAllDialogs"],"mappings":";AAAA,SAAQA,GAAR,QAAkB,iBAAlB;AAEA,MAAMC,YAAY,GAAG,sBAArB;AACA,MAAMC,eAAe,GAAG,yBAAxB;AAEA,IAAIC,YAAY,GAAG;AACfC,EAAAA,KAAK,EAAE,EADQ;AAIfC,EAAAA,QAAQ,EAAE,EAJK;AAOfC,EAAAA,OAAO,EAAE,CACL,EADK,CAPM;AAYfC,EAAAA,cAAc,EAAE,EAZD;AAafC,EAAAA,UAAU,EAAG;AAbE,CAAnB;;AAgBA,MAAMC,cAAc,GAAG,CAACC,KAAK,GAAGP,YAAT,EAAuBQ,MAAvB,KAAkC;AACrD,UAAQA,MAAM,CAACC,IAAf;AAGI,SAAMX,YAAN;AAAqB;AACjB,iCAAUS,KAAV;AACIH,UAAAA,cAAc,EAAEI,MAAM,CAACJ,cAD3B;AAEIF,UAAAA,QAAQ,EAAC,CAAC,GAAGK,KAAK,CAACL,QAAV,EAAmB;AAACQ,YAAAA,EAAE,EAAE,CAAL;AAAQC,YAAAA,OAAO,EAAEH,MAAM,CAACJ;AAAxB,WAAnB;AAFb;AAIH;;AACD;AACI,aAAOG,KAAP;AAVR;AAaH,CAdD;;AAgBA,OAAO,MAAMK,WAAW,GAAIC,IAAD,IAAU;AACjC,SAAO;AAACJ,IAAAA,IAAI,EAAEX,YAAP;AAAqBM,IAAAA,cAAc,EAACS;AAApC,GAAP;AACH,CAFM;AAGP,OAAO,MAAMC,aAAa,GAAG,MAAM;AAC/B,SAAO;AAACL,IAAAA,IAAI,EAAEV;AAAP,GAAP;AACH,CAFM;AAIP,OAAO,MAAMgB,oBAAoB,GAAG,MAAM,MAAOC,QAAP,IAAoB;AAC1D,QAAMC,IAAI,GAAG,MAAMpB,GAAG,CAACqB,aAAJ,EAAnB;AACIF,EAAAA,QAAQ,CAACF,aAAa,CAACG,IAAD,CAAd,CAAR;AACP,CAHM;AAKP,eAAeX,cAAf","sourcesContent":["import {API} from \"../API/requests\";\r\n\r\nconst send_message = 'Dialogs/SEND-MESSAGE'\r\nconst Set_All_Dialogs = 'Dialogs/Set_All_Dialogs'\r\n\r\nlet DefaultState = {\r\n    users: [\r\n\r\n    ],\r\n    messages: [\r\n\r\n    ],\r\n    avatars: [\r\n        {\r\n\r\n        }\r\n    ],\r\n    NewMessageText: '',\r\n    AllDialogs : \"Now The you're dialogs is empty\"\r\n}\r\n\r\nconst DialogsReducer = (state = DefaultState, action) => {\r\n    switch (action.type) {\r\n\r\n\r\n        case  send_message : {\r\n            return{...state,\r\n                NewMessageText: action.NewMessageText,\r\n                messages:[...state.messages,{id: 6, message: action.NewMessageText}]\r\n            }\r\n        }\r\n        default :\r\n            return state\r\n\r\n    }\r\n}\r\n\r\nexport const sendmessage = (text) => {\r\n    return {type: send_message, NewMessageText:text}\r\n}\r\nexport const SetAllDialogs = () => {\r\n    return {type: Set_All_Dialogs,}\r\n}\r\n\r\nexport const SetProfilePhotoThunk = () => async (dispatch) => {\r\n    const data = await API.GetAllDialogs()\r\n        dispatch(SetAllDialogs(data))\r\n}\r\n\r\nexport default DialogsReducer"]},"metadata":{},"sourceType":"module"}