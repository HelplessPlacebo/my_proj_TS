{"ast":null,"code":"import _objectSpread from \"H:\\\\js_projects\\\\1\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { API } from \"../API/requests\";\nimport { stopSubmit } from \"redux-form\";\nconst add_post = 'Profile/ADD_POST';\nconst Set_Profile_Of_User = 'Profile/Set_Profile_Of_User';\nconst Set_Status_Of_User = '/Profile/Set_Status_Of_User';\nconst Set_Photo_Of_User = '/Profile/Set_Photo_Of_User';\nconst Set_Is_My_Page = '/Profile/Set_Is_My_Page';\nconst Set_Own_Name = '/Profile/Set_Own_Name';\nlet DefaultState = {\n  Posts: [],\n  TextNewPost: '',\n  profile: null,\n  status: \"\",\n  email: \"\",\n  password: \"\",\n  rememberMe: false,\n  IsMyPage: false,\n  OwnName: \"\"\n};\n\nconst ProfileReducer = (state = DefaultState, action) => {\n  switch (action.type) {\n    case add_post:\n      {\n        let NewPost = {\n          id: 6,\n          Post: action.newtext,\n          likesCount: 0\n        };\n        return _objectSpread({}, state, {\n          Posts: [...state.Posts, NewPost]\n        });\n      }\n\n    case Set_Profile_Of_User:\n      {\n        return _objectSpread({}, state, {\n          profile: action.profile\n        });\n      }\n\n    case Set_Status_Of_User:\n      {\n        return _objectSpread({}, state, {\n          status: action.status\n        });\n      }\n\n    case Set_Photo_Of_User:\n      {\n        return _objectSpread({}, state, {\n          profile: _objectSpread({}, state.profile, {\n            photos: action.photo\n          })\n        });\n      }\n\n    case Set_Is_My_Page:\n      {\n        return _objectSpread({}, state, {\n          IsMyPage: action.bool\n        });\n      }\n\n    case Set_Own_Name:\n      {\n        return _objectSpread({}, state, {\n          OwnName: action.MyOwnName\n        });\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const addpost = text => {\n  return {\n    type: add_post,\n    newtext: text\n  };\n};\nexport const setProfileOfUser = profile => {\n  return {\n    type: Set_Profile_Of_User,\n    profile\n  };\n};\nexport const SetStatusOfUser = status => {\n  return {\n    type: Set_Status_Of_User,\n    status\n  };\n};\nexport const SetPhotoOfUser = photo => {\n  return {\n    type: Set_Photo_Of_User,\n    photo\n  };\n};\nexport const SetIsMyPage = bool => {\n  return {\n    type: Set_Is_My_Page,\n    bool\n  };\n};\nexport const SetOwnName = MyOwnName => {\n  return {\n    type: Set_Own_Name,\n    MyOwnName\n  };\n};\nexport const GetProfileThunk = ProfileID => async (dispatch, getState) => {\n  const MyID = getState().Auth.userId;\n  const data = await API.getProfile(ProfileID);\n  dispatch(setProfileOfUser(data));\n\n  if (data.userId === MyID) {\n    dispatch(SetOwnName(data.fullName));\n  }\n};\nexport const GetProfileStatusThunk = userID => async dispatch => {\n  const data = await API.getProfileStatus(userID);\n  dispatch(SetStatusOfUser(data));\n};\nexport const SetProfileStatusThunk = status => async dispatch => {\n  const data = await API.setProfileStatus(status);\n\n  if (data.resultCode === 0) {\n    dispatch(SetStatusOfUser(status));\n  }\n};\nexport const SetProfilePhotoThunk = photo => async dispatch => {\n  const data = await API.LoadPhotoOnServer(photo);\n\n  if (data.resultCode === 0) {\n    dispatch(SetPhotoOfUser(data.data.photos));\n  }\n};\nexport const UpdateProfileInfoThunk = profile => async (dispatch, getState) => {\n  const profileID = getState().Auth.userId;\n  const data = await API.PutProfileDataOnServer(profile);\n\n  if (data.resultCode === 0) {\n    dispatch(GetProfileThunk(profileID));\n  } else {\n    dispatch(stopSubmit(\"ProfileDataEditorForm\", {\n      _error: data.messages[0]\n    }));\n    return Promise.reject(data.messages[0]);\n  }\n};\nexport default ProfileReducer;","map":{"version":3,"sources":["H:\\js_projects\\1\\my-app\\src\\data\\ProfileReduser.js"],"names":["API","stopSubmit","add_post","Set_Profile_Of_User","Set_Status_Of_User","Set_Photo_Of_User","Set_Is_My_Page","Set_Own_Name","DefaultState","Posts","TextNewPost","profile","status","email","password","rememberMe","IsMyPage","OwnName","ProfileReducer","state","action","type","NewPost","id","Post","newtext","likesCount","photos","photo","bool","MyOwnName","addpost","text","setProfileOfUser","SetStatusOfUser","SetPhotoOfUser","SetIsMyPage","SetOwnName","GetProfileThunk","ProfileID","dispatch","getState","MyID","Auth","userId","data","getProfile","fullName","GetProfileStatusThunk","userID","getProfileStatus","SetProfileStatusThunk","setProfileStatus","resultCode","SetProfilePhotoThunk","LoadPhotoOnServer","UpdateProfileInfoThunk","profileID","PutProfileDataOnServer","_error","messages","Promise","reject"],"mappings":"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","sourcesContent":["import {API} from \"../API/requests\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst add_post = 'Profile/ADD_POST'\r\nconst Set_Profile_Of_User = 'Profile/Set_Profile_Of_User'\r\nconst Set_Status_Of_User = '/Profile/Set_Status_Of_User'\r\nconst Set_Photo_Of_User = '/Profile/Set_Photo_Of_User'\r\nconst Set_Is_My_Page = '/Profile/Set_Is_My_Page'\r\nconst Set_Own_Name= '/Profile/Set_Own_Name'\r\n\r\n\r\nlet DefaultState = {\r\n    Posts: [],\r\n    TextNewPost: '',\r\n    profile: null,\r\n    status: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    rememberMe: false,\r\n    IsMyPage: false,\r\n    OwnName : \"\"\r\n}\r\n\r\nconst ProfileReducer = (state = DefaultState, action) => {\r\n    switch (action.type) {\r\n        case add_post: {\r\n            let NewPost = {\r\n                id: 6,\r\n                Post: action.newtext,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                Posts: [...state.Posts, NewPost],\r\n            }\r\n        }\r\n        case Set_Profile_Of_User: {\r\n            return {...state, profile: action.profile}\r\n        }\r\n\r\n        case Set_Status_Of_User: {\r\n            return {...state, status: action.status}\r\n        }\r\n        case Set_Photo_Of_User: {\r\n            return {\r\n                ...state,\r\n                profile: {...state.profile, photos: action.photo}\r\n            }\r\n        }\r\n        case Set_Is_My_Page: {\r\n            return {...state, IsMyPage: action.bool}\r\n        }\r\n        case Set_Own_Name: {\r\n            return {...state, OwnName: action.MyOwnName}\r\n        }\r\n\r\n        default :\r\n            return state\r\n    }\r\n}\r\n\r\nexport const addpost = (text) => {\r\n    return {type: add_post, newtext: text}\r\n}\r\n\r\nexport const setProfileOfUser = (profile) => {\r\n    return {type: Set_Profile_Of_User, profile}\r\n}\r\n\r\nexport const SetStatusOfUser = (status) => {\r\n    return {type: Set_Status_Of_User, status}\r\n}\r\n\r\nexport const SetPhotoOfUser = (photo) => {\r\n    return {type: Set_Photo_Of_User, photo}\r\n}\r\n\r\nexport const SetIsMyPage = (bool) => {\r\n    return {type: Set_Is_My_Page, bool}\r\n}\r\nexport const SetOwnName = (MyOwnName) => {\r\n    return {type: Set_Own_Name, MyOwnName}\r\n}\r\n\r\n\r\n\r\n\r\nexport const GetProfileThunk = (ProfileID) => async (dispatch,getState) => {\r\n    const MyID = getState().Auth.userId\r\n    const data = await API.getProfile(ProfileID)\r\n    dispatch(setProfileOfUser(data))\r\n    if (data.userId === MyID) {\r\n        dispatch(SetOwnName(data.fullName))\r\n    }\r\n}\r\n\r\n\r\nexport const GetProfileStatusThunk = (userID) => async (dispatch) => {\r\n    const data = await API.getProfileStatus(userID)\r\n    dispatch(SetStatusOfUser(data))\r\n}\r\n\r\nexport const SetProfileStatusThunk = (status) => async (dispatch) => {\r\n    const data = await API.setProfileStatus(status)\r\n    if (data.resultCode === 0) {\r\n        dispatch(SetStatusOfUser(status))\r\n    }\r\n}\r\n\r\nexport const SetProfilePhotoThunk = (photo) => async (dispatch) => {\r\n    const data = await API.LoadPhotoOnServer(photo)\r\n    if (data.resultCode === 0) {\r\n        dispatch(SetPhotoOfUser(data.data.photos))\r\n    }\r\n}\r\n\r\nexport const UpdateProfileInfoThunk = (profile) => async (dispatch, getState) => {\r\n    const profileID = getState().Auth.userId\r\n    const data = await API.PutProfileDataOnServer(profile)\r\n    if (data.resultCode === 0) {\r\n        dispatch(GetProfileThunk(profileID))\r\n    } else {\r\n        dispatch(stopSubmit(\"ProfileDataEditorForm\",{_error : data.messages[0]}))\r\n        return Promise.reject(data.messages[0])\r\n    }\r\n}\r\n\r\n\r\nexport default ProfileReducer"]},"metadata":{},"sourceType":"module"}