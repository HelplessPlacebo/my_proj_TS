{"ast":null,"code":"import _slicedToArray from \"H:\\\\js_projects\\\\1\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"H:\\\\js_projects\\\\1\\\\my-app\\\\src\\\\components\\\\assetss\\\\common\\\\Paginator\\\\Paginator.js\";\nimport PS from \"./Paginator.module.css\";\nimport React from \"react\";\n\nconst Paginator = props => {\n  let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize); // расчет кол-ва страниц\n\n  let pages = [];\n\n  for (let i = 1; i <= pagesCount; i++) {\n    pages.push(i);\n  }\n\n  var _useState = useState(1);\n\n  var _useState2 = _slicedToArray(_useState, 2);\n\n  PortionNumber = _useState2[0];\n  SetPortionNumber = _useState2[1];\n  let LeftBorderOfPorsion = portionNumber - 1 * PortionSize + 1;\n  let RightBorderOfPortion = PortionNumber * PortionSize;\n  return React.createElement(\"div\", {\n    className: PS.setNumbers,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, pages.filter(p => p >= LeftBorderOfPorsion && p <= RightBorderOfPortion).map(p => {\n    // нумерация страниц\n    return React.createElement(\"span\", {\n      className: props.currentPage === p && PS.numbers,\n      onClick: ev => {\n        props.OnChangedPage(p);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, \"    \" + p);\n  }));\n};\n\nexport default Paginator;","map":{"version":3,"sources":["H:\\js_projects\\1\\my-app\\src\\components\\assetss\\common\\Paginator\\Paginator.js"],"names":["PS","React","Paginator","props","pagesCount","Math","ceil","totalUsersCount","pageSize","pages","i","push","useState","PortionNumber","SetPortionNumber","LeftBorderOfPorsion","portionNumber","PortionSize","RightBorderOfPortion","setNumbers","filter","p","map","currentPage","numbers","ev","OnChangedPage"],"mappings":";;AACA,OAAOA,EAAP,MAAe,wBAAf;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAEzB,MAAIC,UAAU,GAAGC,IAAI,CAACC,IAAL,CAAUH,KAAK,CAACI,eAAN,GAAwBJ,KAAK,CAACK,QAAxC,CAAjB,CAFyB,CAE0C;;AACnE,MAAIC,KAAK,GAAG,EAAZ;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIN,UAArB,EAAiCM,CAAC,EAAlC,EAAsC;AAClCD,IAAAA,KAAK,CAACE,IAAN,CAAWD,CAAX;AACH;;AANwB,kBAQME,QAAQ,CAAC,CAAD,CARd;;AAAA;;AAQ5BC,EAAAA,aAR4B;AAQdC,EAAAA,gBARc;AAS7B,MAAIC,mBAAmB,GAAGC,aAAa,GAAG,IAAIC,WAApB,GAAkC,CAA5D;AACA,MAAIC,oBAAoB,GAAGL,aAAa,GAAGI,WAA3C;AAGA,SAAO;AAAK,IAAA,SAAS,EAAEjB,EAAE,CAACmB,UAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEV,KAAK,CAACW,MAAN,CAAaC,CAAC,IAAGA,CAAC,IAAGN,mBAAJ,IAA2BM,CAAC,IAAIH,oBAAjD,EAAuEI,GAAvE,CAA2ED,CAAC,IAAI;AAC7E;AACA,WACI;AAAM,MAAA,SAAS,EAAElB,KAAK,CAACoB,WAAN,KAAsBF,CAAtB,IAA2BrB,EAAE,CAACwB,OAA/C;AACM,MAAA,OAAO,EAAGC,EAAD,IAAQ;AACbtB,QAAAA,KAAK,CAACuB,aAAN,CAAoBL,CAApB;AACH,OAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIa,SAASA,CAJtB,CADJ;AASH,GAXA,CADF,CAAP;AAcC,CA3BD;;AA6BA,eAAenB,SAAf","sourcesContent":["\r\nimport PS from \"./Paginator.module.css\";\r\nimport React from \"react\";\r\n\r\nconst Paginator = (props) => {\r\n\r\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize) // расчет кол-ва страниц\r\n    let pages = []\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n[PortionNumber,SetPortionNumber] = useState(1)\r\nlet LeftBorderOfPorsion = portionNumber - 1 * PortionSize + 1\r\nlet RightBorderOfPortion = PortionNumber * PortionSize\r\n\r\n\r\nreturn <div className={PS.setNumbers}>\r\n        {pages.filter(p=> p>= LeftBorderOfPorsion && p <= RightBorderOfPortion).map(p => {\r\n            // нумерация страниц\r\n            return (\r\n                <span className={props.currentPage === p && PS.numbers}\r\n                      onClick={(ev) => {\r\n                          props.OnChangedPage(p)\r\n                      }}>\r\n                            {\"    \" + p}\r\n                        </span>\r\n\r\n            )\r\n        })}\r\n    </div>\r\n}\r\n\r\nexport default Paginator"]},"metadata":{},"sourceType":"module"}