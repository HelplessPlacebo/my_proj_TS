{"ast":null,"code":"import _objectSpread from \"H:\\\\js_projects\\\\1\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { API } from \"../API/requests\";\nimport { stopSubmit } from \"redux-form\";\nconst SET_USER_DATA = 'Auth/SET_USER_DATA';\nconst IsFetching_Toggle = 'Auth/IsFetching_Toggle';\nconst Set_Captcha_Url = 'Auth/Set_Captcha_Url';\nlet DefaultState = {};\n\nconst ToDoListsReducer = (state = DefaultState, action) => {\n  switch (action.type) {\n    case SET_USER_DATA:\n      {\n        return _objectSpread({}, state, action.data);\n      }\n\n    case IsFetching_Toggle:\n      {\n        return _objectSpread({}, state, {\n          IsFetching: action.IsFetching\n        });\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const SetCaptchaUrl = CaptchaURLFromServer => {\n  return {\n    type: Set_Captcha_Url,\n    CaptchaURLFromServer\n  };\n};\nexport const LogOutThunk = () => async dispatch => {\n  const data = await API.LogOut();\n\n  if (data.resultCode === 0) {\n    dispatch(SetAuthUser(null, null, null, false));\n  }\n};\nexport default ToDoListsReducer;","map":{"version":3,"sources":["H:\\js_projects\\1\\my-app\\src\\data\\ToDoListsReducer.js"],"names":["API","stopSubmit","SET_USER_DATA","IsFetching_Toggle","Set_Captcha_Url","DefaultState","ToDoListsReducer","state","action","type","data","IsFetching","SetCaptchaUrl","CaptchaURLFromServer","LogOutThunk","dispatch","LogOut","resultCode","SetAuthUser"],"mappings":";AAAA,SAAQA,GAAR,QAAkB,iBAAlB;AACA,SAAQC,UAAR,QAAyB,YAAzB;AAGA,MAAMC,aAAa,GAAG,oBAAtB;AACA,MAAMC,iBAAiB,GAAG,wBAA1B;AACA,MAAMC,eAAe,GAAG,sBAAxB;AAEA,IAAIC,YAAY,GAAG,EAAnB;;AAIA,MAAMC,gBAAgB,GAAG,CAACC,KAAK,GAAGF,YAAT,EAAuBG,MAAvB,KAAkC;AACvD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKP,aAAL;AAAqB;AACjB,iCACOK,KADP,EAEOC,MAAM,CAACE,IAFd;AAIH;;AACD,SAAKP,iBAAL;AAAwB;AACpB,iCAAWI,KAAX;AAAkBI,UAAAA,UAAU,EAAEH,MAAM,CAACG;AAArC;AACH;;AACD;AACI,aAAOJ,KAAP;AAXR;AAaH,CAdD;;AAiBA,OAAO,MAAMK,aAAa,GAAIC,oBAAD,IAA0B;AACnD,SAAO;AAACJ,IAAAA,IAAI,EAAEL,eAAP;AAAwBS,IAAAA;AAAxB,GAAP;AACH,CAFM;AAKP,OAAO,MAAMC,WAAW,GAAG,MAAM,MAAOC,QAAP,IAAoB;AACjD,QAAML,IAAI,GAAG,MAAMV,GAAG,CAACgB,MAAJ,EAAnB;;AACA,MAAIN,IAAI,CAACO,UAAL,KAAoB,CAAxB,EAA2B;AACvBF,IAAAA,QAAQ,CAACG,WAAW,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,KAAnB,CAAZ,CAAR;AACH;AACJ,CALM;AASP,eAAeZ,gBAAf","sourcesContent":["import {API} from \"../API/requests\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\n\r\nconst SET_USER_DATA = 'Auth/SET_USER_DATA'\r\nconst IsFetching_Toggle = 'Auth/IsFetching_Toggle'\r\nconst Set_Captcha_Url = 'Auth/Set_Captcha_Url'\r\n\r\nlet DefaultState = {\r\n\r\n}\r\n\r\nconst ToDoListsReducer = (state = DefaultState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA : {\r\n            return {\r\n                ...state,\r\n                ...action.data\r\n            }\r\n        }\r\n        case IsFetching_Toggle: {\r\n            return {...state, IsFetching: action.IsFetching}\r\n        }\r\n        default :\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const SetCaptchaUrl = (CaptchaURLFromServer) => {\r\n    return {type: Set_Captcha_Url, CaptchaURLFromServer}\r\n}\r\n\r\n\r\nexport const LogOutThunk = () => async (dispatch) => {\r\n    const data = await API.LogOut()\r\n    if (data.resultCode === 0) {\r\n        dispatch(SetAuthUser(null, null, null, false))\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default ToDoListsReducer"]},"metadata":{},"sourceType":"module"}