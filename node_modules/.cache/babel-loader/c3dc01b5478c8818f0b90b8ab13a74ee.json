{"ast":null,"code":"var _jsxFileName = \"H:\\\\js_projects\\\\1\\\\my-app\\\\src\\\\components\\\\Users\\\\UsersContainer.jsx\";\nimport React from 'react';\nimport { connect } from \"react-redux\";\nimport { followThunk, unfollowThunk, SetCurrentPage, getUsersThunk, ToggleInProcess, ChangePortionSize, FindUserThunk } from \"../../data/UsersReduser\";\nimport PurifyUsers from \"./Users\";\nimport Preloader from \"../assetss/common/Loader/Loader\";\nimport { compose } from \"redux\";\nimport { GetCurrentPage, GetInProgress, GetIsFeching, GetPageSize, GetTotalUsersCount, GetUsers, GetPortionSize, GetFoundedUserSelector } from \"../../data/Users-Selectors\";\nimport { GetIsLogined } from \"../../data/AuthSelectors\";\n\nclass UsersContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.OnChangedPage = pageNumber => {\n      this.props.SetCurrentPage(pageNumber);\n      this.props.getUsersThunk(pageNumber, this.props.pageSize);\n    };\n  }\n\n  /* this component using for make requests on server for a new users and drawing\r\n  Ui component (Users)*/\n  componentDidMount() {\n    this.props.getUsersThunk(this.props.currentPage, this.props.pageSize);\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, this.props.IsFetching ? React.createElement(Preloader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }) : null, React.createElement(PurifyUsers, {\n      Users: this.props.Users,\n      totalUsersCount: this.props.totalUsersCount,\n      pageSize: this.props.pageSize,\n      OnChangedPage: this.OnChangedPage,\n      OnFollow: this.props.followThunk,\n      OnUnFollow: this.props.unfollowThunk,\n      currentPage: this.props.currentPage,\n      ToggleInProcess: this.props.ToggleInProcess,\n      InProcess: this.props.InProcess,\n      IsLogined: this.props.IsLogined,\n      ChangePortionSize: this.props.ChangePortionSize,\n      PortionSize: this.props.PortionSize,\n      FindUserThunk: this.props.FindUserThunk,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }));\n  }\n\n}\n\nlet StateToProps = state => {\n  return {\n    IsLogined: GetIsLogined(state),\n    Users: GetUsers(state),\n    pageSize: GetPageSize(state),\n    totalUsersCount: GetTotalUsersCount(state),\n    currentPage: GetCurrentPage(state),\n    IsFetching: GetIsFeching(state),\n    InProcess: GetInProgress(state),\n    PortionSize: GetPortionSize(state),\n    FoundedUser: GetFoundedUserSelector(state)\n  };\n};\n/*let DispatchToProps = (dispatch) => {\r\n    return {\r\n        onFollow: (userID) => {\r\n\r\n            dispatch(follow_AC(userID))\r\n        },\r\n        onUnFollow: (userID) => {\r\n\r\n            dispatch(unfollow_AC(userID))\r\n        },\r\n        setUsers: (Users) => {\r\n            dispatch(setUsers_AC(Users))\r\n        },\r\n        SetCurrentPage: (NumberOfPage) => {\r\n            dispatch(setCurrentPage_AC(NumberOfPage))\r\n        },\r\n        SetTotalCountOfUsers: (totalCount) => {\r\n            dispatch(SetTotalCountOfUsers_AC(totalCount))\r\n        },\r\n        ToggleIsFetching: (IsFetching) => {\r\n            dispatch(IsFetchingToggle_AC(IsFetching))\r\n        }\r\n    }\r\n}*/\n\n\nexport default compose(connect(StateToProps, {\n  followThunk,\n  unfollowThunk,\n  SetCurrentPage,\n  ToggleInProcess,\n  getUsersThunk,\n  ChangePortionSize,\n  FindUserThunk\n}))(UsersContainer);","map":{"version":3,"sources":["H:\\js_projects\\1\\my-app\\src\\components\\Users\\UsersContainer.jsx"],"names":["React","connect","followThunk","unfollowThunk","SetCurrentPage","getUsersThunk","ToggleInProcess","ChangePortionSize","FindUserThunk","PurifyUsers","Preloader","compose","GetCurrentPage","GetInProgress","GetIsFeching","GetPageSize","GetTotalUsersCount","GetUsers","GetPortionSize","GetFoundedUserSelector","GetIsLogined","UsersContainer","Component","OnChangedPage","pageNumber","props","pageSize","componentDidMount","currentPage","render","IsFetching","Users","totalUsersCount","InProcess","IsLogined","PortionSize","StateToProps","state","FoundedUser"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    followThunk,\r\n    unfollowThunk,\r\n    SetCurrentPage,\r\n    getUsersThunk,\r\n    ToggleInProcess,\r\n    ChangePortionSize,FindUserThunk\r\n} from \"../../data/UsersReduser\";\r\nimport PurifyUsers from \"./Users\";\r\nimport Preloader from \"../assetss/common/Loader/Loader\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    GetCurrentPage,\r\n    GetInProgress,\r\n    GetIsFeching,\r\n    GetPageSize,\r\n    GetTotalUsersCount,\r\n    GetUsers,\r\n    GetPortionSize, GetFoundedUserSelector\r\n} from \"../../data/Users-Selectors\";\r\nimport {GetIsLogined} from \"../../data/AuthSelectors\";\r\n\r\nclass UsersContainer extends React.Component {\r\n    /* this component using for make requests on server for a new users and drawing\r\nUi component (Users)*/\r\n\r\n    componentDidMount() {\r\n\r\n        this.props.getUsersThunk(this.props.currentPage, this.props.pageSize)\r\n    }\r\n\r\n    OnChangedPage = (pageNumber) => {\r\n        this.props.SetCurrentPage(pageNumber)\r\n        this.props.getUsersThunk(pageNumber, this.props.pageSize)\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        return <>\r\n            {this.props.IsFetching ? <Preloader/> : null}\r\n            <PurifyUsers Users={this.props.Users}\r\n                         totalUsersCount={this.props.totalUsersCount}\r\n                         pageSize={this.props.pageSize}\r\n                         OnChangedPage={this.OnChangedPage}\r\n                         OnFollow={this.props.followThunk}\r\n                         OnUnFollow={this.props.unfollowThunk}\r\n                         currentPage={this.props.currentPage}\r\n                         ToggleInProcess={this.props.ToggleInProcess}\r\n                         InProcess={this.props.InProcess}\r\n                         IsLogined={this.props.IsLogined}\r\n                         ChangePortionSize={this.props.ChangePortionSize}\r\n                         PortionSize={this.props.PortionSize}\r\n                         FindUserThunk={this.props.FindUserThunk}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\nlet StateToProps = (state) => {\r\n    return {\r\n        IsLogined : GetIsLogined(state),\r\n        Users: GetUsers(state),\r\n        pageSize: GetPageSize(state),\r\n        totalUsersCount: GetTotalUsersCount(state),\r\n        currentPage: GetCurrentPage(state),\r\n        IsFetching: GetIsFeching(state),\r\n        InProcess: GetInProgress(state),\r\n        PortionSize : GetPortionSize(state),\r\n        FoundedUser : GetFoundedUserSelector(state)\r\n    }\r\n}\r\n\r\n/*let DispatchToProps = (dispatch) => {\r\n    return {\r\n        onFollow: (userID) => {\r\n\r\n            dispatch(follow_AC(userID))\r\n        },\r\n        onUnFollow: (userID) => {\r\n\r\n            dispatch(unfollow_AC(userID))\r\n        },\r\n        setUsers: (Users) => {\r\n            dispatch(setUsers_AC(Users))\r\n        },\r\n        SetCurrentPage: (NumberOfPage) => {\r\n            dispatch(setCurrentPage_AC(NumberOfPage))\r\n        },\r\n        SetTotalCountOfUsers: (totalCount) => {\r\n            dispatch(SetTotalCountOfUsers_AC(totalCount))\r\n        },\r\n        ToggleIsFetching: (IsFetching) => {\r\n            dispatch(IsFetchingToggle_AC(IsFetching))\r\n        }\r\n    }\r\n}*/\r\n\r\n\r\nexport default compose(\r\n    connect(StateToProps,\r\n        {followThunk, unfollowThunk, SetCurrentPage,\r\n            ToggleInProcess, getUsersThunk,ChangePortionSize,FindUserThunk})\r\n)(UsersContainer)"]},"metadata":{},"sourceType":"module"}