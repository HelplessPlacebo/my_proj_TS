{"ast":null,"code":"import _objectSpread from \"H:\\\\js_projects\\\\1\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { API } from \"../API/requests\";\nconst follow = 'Users/FOLLOW';\nconst unfollow = 'Users/UNFOLLOW';\nconst setusers = 'Users/SET_USERS';\nconst Set_Current_Page = 'Users/SET_CURRENT_PAGE';\nconst Set_Total_Count_Of_Users = 'Users/Set_Total_Count_Of_Users';\nconst IsFetching_Toggle = 'Users/Toggle_is_fetching';\nconst IsInProcess_Togle = 'Users/IsInProcess_Togle';\nconst Portion_Size_Changer = 'Users/Portion_Size_Changer';\nlet DefaultState = {\n  Users: [],\n  pageSize: 9,\n  totalUsersCount: 0,\n  currentPage: 1,\n  IsFetching: false,\n  InProcess: [],\n  PortionSize: 1\n};\n\nconst UsersReducer = (state = DefaultState, action) => {\n  switch (action.type) {\n    case follow:\n      {\n        return _objectSpread({}, state, {\n          Users: state.Users.map(us => {\n            if (us.id === action.userID) {\n              return _objectSpread({}, us, {\n                followed: true\n              });\n            }\n\n            return us;\n          })\n        });\n      }\n\n    case unfollow:\n      {\n        return _objectSpread({}, state, {\n          Users: state.Users.map(us => {\n            if (us.id === action.userID) {\n              return _objectSpread({}, us, {\n                followed: false\n              });\n            }\n\n            return us;\n          })\n        });\n      }\n\n    case setusers:\n      {\n        return _objectSpread({}, state, {\n          Users: action.users\n        });\n      }\n\n    case Set_Current_Page:\n      {\n        return _objectSpread({}, state, {\n          currentPage: action.currentPage\n        });\n      }\n\n    case Set_Total_Count_Of_Users:\n      {\n        return _objectSpread({}, state, {\n          totalUsersCount: action.totalUsersCount\n        });\n      }\n\n    case IsFetching_Toggle:\n      {\n        return _objectSpread({}, state, {\n          IsFetching: action.IsFetching\n        });\n      }\n\n    case IsInProcess_Togle:\n      {\n        return _objectSpread({}, state, {\n          InProcess: action.IsFetching ? [...state.InProcess, action.UserID] : state.InProcess.filter(id => id != action.UserID)\n        });\n      }\n\n    case Portion_Size_Changer:\n      {\n        return _objectSpread({}, state, {\n          PortionSize: action.PortionSizeChangingValue\n        });\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const OnFollow = userID => {\n  return {\n    type: follow,\n    userID: userID\n  };\n};\nexport const onUnFollow = userID => {\n  return {\n    type: unfollow,\n    userID: userID\n  };\n};\nexport const setUsers = users => {\n  return {\n    type: setusers,\n    users: users\n  };\n};\nexport const SetCurrentPage = currentPage => {\n  return {\n    type: Set_Current_Page,\n    currentPage: currentPage\n  };\n};\nexport const SetTotalCountOfUsers = totalCount => {\n  return {\n    type: Set_Total_Count_Of_Users,\n    totalUsersCount: totalCount\n  };\n};\nexport const ToggleIsFetching = IsFetching => {\n  return {\n    type: IsFetching_Toggle,\n    IsFetching\n  };\n};\nexport const ToggleInProcess = (IsFetching, UserID) => {\n  return {\n    type: IsInProcess_Togle,\n    IsFetching,\n    UserID\n  };\n};\nexport const ChangePortionSize = value => {\n  return {\n    type: Portion_Size_Changer,\n    PortionSizeChangingValue: value\n  };\n};\nexport const getUsersThunk = (currentPage, pageSize) => async dispatch => {\n  dispatch(ToggleIsFetching(true));\n  const data = await API.getUsers(currentPage, pageSize);\n  dispatch(ToggleIsFetching(false));\n  dispatch(setUsers(data.items));\n  dispatch(SetTotalCountOfUsers(data.totalCount));\n};\nexport const unfollowThunk = userID => async dispatch => {\n  dispatch(ToggleInProcess(true, userID));\n  const data = await API.DelSub(userID);\n\n  if (data.resultCode == 0) {\n    dispatch(onUnFollow(userID));\n  }\n\n  dispatch(ToggleInProcess(false, userID));\n};\nexport const followThunk = userID => async dispatch => {\n  dispatch(ToggleInProcess(true, userID));\n  const data = await API.AddSub(userID);\n\n  if (data.resultCode == 0) {\n    dispatch(OnFollow(userID));\n  }\n\n  dispatch(ToggleInProcess(false, userID));\n};\nexport default UsersReducer;","map":{"version":3,"sources":["H:\\js_projects\\1\\my-app\\src\\data\\UsersReduser.js"],"names":["API","follow","unfollow","setusers","Set_Current_Page","Set_Total_Count_Of_Users","IsFetching_Toggle","IsInProcess_Togle","Portion_Size_Changer","DefaultState","Users","pageSize","totalUsersCount","currentPage","IsFetching","InProcess","PortionSize","UsersReducer","state","action","type","map","us","id","userID","followed","users","UserID","filter","PortionSizeChangingValue","OnFollow","onUnFollow","setUsers","SetCurrentPage","SetTotalCountOfUsers","totalCount","ToggleIsFetching","ToggleInProcess","ChangePortionSize","value","getUsersThunk","dispatch","data","getUsers","items","unfollowThunk","DelSub","resultCode","followThunk","AddSub"],"mappings":"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","sourcesContent":["import {API} from \"../API/requests\";\r\n\r\nconst follow = 'Users/FOLLOW'\r\nconst unfollow = 'Users/UNFOLLOW'\r\nconst setusers = 'Users/SET_USERS'\r\nconst Set_Current_Page= 'Users/SET_CURRENT_PAGE'\r\nconst Set_Total_Count_Of_Users = 'Users/Set_Total_Count_Of_Users'\r\nconst IsFetching_Toggle = 'Users/Toggle_is_fetching'\r\nconst IsInProcess_Togle = 'Users/IsInProcess_Togle'\r\nconst Portion_Size_Changer='Users/Portion_Size_Changer'\r\n\r\nlet DefaultState = {\r\n        Users: [],\r\n        pageSize : 9,\r\n        totalUsersCount:0,\r\n        currentPage : 1,\r\n         IsFetching : false,\r\n        InProcess : [],\r\n    PortionSize : 1\r\n}\r\n\r\nconst UsersReducer =  (state = DefaultState,action) => {\r\n    switch (action.type) {\r\n        case follow: {\r\n        return {\r\n          ...state,\r\n          Users:state.Users.map(us =>  {\r\n              if (us.id === action.userID) {\r\n                  return {\r\n                      ...us,\r\n                      followed:true\r\n                  }\r\n              }\r\n              return us\r\n          })\r\n        }\r\n    }\r\n        case unfollow: {\r\n            return {\r\n                ...state,\r\n                Users: state.Users.map(us =>{\r\n                    if(us.id === action.userID){\r\n                        return {\r\n                            ...us,\r\n                            followed:false\r\n                        }\r\n                    }\r\n                    return us\r\n                })\r\n            }\r\n        }\r\n        case setusers:{\r\n            return {...state, Users: action.users}\r\n        }\r\n        case Set_Current_Page:{\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case Set_Total_Count_Of_Users:{\r\n            return {...state, totalUsersCount: action.totalUsersCount}\r\n        }\r\n        case IsFetching_Toggle:{\r\n            return {...state, IsFetching: action.IsFetching}\r\n        }\r\n        case IsInProcess_Togle:{\r\n            return {...state,\r\n                InProcess : action.IsFetching ?\r\n                    [...state.InProcess, action.UserID]\r\n                    : state.InProcess.filter(id => id != action.UserID)\r\n            }\r\n        }\r\n        case Portion_Size_Changer:{\r\n            return {...state,PortionSize : action.PortionSizeChangingValue}\r\n        }\r\n        default :\r\n            return state\r\n    }\r\n}\r\nexport const OnFollow = (userID) => {\r\n    return {type : follow,userID:userID }\r\n}\r\nexport const onUnFollow = (userID) => {\r\n    return {type : unfollow, userID:userID }\r\n}\r\nexport const setUsers = (users) => {\r\n    return {type : setusers, users:users }\r\n}\r\nexport const SetCurrentPage = (currentPage) => {\r\n    return {type : Set_Current_Page, currentPage: currentPage}\r\n}\r\nexport const SetTotalCountOfUsers = (totalCount) => {\r\n    return {type : Set_Total_Count_Of_Users, totalUsersCount: totalCount}\r\n}\r\nexport const ToggleIsFetching = (IsFetching) => {\r\n    return {type : IsFetching_Toggle, IsFetching}\r\n}\r\nexport const ToggleInProcess = (IsFetching,UserID) => {\r\n    return {type : IsInProcess_Togle, IsFetching,UserID}\r\n}\r\n\r\nexport const ChangePortionSize = (value) => {\r\n    return {type : Portion_Size_Changer, PortionSizeChangingValue : value }\r\n}\r\n\r\n\r\nexport const getUsersThunk = (currentPage,pageSize) =>async (dispatch) =>{\r\n        dispatch (ToggleIsFetching(true))\r\n       const data = await API.getUsers(currentPage,pageSize)\r\n            dispatch(ToggleIsFetching(false))\r\n            dispatch( setUsers(data.items))\r\n            dispatch(SetTotalCountOfUsers(data.totalCount))\r\n    }\r\n\r\nexport  const  unfollowThunk = (userID) =>async (dispatch) =>{\r\n        dispatch(ToggleInProcess(true,userID))\r\n       const data = await API.DelSub(userID)\r\n            if (data.resultCode == 0) {\r\n                dispatch(onUnFollow(userID))\r\n            }\r\n            dispatch(ToggleInProcess(false,userID))\r\n    }\r\n\r\nexport  const  followThunk = (userID) =>async (dispatch) =>{\r\n        dispatch(ToggleInProcess(true,userID))\r\n      const data = await API.AddSub(userID)\r\n            if (data.resultCode == 0) {\r\n                dispatch(OnFollow(userID))\r\n            }\r\n            dispatch(ToggleInProcess(false,userID))\r\n    }\r\n\r\nexport default UsersReducer"]},"metadata":{},"sourceType":"module"}