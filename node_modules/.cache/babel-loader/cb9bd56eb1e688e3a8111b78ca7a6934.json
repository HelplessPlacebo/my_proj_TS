{"ast":null,"code":"var _jsxFileName = \"H:\\\\js_projects\\\\1\\\\my-app\\\\src\\\\components\\\\Profile\\\\ProfileStatus.jsx\";\nimport React from \"react\";\n\nclass ProfileStatus extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      StatusChanging: false,\n      status: this.props.status\n    };\n\n    this.StatusChangingON = () => {\n      //изменение поля для отрисовки, если сделать это не сет стейтом, то перерисовки не будет\n      this.setState({\n        StatusChanging: true\n      });\n    };\n\n    this.StatusChangingOFF = () => {\n      this.setState({\n        StatusChanging: false\n      });\n      this.props.SetProfileStatus(this.state.status);\n    };\n\n    this.OnStatusChange = e => {\n      this.setState({\n        status: e.currentTarget.value\n      });\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    debugger;\n\n    if (prevProps.status !== this.props.status) {\n      this.setState({\n        status: this.props.status\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, !this.state.StatusChanging ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      onDoubleClick: this.StatusChangingON,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, this.props.status || \"the status is empty\" //проверка на наличие статуса, если его нет - показать  статус ис эмпти\n    )) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      onChange: this.OnStatusChange,\n      onBlur: this.StatusChangingOFF,\n      autoFocus: true,\n      value: this.state.status,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default ProfileStatus;","map":{"version":3,"sources":["H:\\js_projects\\1\\my-app\\src\\components\\Profile\\ProfileStatus.jsx"],"names":["React","ProfileStatus","Component","state","StatusChanging","status","props","StatusChangingON","setState","StatusChangingOFF","SetProfileStatus","OnStatusChange","e","currentTarget","value","componentDidUpdate","prevProps","prevState","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,aAAN,SAA4BD,KAAK,CAACE,SAAlC,CAA4C;AAAA;AAAA;AAAA,SAUxCC,KAVwC,GAUhC;AACJC,MAAAA,cAAc,EAAE,KADZ;AAEJC,MAAAA,MAAM,EAAE,KAAKC,KAAL,CAAWD;AAFf,KAVgC;;AAAA,SAexCE,gBAfwC,GAerB,MAAM;AACrB;AACA,WAAKC,QAAL,CAAc;AAACJ,QAAAA,cAAc,EAAE;AAAjB,OAAd;AAEH,KAnBuC;;AAAA,SAoBxCK,iBApBwC,GAoBpB,MAAM;AACtB,WAAKD,QAAL,CAAc;AAACJ,QAAAA,cAAc,EAAE;AAAjB,OAAd;AACA,WAAKE,KAAL,CAAWI,gBAAX,CAA4B,KAAKP,KAAL,CAAWE,MAAvC;AAEH,KAxBuC;;AAAA,SAyBxCM,cAzBwC,GAyBtBC,CAAD,IAAO;AACpB,WAAKJ,QAAL,CAAc;AAACH,QAAAA,MAAM,EAAEO,CAAC,CAACC,aAAF,CAAgBC;AAAzB,OAAd;AACH,KA3BuC;AAAA;;AAExCC,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AAC7C;;AACQ,QAAGD,SAAS,CAACX,MAAV,KAAqB,KAAKC,KAAL,CAAWD,MAAnC,EAA0C;AACtC,WAAKG,QAAL,CAAc;AACVH,QAAAA,MAAM,EAAG,KAAKC,KAAL,CAAWD;AADV,OAAd;AAGH;AACJ;;AAoBDa,EAAAA,MAAM,GAAG;AAEL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,CAAC,KAAKf,KAAL,CAAWC,cAAZ,GACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK;AAAM,MAAA,aAAa,EAAE,KAAKG,gBAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACD,KAAKD,KAAL,CAAWD,MAAX,IAAqB,qBADpB,CAEF;AAFE,KADL,CADH,GASG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,QAAQ,EAAE,KAAKM,cAAtB;AAAsC,MAAA,MAAM,EAAE,KAAKF,iBAAnD;AAAsE,MAAA,SAAS,EAAE,IAAjF;AACO,MAAA,KAAK,EAAE,KAAKN,KAAL,CAAWE,MADzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAVR,CADJ;AAkBH;;AAjDuC;;AAoD5C,eAAeJ,aAAf","sourcesContent":["import React from \"react\"\r\n\r\nclass ProfileStatus extends React.Component {\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\ndebugger\r\n        if(prevProps.status !== this.props.status){\r\n            this.setState({\r\n                status : this.props.status\r\n            })\r\n        }\r\n    }\r\n    state = {\r\n        StatusChanging: false,\r\n        status: this.props.status\r\n    }\r\n\r\n    StatusChangingON = () => {\r\n        //изменение поля для отрисовки, если сделать это не сет стейтом, то перерисовки не будет\r\n        this.setState({StatusChanging: true})\r\n\r\n    }\r\n    StatusChangingOFF = () => {\r\n        this.setState({StatusChanging: false})\r\n        this.props.SetProfileStatus(this.state.status)\r\n\r\n    }\r\n    OnStatusChange = (e) => {\r\n        this.setState({status: e.currentTarget.value})\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                {!this.state.StatusChanging ?\r\n                    <div>\r\n                         <span onDoubleClick={this.StatusChangingON}>\r\n                       {this.props.status || \"the status is empty\"\r\n                       //проверка на наличие статуса, если его нет - показать  статус ис эмпти\r\n                       }\r\n                        </span>\r\n                    </div>\r\n                    :\r\n                    <div>\r\n                        <input onChange={this.OnStatusChange} onBlur={this.StatusChangingOFF} autoFocus={true}\r\n                               value={this.state.status}/>\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProfileStatus"]},"metadata":{},"sourceType":"module"}