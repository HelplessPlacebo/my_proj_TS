{"ast":null,"code":"var _jsxFileName = \"H:\\\\js_projects\\\\1\\\\my-app\\\\src\\\\components\\\\Login\\\\Login.jsx\";\nimport React from 'react';\nimport { reduxForm } from \"redux-form\";\nimport { compose } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { LoginThunk } from \"../../data/AuthReducer\";\nimport { required, MaxLengthCreator } from \"../utils/validators\";\nimport { CreateField, Input, InputName } from \"../assetss/common/ValidatorsComponents/ElementsValidators\";\nimport lm from \"../Login/login.module.css\";\nimport LoginUserPhoto from \"../assetss/images/userLog.jpg\";\nimport { Redirect } from \"react-router\";\nconst maxLength50 = MaxLengthCreator(50);\n\nconst MapStateToProps = state => ({\n  IsLogined: state.Auth.IsLogined,\n  CaptchaUrl: state.Auth.CaptchaUrl\n});\n\nconst LoginForm = props => {\n  return React.createElement(\"div\", {\n    className: lm.login,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: props.handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: LoginUserPhoto,\n    className: lm.imgUser,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }), CreateField(\"Enter the email\", \"email\", [required, maxLength50], Input)), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, CreateField(\"Enter the password\", \"password\", [required, maxLength50], Input, {\n    type: \"password\"\n  })), React.createElement(\"div\", {\n    className: lm.rememberMe,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, CreateField(\"\", \"rememberMe\", [], \"input\", {\n    type: \"checkbox\"\n  }, \"remember me\")), props.CaptchaUrl && React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: props.CaptchaUrl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), CreateField(\"Enter captcha symbols\", \"captcha\", [required], InputName)), props.error ? React.createElement(\"div\", {\n    className: lm.AuthError,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, props.error) : null, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: lm.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \" Enter\"))));\n};\n\nconst ReduxLoginForm = reduxForm({\n  form: 'login'\n})(LoginForm);\n\nlet Login = props => {\n  const PostUserDataToServer = formDatas => {\n    props.LoginThunk(formDatas.email, formDatas.password, formDatas.rememberMe); //here is all datas of forms, we can do here use some thunk for a make request on server\n  };\n\n  if (props.IsLogined) {\n    return React.createElement(Redirect, {\n      to: \"/Profile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(ReduxLoginForm, {\n    onSubmit: PostUserDataToServer,\n    CaptchaUrl: props.CaptchaUrl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }));\n};\n\nexport default compose(connect(MapStateToProps, {\n  LoginThunk\n}))(Login);","map":{"version":3,"sources":["H:\\js_projects\\1\\my-app\\src\\components\\Login\\Login.jsx"],"names":["React","reduxForm","compose","connect","LoginThunk","required","MaxLengthCreator","CreateField","Input","InputName","lm","LoginUserPhoto","Redirect","maxLength50","MapStateToProps","state","IsLogined","Auth","CaptchaUrl","LoginForm","props","login","handleSubmit","imgUser","type","rememberMe","error","AuthError","button","ReduxLoginForm","form","Login","PostUserDataToServer","formDatas","email","password"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {reduxForm} from \"redux-form\";\r\nimport {compose} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport {LoginThunk} from \"../../data/AuthReducer\"\r\nimport {required, MaxLengthCreator} from \"../utils/validators\"\r\nimport {CreateField, Input, InputName} from \"../assetss/common/ValidatorsComponents/ElementsValidators\"\r\nimport lm from \"../Login/login.module.css\"\r\nimport LoginUserPhoto from \"../assetss/images/userLog.jpg\"\r\nimport {Redirect} from \"react-router\";\r\n\r\nconst maxLength50 = MaxLengthCreator(50)\r\n\r\nconst MapStateToProps = (state) => ({\r\n    IsLogined: state.Auth.IsLogined,\r\n    CaptchaUrl: state.Auth.CaptchaUrl\r\n})\r\n\r\nconst LoginForm = (props) => {\r\n\r\n    return (\r\n\r\n        <div className={lm.login}>\r\n            <form onSubmit={props.handleSubmit}>\r\n\r\n                <div>\r\n                    <img src={LoginUserPhoto} className={lm.imgUser}/>\r\n                    {CreateField(\"Enter the email\", \"email\", [required, maxLength50], Input)}\r\n                </div>\r\n\r\n                <div>\r\n                    {CreateField(\"Enter the password\", \"password\", [required, maxLength50],\r\n                        Input, {type: \"password\"})}\r\n                </div>\r\n\r\n                <div className={lm.rememberMe}>\r\n                    {CreateField(\"\", \"rememberMe\", [], \"input\", {type: \"checkbox\"},\r\n                        \"remember me\")}\r\n                </div>\r\n\r\n                {props.CaptchaUrl &&\r\n                <div>\r\n                    <img src={props.CaptchaUrl}/>\r\n                    {CreateField(\"Enter captcha symbols\", \"captcha\", [required],\r\n                        InputName)}\r\n                </div>\r\n                }\r\n                {props.error\r\n                    ?\r\n                    <div className={lm.AuthError}>\r\n                        {props.error}\r\n                    </div>\r\n                    : null}\r\n                <div>\r\n                    <button className={lm.button}> Enter</button>\r\n                </div>\r\n            </form>\r\n        </div>)\r\n}\r\nconst ReduxLoginForm = reduxForm({form: 'login'})(LoginForm)\r\n\r\nlet Login = (props) => {\r\n    const PostUserDataToServer = (formDatas) => {\r\n        props.LoginThunk(formDatas.email, formDatas.password, formDatas.rememberMe)\r\n        //here is all datas of forms, we can do here use some thunk for a make request on server\r\n    }\r\n\r\n    if (props.IsLogined) {\r\n        return <Redirect to={\"/Profile\"}/>\r\n    }\r\n    return (<div>\r\n\r\n        <ReduxLoginForm onSubmit={PostUserDataToServer}\r\n                        CaptchaUrl={props.CaptchaUrl}/>\r\n    </div>)\r\n}\r\n\r\nexport default compose(\r\n    connect(MapStateToProps, {LoginThunk}),\r\n)(Login)"]},"metadata":{},"sourceType":"module"}