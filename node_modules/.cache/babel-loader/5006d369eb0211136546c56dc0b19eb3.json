{"ast":null,"code":"var _jsxFileName = \"H:\\\\js_projects\\\\1\\\\my-app\\\\src\\\\components\\\\ToDoLists\\\\ToDoListTasks\\\\TaskEditForm.jsx\";\nimport React from \"react\";\nimport { Input, CreateField, TaskFormInput, ContactFormInput } from \"../../assetss/common/ValidatorsComponents/ElementsValidators\";\nimport { MaxLengthCreator, required } from \"../../utils/validators\";\nimport ts from \"./Tasks.module.css\";\nimport GoBackButton from \"../GoBackButton\";\nconst maxlength50 = MaxLengthCreator(50);\nconst maxlength100 = MaxLengthCreator(100);\n\nconst TaskEditForm = props => {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: props.handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: ts.TaskFormWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: ts.TaskEditFromButtons,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: ts.TaskFormSaveButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"save\"), React.createElement(\"div\", {\n    className: ts.GoBackButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(GoBackButton, {\n    HandleOnClick: props.TaskEditModeOFF,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: props.TaskExecutedStyleForWindow,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: ts.MainFormWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Completed?\"), React.createElement(\"div\", {\n    className: ts.CompletedInput,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, CreateField(\"completed\", \"completed\", [], ContactFormInput, {\n    type: \"checkbox\"\n  }))), React.createElement(\"div\", {\n    className: ts.Title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Task title :\", CreateField(\"title\", \"title\", [required, maxlength50], ContactFormInput))), React.createElement(\"div\", {\n    className: ts.detailsWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: ts.startDate,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"Start date :\", CreateField(\"must be like 11/01/2019\", \"startDate\", [maxlength50], ContactFormInput)), React.createElement(\"div\", {\n    className: ts.deadline,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"deadline :\", CreateField(\"must be like 11/11/2019\", \"deadline\", [maxlength50], ContactFormInput))), React.createElement(\"div\", {\n    className: ts.FormDescription,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"description :\", CreateField(\"description\", \"description\", [required, maxlength100], ContactFormInput)))))));\n};\n\nexport default TaskEditForm;","map":{"version":3,"sources":["H:\\js_projects\\1\\my-app\\src\\components\\ToDoLists\\ToDoListTasks\\TaskEditForm.jsx"],"names":["React","Input","CreateField","TaskFormInput","ContactFormInput","MaxLengthCreator","required","ts","GoBackButton","maxlength50","maxlength100","TaskEditForm","props","handleSubmit","TaskFormWrapper","TaskEditFromButtons","TaskFormSaveButton","TaskEditModeOFF","TaskExecutedStyleForWindow","MainFormWrapper","CompletedInput","type","Title","detailsWrapper","startDate","deadline","FormDescription"],"mappings":"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","sourcesContent":["import React from \"react\"\r\nimport {\r\n    Input,\r\n    CreateField,\r\n    TaskFormInput,ContactFormInput\r\n} from \"../../assetss/common/ValidatorsComponents/ElementsValidators\";\r\nimport {MaxLengthCreator, required} from \"../../utils/validators\";\r\nimport ts from \"./Tasks.module.css\";\r\nimport GoBackButton from \"../GoBackButton\";\r\n\r\nconst maxlength50 = MaxLengthCreator(50)\r\nconst maxlength100 = MaxLengthCreator(100)\r\n\r\nconst TaskEditForm = (props) => {\r\n\r\n    return <div>\r\n\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div className={ts.TaskFormWrapper}>\r\n\r\n                <div className={ts.TaskEditFromButtons}>\r\n\r\n                        <button  className={ts.TaskFormSaveButton}>\r\n                            save\r\n                        </button>\r\n\r\n                    <div className={ts.GoBackButton}>\r\n                    <GoBackButton HandleOnClick={props.TaskEditModeOFF}/>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n\r\n                <div>\r\n                    <div className={props.TaskExecutedStyleForWindow}>\r\n                        <div className={ts.MainFormWrapper}>\r\n\r\n                            <div>\r\n                                <div>\r\n                                    Completed?\r\n                                </div>\r\n\r\n                                <div className={ts.CompletedInput}>\r\n                                    {CreateField(\"completed\", \"completed\", [], ContactFormInput, {type: \"checkbox\"})}\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className={ts.Title}>\r\n                                Task title :\r\n                                {CreateField(\"title\", \"title\", [required,maxlength50], ContactFormInput)}\r\n                            </div>\r\n                        </div>\r\n\r\n                            <div className={ts.detailsWrapper}>\r\n                                <div className={ts.startDate}>\r\n                                    Start date :\r\n                                    {CreateField(\"must be like 11/01/2019\", \"startDate\", [maxlength50], ContactFormInput,)}\r\n                                </div>\r\n\r\n                                <div className={ts.deadline}>\r\n                                    deadline :\r\n                                    {CreateField(\"must be like 11/11/2019\", \"deadline\", [maxlength50], ContactFormInput)}\r\n                                </div>\r\n                            </div>\r\n                            <div className={ts.FormDescription}>\r\n                                description :\r\n                                {CreateField(\"description\", \"description\", [required,maxlength100], ContactFormInput)}\r\n                            </div>\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n        </form>\r\n    </div>\r\n}\r\n\r\nexport default TaskEditForm"]},"metadata":{},"sourceType":"module"}