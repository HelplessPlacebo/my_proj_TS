{"ast":null,"code":"var _jsxFileName = \"H:\\\\js_projects\\\\1\\\\my-app\\\\src\\\\components\\\\Dialogs\\\\Message\\\\MessagesContainer.jsx\";\nimport React from 'react';\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport { withRouter } from 'react-router-dom';\nimport { GetDialogsMessagesSelector, GetinterlocutorAvatarSelector, GetMessagesDataSelector, GetUserAvatarSelector } from \"../../../data/DialogsSelectors\";\nimport MessagesWithUser from \"./MessagesWithUser\";\nimport { AuthRedirect } from \"../../hocs/AuthRedirect\";\nimport { SendNewMessageThunk, GetNewMessagesThunk, GetInterlocutorAvatarThunk } from \"../../../data/DIalogsReduser\";\n\nclass MessagesContainer extends React.Component {\n  componentDidMount() {\n    const userID = this.props.match.params.userID;\n    this.props.GetNewMessagesThunk(userID);\n    this.props.GetInterlocutorAvatarThunk(userID);\n  }\n\n  render() {\n    return React.createElement(MessagesWithUser, Object.assign({}, this.props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }));\n  }\n\n}\n\nlet StateToProps = state => ({\n  MessagesData: GetMessagesDataSelector(state),\n  DialogsMessages: GetDialogsMessagesSelector(state),\n  InterlocutorAvatar: GetinterlocutorAvatarSelector(state),\n  UserAvatar: GetUserAvatarSelector(state)\n});\n\nexport default compose(connect(StateToProps, {\n  GetNewMessagesThunk,\n  SendNewMessageThunk,\n  GetInterlocutorAvatarThunk\n}), AuthRedirect, withRouter)(MessagesContainer);","map":{"version":3,"sources":["H:\\js_projects\\1\\my-app\\src\\components\\Dialogs\\Message\\MessagesContainer.jsx"],"names":["React","connect","compose","withRouter","GetDialogsMessagesSelector","GetinterlocutorAvatarSelector","GetMessagesDataSelector","GetUserAvatarSelector","MessagesWithUser","AuthRedirect","SendNewMessageThunk","GetNewMessagesThunk","GetInterlocutorAvatarThunk","MessagesContainer","Component","componentDidMount","userID","props","match","params","render","StateToProps","state","MessagesData","DialogsMessages","InterlocutorAvatar","UserAvatar"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,OAAR,QAAsB,OAAtB;AACA,SAASC,UAAT,QAA0B,kBAA1B;AACA,SACIC,0BADJ,EAEIC,6BAFJ,EAGIC,uBAHJ,EAIIC,qBAJJ,QAKO,gCALP;AAMA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,SAAQC,YAAR,QAA2B,yBAA3B;AACA,SAAQC,mBAAR,EAA4BC,mBAA5B,EAAgDC,0BAAhD,QAAiF,8BAAjF;;AAGA,MAAMC,iBAAN,SAAgCb,KAAK,CAACc,SAAtC,CAAgD;AAE5CC,EAAAA,iBAAiB,GAAG;AAChB,UAAMC,MAAM,GAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,MAAvC;AACA,SAAKC,KAAL,CAAWN,mBAAX,CAA+BK,MAA/B;AACA,SAAKC,KAAL,CAAWL,0BAAX,CAAsCI,MAAtC;AACH;;AAGDI,EAAAA,MAAM,GAAG;AACL,WACI,oBAAC,gBAAD,oBAAsB,KAAKH,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADJ;AAGH;;AAb2C;;AAgBhD,IAAII,YAAY,GAAIC,KAAD,KAAY;AAC3BC,EAAAA,YAAY,EAAEjB,uBAAuB,CAACgB,KAAD,CADV;AAE3BE,EAAAA,eAAe,EAAGpB,0BAA0B,CAACkB,KAAD,CAFjB;AAG3BG,EAAAA,kBAAkB,EAAGpB,6BAA6B,CAACiB,KAAD,CAHvB;AAI3BI,EAAAA,UAAU,EAAGnB,qBAAqB,CAACe,KAAD;AAJP,CAAZ,CAAnB;;AAOA,eAAepB,OAAO,CAACD,OAAO,CAACoB,YAAD,EAC1B;AAACV,EAAAA,mBAAD;AAAqBD,EAAAA,mBAArB;AAAyCE,EAAAA;AAAzC,CAD0B,CAAR,EAElBH,YAFkB,EAGlBN,UAHkB,CAAP,CAGCU,iBAHD,CAAf","sourcesContent":["import React from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport { withRouter} from 'react-router-dom'\r\nimport {\r\n    GetDialogsMessagesSelector,\r\n    GetinterlocutorAvatarSelector,\r\n    GetMessagesDataSelector,\r\n    GetUserAvatarSelector\r\n} from \"../../../data/DialogsSelectors\";\r\nimport MessagesWithUser from \"./MessagesWithUser\";\r\nimport {AuthRedirect} from \"../../hocs/AuthRedirect\";\r\nimport {SendNewMessageThunk,GetNewMessagesThunk,GetInterlocutorAvatarThunk} from \"../../../data/DIalogsReduser\"\r\n\r\n\r\nclass MessagesContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        const userID = this.props.match.params.userID\r\n        this.props.GetNewMessagesThunk(userID)\r\n        this.props.GetInterlocutorAvatarThunk(userID)\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <MessagesWithUser {...this.props} />\r\n        )\r\n    }\r\n}\r\n\r\nlet StateToProps = (state) => ({\r\n    MessagesData: GetMessagesDataSelector(state),\r\n    DialogsMessages : GetDialogsMessagesSelector(state),\r\n    InterlocutorAvatar : GetinterlocutorAvatarSelector(state),\r\n    UserAvatar : GetUserAvatarSelector(state)\r\n})\r\n\r\nexport default compose(connect(StateToProps,\r\n    {GetNewMessagesThunk,SendNewMessageThunk,GetInterlocutorAvatarThunk}),\r\n    AuthRedirect,\r\n    withRouter)(MessagesContainer)"]},"metadata":{},"sourceType":"module"}