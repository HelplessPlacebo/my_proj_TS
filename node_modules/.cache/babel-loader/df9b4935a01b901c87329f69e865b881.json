{"ast":null,"code":"var _jsxFileName = \"H:\\\\js_projects\\\\1\\\\my-app\\\\src\\\\components\\\\Header\\\\HeaderContainer.jsx\";\nimport React from 'react';\nimport Header from \"./Header\";\nimport Preloader from \"../assetss/common/Loader/Loader\";\nimport { connect } from \"react-redux\";\nimport { LogOutThunk } from \"../../data/AuthReducer\";\nimport { GetProfileSelector } from \"../../data/ProfileSelectors\";\nimport { GetNewMessagesCountThunk } from \"../../data/DIalogsReduser\";\nimport { GetIsFetchingSelector, GetIsLoginedSelector, GetLoginSelector } from \"../../data/AuthSelectors\";\nimport { GetNewMessagesCountSelector } from \"../../data/InitialozationSelectors\";\n\nclass HeaderContainer extends React.Component {\n  componentDidMount() {\n    this.props.GetNewMessagesCountThunk();\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, this.props.IsFetching ? React.createElement(Preloader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }) : null, React.createElement(Header, Object.assign({}, this.props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    })));\n  }\n\n}\n\nlet MapStateToProps = state => ({\n  IsFetching: GetIsFetchingSelector(state),\n  IsLogined: GetIsLoginedSelector(state),\n  login: GetLoginSelector(state),\n  UserProfile: GetProfileSelector(state),\n  NewMessagesCount: GetNewMessagesCountSelector(state)\n});\n\nexport default HeaderContainer = connect(MapStateToProps, {\n  LogOutThunk,\n  GetNewMessagesCountThunk\n})(HeaderContainer);","map":{"version":3,"sources":["H:\\js_projects\\1\\my-app\\src\\components\\Header\\HeaderContainer.jsx"],"names":["React","Header","Preloader","connect","LogOutThunk","GetProfileSelector","GetNewMessagesCountThunk","GetIsFetchingSelector","GetIsLoginedSelector","GetLoginSelector","GetNewMessagesCountSelector","HeaderContainer","Component","componentDidMount","props","render","IsFetching","MapStateToProps","state","IsLogined","login","UserProfile","NewMessagesCount"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,SAAP,MAAsB,iCAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,WAAR,QAA0B,wBAA1B;AACA,SAAQC,kBAAR,QAAiC,6BAAjC;AACA,SAAQC,wBAAR,QAAuC,2BAAvC;AACA,SAAQC,qBAAR,EAA+BC,oBAA/B,EAAqDC,gBAArD,QAA4E,0BAA5E;AACA,SAAQC,2BAAR,QAA0C,oCAA1C;;AAGA,MAAMC,eAAN,SAA8BX,KAAK,CAACY,SAApC,CAA8C;AAC9CC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,KAAL,CAAWR,wBAAX;AACH;;AAEGS,EAAAA,MAAM,GAAG;AACL,WAAO,0CACN,KAAKD,KAAL,CAAWE,UAAX,GAAwB,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAxB,GAAsC,IADhC,EAEL,oBAAC,MAAD,oBAAY,KAAKF,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAFK,CAAP;AAIH;;AAVyC;;AAa9C,IAAIG,eAAe,GAAIC,KAAD,KAAY;AAC9BF,EAAAA,UAAU,EAAGT,qBAAqB,CAACW,KAAD,CADJ;AAE9BC,EAAAA,SAAS,EAAEX,oBAAoB,CAACU,KAAD,CAFD;AAG9BE,EAAAA,KAAK,EAACX,gBAAgB,CAACS,KAAD,CAHQ;AAI9BG,EAAAA,WAAW,EAAEhB,kBAAkB,CAACa,KAAD,CAJD;AAK9BI,EAAAA,gBAAgB,EAAGZ,2BAA2B,CAACQ,KAAD;AALhB,CAAZ,CAAtB;;AAQA,eAAeP,eAAe,GAAGR,OAAO,CAACc,eAAD,EAAkB;AAACb,EAAAA,WAAD;AAAaE,EAAAA;AAAb,CAAlB,CAAP,CAAiEK,eAAjE,CAAjC","sourcesContent":["import React from 'react';\r\nimport Header from \"./Header\";\r\nimport Preloader from \"../assetss/common/Loader/Loader\";\r\nimport {connect} from \"react-redux\";\r\nimport {LogOutThunk} from \"../../data/AuthReducer\";\r\nimport {GetProfileSelector} from \"../../data/ProfileSelectors\";\r\nimport {GetNewMessagesCountThunk} from \"../../data/DIalogsReduser\"\r\nimport {GetIsFetchingSelector, GetIsLoginedSelector, GetLoginSelector} from \"../../data/AuthSelectors\";\r\nimport {GetNewMessagesCountSelector} from \"../../data/InitialozationSelectors\";\r\n\r\n\r\nclass HeaderContainer extends React.Component {\r\ncomponentDidMount() {\r\n    this.props.GetNewMessagesCountThunk()\r\n}\r\n\r\n    render() {\r\n        return <>\r\n        {this.props.IsFetching ? <Preloader/> :null}\r\n          <Header {...this.props} />\r\n          </>\r\n    }\r\n\r\n}\r\nlet MapStateToProps = (state) => ({\r\n    IsFetching : GetIsFetchingSelector(state),\r\n    IsLogined: GetIsLoginedSelector(state),\r\n    login:GetLoginSelector(state),\r\n    UserProfile: GetProfileSelector(state),\r\n    NewMessagesCount : GetNewMessagesCountSelector(state)\r\n})\r\n\r\nexport default HeaderContainer = connect(MapStateToProps, {LogOutThunk,GetNewMessagesCountThunk})(HeaderContainer);\r\n"]},"metadata":{},"sourceType":"module"}