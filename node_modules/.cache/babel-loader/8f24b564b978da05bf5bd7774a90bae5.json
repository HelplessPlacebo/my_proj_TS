{"ast":null,"code":"var _jsxFileName = \"H:\\\\js_projects\\\\1\\\\my-app\\\\src\\\\components\\\\Header\\\\HeaderContainer.tsx\";\nimport React from 'react';\nimport Header from \"./Header\";\nimport Preloader from \"../assetss/common/Loader/Loader\";\nimport { connect } from \"react-redux\";\nimport { LogOutThunk } from \"../../data/AuthReducer\";\nimport { GetOwnNameSelector, GetProfileSelector } from \"../../data/ProfileSelectors\";\nimport { GetNewMessagesCountThunk } from \"../../data/DIalogsReduser\";\nimport { GetIsFetchingSelector, GetIsLoginedSelector, GetLoginSelector, GetUserIDSelector } from \"../../data/AuthSelectors\";\nimport { GetNewMessagesCountSelector } from \"../../data/InitialozationSelectors\";\n\nclass HeaderContainer extends React.Component {\n  componentDidMount() {\n    if (this.props.IsLogined) {\n      this.props.GetNewMessagesCountThunk();\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.IsLogined !== prevProps.IsLogined) {\n      this.props.GetNewMessagesCountThunk();\n    }\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, this.props.IsFetching ? React.createElement(Preloader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }) : null, React.createElement(Header, Object.assign({}, this.props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    })));\n  }\n\n}\n\nlet MapStateToProps = state => ({\n  IsFetching: GetIsFetchingSelector(state),\n  IsLogined: GetIsLoginedSelector(state),\n  login: GetLoginSelector(state),\n  UserProfile: GetProfileSelector(state),\n  OwnID: GetUserIDSelector(state),\n  OwnName: GetOwnNameSelector(state),\n  NewMessagesCount: GetNewMessagesCountSelector(state)\n});\n\nexport default connect(MapStateToProps, {\n  LogOutThunk,\n  GetNewMessagesCountThunk\n})(HeaderContainer);","map":{"version":3,"sources":["H:\\js_projects\\1\\my-app\\src\\components\\Header\\HeaderContainer.tsx"],"names":["React","Header","Preloader","connect","LogOutThunk","GetOwnNameSelector","GetProfileSelector","GetNewMessagesCountThunk","GetIsFetchingSelector","GetIsLoginedSelector","GetLoginSelector","GetUserIDSelector","GetNewMessagesCountSelector","HeaderContainer","Component","componentDidMount","props","IsLogined","componentDidUpdate","prevProps","prevState","render","IsFetching","MapStateToProps","state","login","UserProfile","OwnID","OwnName","NewMessagesCount"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,SAAP,MAAsB,iCAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,WAAR,QAA0B,wBAA1B;AACA,SAAQC,kBAAR,EAA4BC,kBAA5B,QAAqD,6BAArD;AACA,SAAQC,wBAAR,QAAuC,2BAAvC;AACA,SACIC,qBADJ,EAEIC,oBAFJ,EAGIC,gBAHJ,EAIIC,iBAJJ,QAKO,0BALP;AAMA,SAAQC,2BAAR,QAA0C,oCAA1C;;AAUA,MAAMC,eAAN,SAA8Bb,KAAK,CAACc,SAApC,CAAqE;AACjEC,EAAAA,iBAAiB,GAAG;AAChB,QAAG,KAAKC,KAAL,CAAWC,SAAd,EAAwB;AACpB,WAAKD,KAAL,CAAWT,wBAAX;AACH;AACJ;;AACDW,EAAAA,kBAAkB,CAACC,SAAD,EAAoCC,SAApC,EAAoD;AAElE,QAAG,KAAKJ,KAAL,CAAWC,SAAX,KAAyBE,SAAS,CAACF,SAAtC,EAAiD;AAC7C,WAAKD,KAAL,CAAWT,wBAAX;AACH;AACJ;;AAGDc,EAAAA,MAAM,GAAG;AACL,WAAO,0CACN,KAAKL,KAAL,CAAWM,UAAX,GAAwB,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAxB,GAAsC,IADhC,EAEL,oBAAC,MAAD,oBAAY,KAAKN,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAFK,CAAP;AAIH;;AAnBgE;;AAsBrE,IAAIO,eAAe,GAAIC,KAAD,KAAoD;AACtEF,EAAAA,UAAU,EAAGd,qBAAqB,CAACgB,KAAD,CADoC;AAEtEP,EAAAA,SAAS,EAAER,oBAAoB,CAACe,KAAD,CAFuC;AAGtEC,EAAAA,KAAK,EAACf,gBAAgB,CAACc,KAAD,CAHgD;AAItEE,EAAAA,WAAW,EAAEpB,kBAAkB,CAACkB,KAAD,CAJuC;AAKtEG,EAAAA,KAAK,EAAGhB,iBAAiB,CAACa,KAAD,CAL6C;AAMtEI,EAAAA,OAAO,EAAGvB,kBAAkB,CAACmB,KAAD,CAN0C;AAOtEK,EAAAA,gBAAgB,EAAGjB,2BAA2B,CAACY,KAAD;AAPwB,CAApD,CAAtB;;AAUA,eAAerB,OAAO,CAAsFoB,eAAtF,EAClB;AAACnB,EAAAA,WAAD;AAAaG,EAAAA;AAAb,CADkB,CAAP,CAC8BM,eAD9B,CAAf","sourcesContent":["import React from 'react';\r\nimport Header from \"./Header\";\r\nimport Preloader from \"../assetss/common/Loader/Loader\";\r\nimport {connect} from \"react-redux\";\r\nimport {LogOutThunk} from \"../../data/AuthReducer\";\r\nimport {GetOwnNameSelector, GetProfileSelector} from \"../../data/ProfileSelectors\";\r\nimport {GetNewMessagesCountThunk} from \"../../data/DIalogsReduser\"\r\nimport {\r\n    GetIsFetchingSelector,\r\n    GetIsLoginedSelector,\r\n    GetLoginSelector,\r\n    GetUserIDSelector\r\n} from \"../../data/AuthSelectors\";\r\nimport {GetNewMessagesCountSelector} from \"../../data/InitialozationSelectors\";\r\nimport {GlobalState} from \"../../data/redux-store\";\r\nimport {\r\n    T_MDTP_HeaderContainer,\r\n    T_MSTP_HeaderContainer,\r\n    THeaderContainerOwnProps\r\n} from \"../GlobalTypes/HeaderTypes/HeaderTypes\";\r\n\r\nexport type THeaderContainerProps = T_MSTP_HeaderContainer & T_MDTP_HeaderContainer & THeaderContainerOwnProps\r\n\r\nclass HeaderContainer extends React.Component<THeaderContainerProps> {\r\n    componentDidMount() {\r\n        if(this.props.IsLogined){\r\n            this.props.GetNewMessagesCountThunk()\r\n        }\r\n    }\r\n    componentDidUpdate(prevProps : THeaderContainerProps, prevState : {}) {\r\n\r\n        if(this.props.IsLogined !== prevProps.IsLogined ){\r\n            this.props.GetNewMessagesCountThunk()\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return <>\r\n        {this.props.IsFetching ? <Preloader/> :null}\r\n          <Header {...this.props} />\r\n          </>\r\n    }\r\n\r\n}\r\nlet MapStateToProps = (state : GlobalState) : T_MSTP_HeaderContainer  => ({\r\n    IsFetching : GetIsFetchingSelector(state),\r\n    IsLogined: GetIsLoginedSelector(state),\r\n    login:GetLoginSelector(state),\r\n    UserProfile: GetProfileSelector(state),\r\n    OwnID : GetUserIDSelector(state),\r\n    OwnName : GetOwnNameSelector(state),\r\n    NewMessagesCount : GetNewMessagesCountSelector(state)\r\n})\r\n\r\nexport default connect<T_MSTP_HeaderContainer,T_MDTP_HeaderContainer,THeaderContainerOwnProps, GlobalState>(MapStateToProps,\r\n    {LogOutThunk,GetNewMessagesCountThunk}) (HeaderContainer);\r\n"]},"metadata":{},"sourceType":"module"}