{"ast":null,"code":"import _objectSpread from \"H:\\\\js_projects\\\\1\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { API } from \"../API/requests\";\nimport { stopSubmit } from \"redux-form\";\nconst follow = 'Users/FOLLOW';\nconst unfollow = 'Users/UNFOLLOW';\nconst setusers = 'Users/SET_USERS';\nconst Set_Current_Page = 'Users/SET_CURRENT_PAGE';\nconst Set_Total_Count_Of_Users = 'Users/Set_Total_Count_Of_Users';\nconst IsFetching_Toggle = 'Users/Toggle_is_fetching';\nconst IsInProcess_Togle = 'Users/IsInProcess_Togle';\nconst Portion_Size_Changer = 'Users/Portion_Size_C                                                                hanger';\nconst Set_Founded_User = 'Users/Set_Founded_User';\nconst FindUserIsFetching_Toggle = 'Users/FindUserIsFetching_Toggle';\nlet DefaultState = {\n  Users: [],\n  pageSize: 20,\n  totalUsersCount: 0,\n  currentPage: 1,\n  IsFetching: false,\n  FindUserIsFetching: false,\n  InProcess: [],\n  PortionSize: 1,\n  FoundedUser: null\n};\n\nconst UsersReducer = (state = DefaultState, action) => {\n  switch (action.type) {\n    case follow:\n      {\n        return _objectSpread({}, state, {\n          Users: state.Users.map(us => {\n            if (us.id === action.userID) {\n              return _objectSpread({}, us, {\n                followed: true\n              });\n            }\n\n            return us;\n          })\n        });\n      }\n\n    case unfollow:\n      {\n        return _objectSpread({}, state, {\n          Users: state.Users.map(us => {\n            if (us.id === action.userID) {\n              return _objectSpread({}, us, {\n                followed: false\n              });\n            }\n\n            return us;\n          })\n        });\n      }\n\n    case setusers:\n      {\n        return _objectSpread({}, state, {\n          Users: action.users\n        });\n      }\n\n    case Set_Current_Page:\n      {\n        return _objectSpread({}, state, {\n          currentPage: action.currentPage\n        });\n      }\n\n    case Set_Total_Count_Of_Users:\n      {\n        return _objectSpread({}, state, {\n          totalUsersCount: action.totalUsersCount\n        });\n      }\n\n    case IsFetching_Toggle:\n      {\n        return _objectSpread({}, state, {\n          IsFetching: action.IsFetching\n        });\n      }\n\n    case IsInProcess_Togle:\n      {\n        return _objectSpread({}, state, {\n          InProcess: action.InProgress ? [...state.InProcess, action.UserID] : state.InProcess.filter(id => id !== action.UserID)\n        });\n      }\n\n    case Portion_Size_Changer:\n      {\n        return _objectSpread({}, state, {\n          PortionSize: action.PortionSizeChangingValue\n        });\n      }\n\n    case Set_Founded_User:\n      {\n        return _objectSpread({}, state, {\n          FoundedUser: action.NewFoundedUser\n        });\n      }\n\n    case FindUserIsFetching_Toggle:\n      {\n        return _objectSpread({}, state, {\n          FindUserIsFetching: action.FindUserIsFetching\n        });\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const OnFollow = userID => {\n  return {\n    type: follow,\n    userID: userID\n  };\n};\nexport const onUnFollow = userID => {\n  return {\n    type: unfollow,\n    userID: userID\n  };\n};\nexport const setUsers = users => {\n  return {\n    type: setusers,\n    users: users\n  };\n};\nexport const SetCurrentPage = currentPage => {\n  return {\n    type: Set_Current_Page,\n    currentPage: currentPage\n  };\n};\nexport const SetTotalCountOfUsers = totalCount => {\n  return {\n    type: Set_Total_Count_Of_Users,\n    totalUsersCount: totalCount\n  };\n};\nexport const ToggleIsFetching = IsFetching => {\n  return {\n    type: IsFetching_Toggle,\n    IsFetching\n  };\n};\nexport const ToggleFindUserIsFetching = FindUserIsFetching => {\n  return {\n    type: FindUserIsFetching_Toggle,\n    FindUserIsFetching\n  };\n};\nexport const ToggleInProcess = (InProgress, UserID) => {\n  return {\n    type: IsInProcess_Togle,\n    InProgress,\n    UserID\n  };\n};\nexport const ChangePortionSize = value => {\n  return {\n    type: Portion_Size_Changer,\n    PortionSizeChangingValue: value\n  };\n};\nexport const SetFoundedUser = NewFoundedUser => {\n  return {\n    type: Set_Founded_User,\n    NewFoundedUser\n  };\n};\nexport const getUsersThunk = (currentPage, pageSize) => async dispatch => {\n  dispatch(ToggleIsFetching(true));\n  const data = await API.getUsers(currentPage, pageSize);\n  dispatch(ToggleIsFetching(false));\n  dispatch(setUsers(data.items));\n  dispatch(SetTotalCountOfUsers(data.totalCount));\n};\nexport const unfollowThunk = userID => async dispatch => {\n  dispatch(ToggleInProcess(true, userID));\n  const data = await API.DelSub(userID);\n\n  if (data.resultCode == 0) {\n    dispatch(onUnFollow(userID));\n  }\n\n  dispatch(ToggleInProcess(false, userID));\n};\nexport const followThunk = userID => async dispatch => {\n  dispatch(ToggleInProcess(true, userID));\n  const data = await API.AddSub(userID);\n\n  if (data.resultCode == 0) {\n    dispatch(OnFollow(userID));\n  }\n\n  dispatch(ToggleInProcess(false, userID));\n};\nexport const FindUserThunk = UserName => async dispatch => {\n  dispatch(ToggleFindUserIsFetching(true));\n  const data = await API.FindUser(UserName);\n  dispatch(ToggleFindUserIsFetching(false));\n\n  if (!data.data.error) {\n    dispatch(SetFoundedUser(data.data));\n  } else {\n    dispatch(stopSubmit(\"FindUser\", {\n      _error: data.data.error.messages[0]\n    }));\n  }\n};\nexport default UsersReducer;","map":{"version":3,"sources":["H:\\js_projects\\1\\my-app\\src\\data\\UsersReduser.js"],"names":["API","stopSubmit","follow","unfollow","setusers","Set_Current_Page","Set_Total_Count_Of_Users","IsFetching_Toggle","IsInProcess_Togle","Portion_Size_Changer","Set_Founded_User","FindUserIsFetching_Toggle","DefaultState","Users","pageSize","totalUsersCount","currentPage","IsFetching","FindUserIsFetching","InProcess","PortionSize","FoundedUser","UsersReducer","state","action","type","map","us","id","userID","followed","users","InProgress","UserID","filter","PortionSizeChangingValue","NewFoundedUser","OnFollow","onUnFollow","setUsers","SetCurrentPage","SetTotalCountOfUsers","totalCount","ToggleIsFetching","ToggleFindUserIsFetching","ToggleInProcess","ChangePortionSize","value","SetFoundedUser","getUsersThunk","dispatch","data","getUsers","items","unfollowThunk","DelSub","resultCode","followThunk","AddSub","FindUserThunk","UserName","FindUser","error","_error","messages"],"mappings":"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","sourcesContent":["import {API} from \"../API/requests\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst follow = 'Users/FOLLOW'\r\nconst unfollow = 'Users/UNFOLLOW'\r\nconst setusers = 'Users/SET_USERS'\r\nconst Set_Current_Page = 'Users/SET_CURRENT_PAGE'\r\nconst Set_Total_Count_Of_Users = 'Users/Set_Total_Count_Of_Users'\r\nconst IsFetching_Toggle = 'Users/Toggle_is_fetching'\r\nconst IsInProcess_Togle = 'Users/IsInProcess_Togle'\r\nconst Portion_Size_Changer = 'Users/Portion_Size_C                                                                hanger'\r\nconst Set_Founded_User = 'Users/Set_Founded_User'\r\nconst FindUserIsFetching_Toggle = 'Users/FindUserIsFetching_Toggle'\r\n\r\n\r\nlet DefaultState = {\r\n    Users: [],\r\n    pageSize: 20,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    IsFetching: false,\r\n    FindUserIsFetching : false,\r\n    InProcess: [],\r\n    PortionSize: 1,\r\n    FoundedUser: null\r\n}\r\n\r\nconst UsersReducer = (state = DefaultState, action) => {\r\n    switch (action.type) {\r\n        case follow: {\r\n            return {\r\n                ...state,\r\n                Users: state.Users.map(us => {\r\n                    if (us.id === action.userID) {\r\n                        return {\r\n                            ...us,\r\n                            followed: true\r\n                        }\r\n                    }\r\n                    return us\r\n                })\r\n            }\r\n        }\r\n        case unfollow: {\r\n            return {\r\n                ...state,\r\n                Users: state.Users.map(us => {\r\n                    if (us.id === action.userID) {\r\n                        return {\r\n                            ...us,\r\n                            followed: false\r\n                        }\r\n                    }\r\n                    return us\r\n                })\r\n            }\r\n        }\r\n        case setusers: {\r\n            return {...state, Users: action.users}\r\n        }\r\n        case Set_Current_Page: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case Set_Total_Count_Of_Users: {\r\n            return {...state, totalUsersCount: action.totalUsersCount}\r\n        }\r\n        case IsFetching_Toggle: {\r\n            return {...state, IsFetching: action.IsFetching}\r\n        }\r\n        case IsInProcess_Togle: {\r\n            return {\r\n                ...state,\r\n                InProcess: action.InProgress ?\r\n                    [...state.InProcess, action.UserID]\r\n                    : state.InProcess.filter(id => id !== action.UserID)\r\n            }\r\n        }\r\n        case Portion_Size_Changer: {\r\n            return {...state, PortionSize: action.PortionSizeChangingValue}\r\n        }\r\n        case Set_Founded_User: {\r\n            return {...state, FoundedUser: action.NewFoundedUser}\r\n        }\r\n        case FindUserIsFetching_Toggle: {\r\n            return {...state, FindUserIsFetching: action.FindUserIsFetching}\r\n        }\r\n        default :\r\n            return state\r\n    }\r\n}\r\nexport const OnFollow = (userID) => {\r\n    return {type: follow, userID: userID}\r\n}\r\nexport const onUnFollow = (userID) => {\r\n    return {type: unfollow, userID: userID}\r\n}\r\nexport const setUsers = (users) => {\r\n    return {type: setusers, users: users}\r\n}\r\nexport const SetCurrentPage = (currentPage) => {\r\n    return {type: Set_Current_Page, currentPage: currentPage}\r\n}\r\nexport const SetTotalCountOfUsers = (totalCount) => {\r\n    return {type: Set_Total_Count_Of_Users, totalUsersCount: totalCount}\r\n}\r\nexport const ToggleIsFetching = (IsFetching) => {\r\n    return {type: IsFetching_Toggle, IsFetching}\r\n}\r\n\r\nexport const ToggleFindUserIsFetching = (FindUserIsFetching) => {\r\n    return {type: FindUserIsFetching_Toggle, FindUserIsFetching}\r\n}\r\n\r\nexport const ToggleInProcess = (InProgress, UserID) => {\r\n    return {type: IsInProcess_Togle, InProgress, UserID}\r\n}\r\n\r\nexport const ChangePortionSize = (value) => {\r\n    return {type: Portion_Size_Changer, PortionSizeChangingValue: value}\r\n}\r\nexport const SetFoundedUser = (NewFoundedUser) => {\r\n    return {type: Set_Founded_User, NewFoundedUser}\r\n}\r\n\r\nexport const getUsersThunk = (currentPage, pageSize) => async (dispatch) => {\r\n    dispatch(ToggleIsFetching(true))\r\n    const data = await API.getUsers(currentPage, pageSize)\r\n    dispatch(ToggleIsFetching(false))\r\n    dispatch(setUsers(data.items))\r\n    dispatch(SetTotalCountOfUsers(data.totalCount))\r\n}\r\n\r\nexport const unfollowThunk = (userID) => async (dispatch) => {\r\n    dispatch(ToggleInProcess(true, userID))\r\n    const data = await API.DelSub(userID)\r\n    if (data.resultCode == 0) {\r\n        dispatch(onUnFollow(userID))\r\n    }\r\n    dispatch(ToggleInProcess(false, userID))\r\n}\r\n\r\nexport const followThunk = (userID) => async (dispatch) => {\r\n    dispatch(ToggleInProcess(true, userID))\r\n    const data = await API.AddSub(userID)\r\n    if (data.resultCode == 0) {\r\n        dispatch(OnFollow(userID))\r\n    }\r\n    dispatch(ToggleInProcess(false, userID))\r\n}\r\n\r\nexport const FindUserThunk = (UserName) => async (dispatch) => {\r\n    dispatch(ToggleFindUserIsFetching(true))\r\n    const data = await API.FindUser(UserName)\r\n    dispatch(ToggleFindUserIsFetching(false))\r\n    if (!data.data.error) {\r\n        dispatch(SetFoundedUser(data.data))\r\n    } else {\r\n        dispatch(stopSubmit(\"FindUser\", {_error: data.data.error.messages[0]}))\r\n    }\r\n}\r\n\r\nexport default UsersReducer"]},"metadata":{},"sourceType":"module"}