{"ast":null,"code":"import _slicedToArray from \"H:\\\\js_projects\\\\1\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"H:\\\\js_projects\\\\1\\\\my-app\\\\src\\\\components\\\\ToDoLists\\\\ToDoListTasks\\\\TaskDetails.jsx\";\nimport React, { useState } from \"react\";\nimport ts from \"./Tasks.module.css\";\nimport TaskShowDetailsIcon from \"./TaskShowDetailsIcon\";\nimport TaskHideDetailsIcon from \"./TaskHideDetails\";\n\nconst TaskDetails = props => {\n  let _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      ShowDetails = _useState2[0],\n      SetShowDetails = _useState2[1];\n\n  const DateTransform = date => {\n    if (date) {\n      return date.split(\"T\")[0].split().join().split(\"-\").reverse();\n    }\n  };\n\n  let AddedDate = DateTransform(props.CurrentTask.startDate);\n  let DeadLineDate = DateTransform(props.CurrentTask.deadline);\n\n  const ShowDetailsON = () => {\n    SetShowDetails(true);\n    props.ShowButtonBlockedON();\n  };\n\n  const ShowDetailsOFF = () => {\n    SetShowDetails(false);\n    props.ShowButtonBlockedOFF();\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, ShowDetails ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: ts.detailsWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: ts.startDate,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, props.CurrentTask.startDate ? \"start date :\" + AddedDate[0] + \"/\" + AddedDate[1] + \"/\" + AddedDate[2] : \"no started date data\"), React.createElement(\"div\", {\n    className: ts.deadline,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, props.CurrentTask.deadline ? \"deadline :\" + DeadLineDate[0] + \"/\" + DeadLineDate[1] + \"/\" + DeadLineDate[2] : \"no deadline data\")), React.createElement(\"div\", {\n    className: ts.description,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"description :\", React.createElement(\"div\", {\n    className: ts.descriptionText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, props.CurrentTask.description ? props.CurrentTask.description : \"no description data\")), React.createElement(\"div\", {\n    className: ts.DetailsButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(TaskHideDetailsIcon, {\n    HandleOnClick: ShowDetailsOFF,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }))) : React.createElement(\"div\", {\n    className: ts.DetailsButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(TaskShowDetailsIcon, {\n    ShowButtonBlocked: props.ShowButtonBlocked,\n    HandleOnClick: ShowDetailsON,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  })));\n};\n\nexport default TaskDetails;","map":{"version":3,"sources":["H:\\js_projects\\1\\my-app\\src\\components\\ToDoLists\\ToDoListTasks\\TaskDetails.jsx"],"names":["React","useState","ts","TaskShowDetailsIcon","TaskHideDetailsIcon","TaskDetails","props","ShowDetails","SetShowDetails","DateTransform","date","split","join","reverse","AddedDate","CurrentTask","startDate","DeadLineDate","deadline","ShowDetailsON","ShowButtonBlockedON","ShowDetailsOFF","ShowButtonBlockedOFF","detailsWrapper","description","descriptionText","DetailsButton","ShowButtonBlocked"],"mappings":"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","sourcesContent":["import React,{useState} from \"react\"\r\nimport ts from \"./Tasks.module.css\";\r\nimport TaskShowDetailsIcon from \"./TaskShowDetailsIcon\";\r\nimport TaskHideDetailsIcon from \"./TaskHideDetails\";\r\n\r\n\r\n\r\n\r\nconst TaskDetails = (props) => {\r\n\r\n    let [ShowDetails, SetShowDetails] = useState(false)\r\n\r\nconst DateTransform = (date) =>{\r\n        if(date ) {\r\n            return date.split(\"T\")[0].split().join().split(\"-\").reverse()\r\n        }\r\n    }\r\n    let AddedDate = DateTransform(props.CurrentTask.startDate)\r\n    let DeadLineDate = DateTransform(props.CurrentTask.deadline)\r\n\r\n    const ShowDetailsON = () => {\r\n        SetShowDetails(true)\r\n        props.ShowButtonBlockedON()\r\n    }\r\n\r\n    const ShowDetailsOFF = () => {\r\n        SetShowDetails(false)\r\n        props.ShowButtonBlockedOFF()\r\n    }\r\n    return <div >\r\n\r\n        {ShowDetails ?\r\n            <div>\r\n            <div className={ts.detailsWrapper}>\r\n\r\n                <div className={ts.startDate}>\r\n                    {props.CurrentTask.startDate ?\r\n                        \"start date :\" + AddedDate[0]+\"/\"+AddedDate[1]+\"/\"+AddedDate[2]\r\n                        : \"no started date data\"\r\n                    }\r\n                </div>\r\n\r\n                <div className={ts.deadline}>\r\n\r\n                    {props.CurrentTask.deadline ?\r\n                        \"deadline :\"  + DeadLineDate[0]+\"/\"+DeadLineDate[1]+\"/\"+DeadLineDate[2]\r\n                        : \"no deadline data\"\r\n                    }\r\n\r\n                </div>\r\n            </div>\r\n                <div className={ts.description}>\r\n                    description :\r\n                    <div className={ts.descriptionText}>\r\n                        {props.CurrentTask.description?\r\n                        props.CurrentTask.description:\r\n                        \"no description data\"}\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <div className={ts.DetailsButton}>\r\n                    <TaskHideDetailsIcon HandleOnClick={ShowDetailsOFF} />\r\n                </div>\r\n            </div>\r\n            :\r\n\r\n            <div className={ts.DetailsButton}>\r\n                <TaskShowDetailsIcon ShowButtonBlocked={props.ShowButtonBlocked}\r\n                                     HandleOnClick={ShowDetailsON}/>\r\n            </div>\r\n        }\r\n\r\n    </div>\r\n}\r\n\r\nexport default TaskDetails"]},"metadata":{},"sourceType":"module"}