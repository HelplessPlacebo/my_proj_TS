{"ast":null,"code":"import _objectSpread from \"H:\\\\js_projects\\\\1\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { API } from \"../API/requests\";\nimport { stopSubmit } from \"redux-form\";\nconst SET_TO_DO_LISTS = 'ToDoLists/SET_TO_DO_LISTS';\nconst ADD_NEW_TO_DO_LISTS = 'ToDoLists/ADD_NEW_TO_DO_LISTS';\nlet DefaultState = {\n  ToDoLists: null\n};\n\nconst ToDoListsReducer = (state = DefaultState, action) => {\n  switch (action.type) {\n    case SET_TO_DO_LISTS:\n      {\n        return _objectSpread({}, state, {\n          ToDoLists: action.IsFetching\n        });\n      }\n\n    case ADD_NEW_TO_DO_LISTS:\n      {\n        return _objectSpread({}, state, {\n          IsFetching: action.IsFetching\n        });\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const AddNewToDoLists = title => {\n  return {\n    type: ADD_NEW_TO_DO_LISTS,\n    title\n  };\n};\nexport const SetToDoLists = ToDoLists => {\n  return {\n    type: SET_TO_DO_LISTS,\n    ToDoLists\n  };\n};\nexport const LogOutThunk = () => async dispatch => {\n  const data = await API.LogOut();\n\n  if (data.resultCode === 0) {\n    dispatch(SetAuthUser(null, null, null, false));\n  }\n};\nexport default ToDoListsReducer;","map":{"version":3,"sources":["H:\\js_projects\\1\\my-app\\src\\data\\ToDoListsReducer.js"],"names":["API","stopSubmit","SET_TO_DO_LISTS","ADD_NEW_TO_DO_LISTS","DefaultState","ToDoLists","ToDoListsReducer","state","action","type","IsFetching","AddNewToDoLists","title","SetToDoLists","LogOutThunk","dispatch","data","LogOut","resultCode","SetAuthUser"],"mappings":";AAAA,SAAQA,GAAR,QAAkB,iBAAlB;AACA,SAAQC,UAAR,QAAyB,YAAzB;AAEA,MAAMC,eAAe,GAAG,2BAAxB;AACA,MAAMC,mBAAmB,GAAG,+BAA5B;AAGA,IAAIC,YAAY,GAAG;AACXC,EAAAA,SAAS,EAAE;AADA,CAAnB;;AAIA,MAAMC,gBAAgB,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AACvD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKP,eAAL;AAAsB;AAClB,iCAAWK,KAAX;AAAkBF,UAAAA,SAAS,EAAEG,MAAM,CAACE;AAApC;AACH;;AACD,SAAKP,mBAAL;AAA0B;AACtB,iCAAWI,KAAX;AAAkBG,UAAAA,UAAU,EAAEF,MAAM,CAACE;AAArC;AACH;;AACD;AACI,aAAOH,KAAP;AARR;AAUH,CAXD;;AAcA,OAAO,MAAMI,eAAe,GAAIC,KAAD,IAAW;AACtC,SAAO;AAACH,IAAAA,IAAI,EAAEN,mBAAP;AAA4BS,IAAAA;AAA5B,GAAP;AACH,CAFM;AAGP,OAAO,MAAMC,YAAY,GAAIR,SAAD,IAAe;AACvC,SAAO;AAACI,IAAAA,IAAI,EAAEP,eAAP;AAAwBG,IAAAA;AAAxB,GAAP;AACH,CAFM;AAKP,OAAO,MAAMS,WAAW,GAAG,MAAM,MAAOC,QAAP,IAAoB;AACjD,QAAMC,IAAI,GAAG,MAAMhB,GAAG,CAACiB,MAAJ,EAAnB;;AACA,MAAID,IAAI,CAACE,UAAL,KAAoB,CAAxB,EAA2B;AACvBH,IAAAA,QAAQ,CAACI,WAAW,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,KAAnB,CAAZ,CAAR;AACH;AACJ,CALM;AASP,eAAeb,gBAAf","sourcesContent":["import {API} from \"../API/requests\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_TO_DO_LISTS = 'ToDoLists/SET_TO_DO_LISTS'\r\nconst ADD_NEW_TO_DO_LISTS = 'ToDoLists/ADD_NEW_TO_DO_LISTS'\r\n\r\n\r\nlet DefaultState = {\r\n        ToDoLists: null\r\n}\r\n\r\nconst ToDoListsReducer = (state = DefaultState, action) => {\r\n    switch (action.type) {\r\n        case SET_TO_DO_LISTS: {\r\n            return {...state, ToDoLists: action.IsFetching}\r\n        }\r\n        case ADD_NEW_TO_DO_LISTS: {\r\n            return {...state, IsFetching: action.IsFetching}\r\n        }\r\n        default :\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const AddNewToDoLists = (title) => {\r\n    return {type: ADD_NEW_TO_DO_LISTS, title}\r\n}\r\nexport const SetToDoLists = (ToDoLists) => {\r\n    return {type: SET_TO_DO_LISTS, ToDoLists}\r\n}\r\n\r\n\r\nexport const LogOutThunk = () => async (dispatch) => {\r\n    const data = await API.LogOut()\r\n    if (data.resultCode === 0) {\r\n        dispatch(SetAuthUser(null, null, null, false))\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default ToDoListsReducer"]},"metadata":{},"sourceType":"module"}