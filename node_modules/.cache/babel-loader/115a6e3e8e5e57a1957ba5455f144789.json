{"ast":null,"code":"import _slicedToArray from \"H:\\\\js_projects\\\\1\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"H:\\\\js_projects\\\\1\\\\my-app\\\\src\\\\components\\\\ToDoLists\\\\ToDoList.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport TDLS from \"./ToDoLists.module.css\";\nimport ToDoListMenuIcon from \"./ListMenu\";\nimport SaveButton from \"./SaveButton\";\nimport GoBackButton from \"./DeleteButton\";\nimport TitleChangingField from \"./TitleChangeField\";\nimport AddNewTask from \"./AddNewTask/AddNewTask\";\n\nconst ToDoList = props => {\n  let _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      EditTitleMode = _useState2[0],\n      SetEditTitleMode = _useState2[1];\n\n  let _useState3 = useState(props.title),\n      _useState4 = _slicedToArray(_useState3, 2),\n      CurrentToDoListTitle = _useState4[0],\n      SetToDoListTitle = _useState4[1];\n\n  const EditTitleModeON = () => {\n    SetEditTitleMode(true);\n  };\n\n  const EditTitleModeOFF = () => {\n    SetEditTitleMode(false);\n  };\n\n  const OnToDoListTitleChanging = el => {\n    SetToDoListTitle(el.currentTarget.value);\n  };\n\n  useEffect(() => {\n    SetToDoListTitle(props.title);\n  }, [props.title]);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, !EditTitleMode ? React.createElement(\"div\", {\n    className: TDLS.ToDolistsWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(ToDoListMenuIcon, {\n    ListID: props.ListID,\n    EditTitleModeON: EditTitleModeON,\n    Del: props.DeleteToDoListThunk,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: TDLS.ToDoListTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, props.title)) : React.createElement(\"div\", {\n    className: TDLS.ToDolistsChanchingWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(SaveButton, {\n    ListID: props.ListID,\n    ChangeToDoListTitleThunk: props.ChangeToDoListTitleThunk,\n    EditTitleModeOFF: EditTitleModeOFF,\n    CurrentToDoListTitle: CurrentToDoListTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), React.createElement(GoBackButton, {\n    EditTitleModeOFF: EditTitleModeOFF,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: TDLS.ToDoListChangingInput,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(TitleChangingField, {\n    OnToDoListTitleChanging: OnToDoListTitleChanging,\n    CurrentToDoListTitle: CurrentToDoListTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }))), React.createElement(AddNewTask, {\n    AddNewTaskThunk: props.AddNewTaskThunk,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }));\n};\n\nexport default ToDoList;","map":{"version":3,"sources":["H:\\js_projects\\1\\my-app\\src\\components\\ToDoLists\\ToDoList.jsx"],"names":["React","useState","useEffect","TDLS","ToDoListMenuIcon","SaveButton","GoBackButton","TitleChangingField","AddNewTask","ToDoList","props","EditTitleMode","SetEditTitleMode","title","CurrentToDoListTitle","SetToDoListTitle","EditTitleModeON","EditTitleModeOFF","OnToDoListTitleChanging","el","currentTarget","value","ToDolistsWrapper","ListID","DeleteToDoListThunk","ToDoListTitle","ToDolistsChanchingWrapper","ChangeToDoListTitleThunk","ToDoListChangingInput","AddNewTaskThunk"],"mappings":";;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,gBAAP,MAA6B,YAA7B;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,kBAAP,MAA+B,oBAA/B;AACA,OAAOC,UAAP,MAAuB,yBAAvB;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAU;AAAA,kBAEqBT,QAAQ,CAAC,KAAD,CAF7B;AAAA;AAAA,MAEdU,aAFc;AAAA,MAECC,gBAFD;;AAAA,mBAG0BX,QAAQ,CAACS,KAAK,CAACG,KAAP,CAHlC;AAAA;AAAA,MAGdC,oBAHc;AAAA,MAGOC,gBAHP;;AAKnB,QAAMC,eAAe,GAAG,MAAI;AACxBJ,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACH,GAFD;;AAGA,QAAMK,gBAAgB,GAAG,MAAI;AACzBL,IAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACH,GAFD;;AAIA,QAAMM,uBAAuB,GAAIC,EAAD,IAAO;AACnCJ,IAAAA,gBAAgB,CAACI,EAAE,CAACC,aAAH,CAAiBC,KAAlB,CAAhB;AACH,GAFD;;AAIJnB,EAAAA,SAAS,CAAC,MAAM;AACZa,IAAAA,gBAAgB,CAACL,KAAK,CAACG,KAAP,CAAhB;AACC,GAFI,EAEF,CAACH,KAAK,CAACG,KAAP,CAFE,CAAT;AAKA,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACF,CAACF,aAAD,GACG;AAAK,IAAA,SAAS,EAAER,IAAI,CAACmB,gBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI,oBAAC,gBAAD;AAAkB,IAAA,MAAM,EAAEZ,KAAK,CAACa,MAAhC;AACkB,IAAA,eAAe,EAAEP,eADnC;AAEkB,IAAA,GAAG,EAAEN,KAAK,CAACc,mBAF7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAOI;AAAK,IAAA,SAAS,EAAErB,IAAI,CAACsB,aAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKf,KAAK,CAACG,KADX,CAPJ,CADH,GAaG;AAAK,IAAA,SAAS,EAAEV,IAAI,CAACuB,yBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,UAAD;AAAY,IAAA,MAAM,EAAEhB,KAAK,CAACa,MAA1B;AAAkC,IAAA,wBAAwB,EAAEb,KAAK,CAACiB,wBAAlE;AACY,IAAA,gBAAgB,EAAEV,gBAD9B;AACgD,IAAA,oBAAoB,EAAEH,oBADtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAGgB,oBAAC,YAAD;AAAc,IAAA,gBAAgB,EAAEG,gBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHhB,CADJ,EAMI;AAAK,IAAA,SAAS,EAAEd,IAAI,CAACyB,qBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,kBAAD;AAAoB,IAAA,uBAAuB,EAAEV,uBAA7C;AACoB,IAAA,oBAAoB,EAAEJ,oBAD1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CANJ,CAdD,EA4BC,oBAAC,UAAD;AAAY,IAAA,eAAe,EAAEJ,KAAK,CAACmB,eAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA5BD,CAAP;AAiCH,CAtDD;;AAuDA,eAAepB,QAAf","sourcesContent":["import React,{useState,useEffect} from \"react\"\r\nimport TDLS from \"./ToDoLists.module.css\";\r\nimport ToDoListMenuIcon from \"./ListMenu\";\r\nimport SaveButton from \"./SaveButton\";\r\nimport GoBackButton from \"./DeleteButton\";\r\nimport TitleChangingField from \"./TitleChangeField\";\r\nimport AddNewTask from \"./AddNewTask/AddNewTask\";\r\n\r\nconst ToDoList = (props) =>{\r\n\r\n        let [EditTitleMode, SetEditTitleMode] = useState(false)\r\n        let [CurrentToDoListTitle,SetToDoListTitle] =useState(props.title)\r\n\r\n        const EditTitleModeON = ()=>{\r\n            SetEditTitleMode(true)\r\n        }\r\n        const EditTitleModeOFF = ()=>{\r\n            SetEditTitleMode(false)\r\n        }\r\n\r\n        const OnToDoListTitleChanging = (el) =>{\r\n            SetToDoListTitle(el.currentTarget.value)\r\n        }\r\n\r\n    useEffect(() => {\r\n        SetToDoListTitle(props.title)\r\n        }, [props.title]\r\n    )\r\n\r\n    return <div>\r\n        {!EditTitleMode ?\r\n            <div className={TDLS.ToDolistsWrapper}>\r\n\r\n                <ToDoListMenuIcon ListID={props.ListID}\r\n                                  EditTitleModeON={EditTitleModeON}\r\n                                  Del={props.DeleteToDoListThunk}\r\n                />\r\n\r\n                <div className={TDLS.ToDoListTitle}>\r\n                    {props.title}\r\n                </div>\r\n            </div>\r\n            :\r\n            <div className={TDLS.ToDolistsChanchingWrapper}>\r\n                <div>\r\n                <SaveButton ListID={props.ListID} ChangeToDoListTitleThunk={props.ChangeToDoListTitleThunk}\r\n                            EditTitleModeOFF={EditTitleModeOFF} CurrentToDoListTitle={CurrentToDoListTitle} />\r\n                                <GoBackButton EditTitleModeOFF={EditTitleModeOFF}/>\r\n            </div>\r\n                <div className={TDLS.ToDoListChangingInput}>\r\n                    <TitleChangingField OnToDoListTitleChanging={OnToDoListTitleChanging}\r\n                                        CurrentToDoListTitle={CurrentToDoListTitle}/>\r\n                </div>\r\n\r\n            </div>\r\n        }\r\n        {\r\n            <AddNewTask AddNewTaskThunk={props.AddNewTaskThunk}/>\r\n        }\r\n\r\n\r\n    </div>\r\n}\r\nexport default ToDoList"]},"metadata":{},"sourceType":"module"}