{"ast":null,"code":"var _jsxFileName = \"H:\\\\js_projects\\\\1\\\\my-app\\\\src\\\\components\\\\Dialogs\\\\Dialogs.jsx\";\nimport React from 'react';\nimport d from './Dialogs.module.css';\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport Message from \"./Message/Message\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { required, MaxLengthCreator } from \"../utils/validators\";\nimport { TextArea } from \"../assetss/common/ValidatorsComponents/ElementsValidators\";\nimport Dialog from \"./Dialog\";\nconst maxValue300 = MaxLengthCreator(300);\n\nconst DialogsForm = props => {\n  /* let dialogsElement = props.MessagesData.users.map(d => <DialogItem key={d.id} name={d.name} id={d.id}\r\n                                                                       avatars={props.MessagesData.avatars}/>);\r\n    let messagesElements = props.MessagesData.messages.map(m => < Message key={m.id} message={m.message} id={m.id}/>);*/\n  return React.createElement(\"form\", {\n    onSubmit: props.handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: d.dialogs,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: d.dialogsItems,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: d.messages,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(Field, {\n    name: \"MessageTextArea\",\n    component: TextArea,\n    placeholder: \"Enter your message here\",\n    validate: [required, maxValue300],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: d.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \" send message\"))))));\n};\n\nconst ReduxDialogsForm = reduxForm({\n  form: 'dialogs'\n})(DialogsForm);\n\nconst Dialogs = props => {\n  const SendNewMessage = Formdata => {\n    props.SendNewMessageThunk(1671, Formdata.MessageTextArea);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: d.header,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"My messages\"), React.createElement(Dialog, {\n    AddDialogs: props.MessagesData.AllDialogs,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), React.createElement(ReduxDialogsForm, Object.assign({\n    onSubmit: SendNewMessage\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  })));\n};\n\nexport default Dialogs;","map":{"version":3,"sources":["H:\\js_projects\\1\\my-app\\src\\components\\Dialogs\\Dialogs.jsx"],"names":["React","d","DialogItem","Message","Field","reduxForm","required","MaxLengthCreator","TextArea","Dialog","maxValue300","DialogsForm","props","handleSubmit","dialogs","dialogsItems","messages","button","ReduxDialogsForm","form","Dialogs","SendNewMessage","Formdata","SendNewMessageThunk","MessageTextArea","header","MessagesData","AllDialogs"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,sBAAd;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAAQC,KAAR,EAAeC,SAAf,QAA+B,YAA/B;AACA,SAAQC,QAAR,EAAkBC,gBAAlB,QAAyC,qBAAzC;AACA,SAAQC,QAAR,QAAuB,2DAAvB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAEA,MAAMC,WAAW,GAAGH,gBAAgB,CAAC,GAAD,CAApC;;AAEA,MAAMI,WAAW,GAAIC,KAAD,IAAW;AAE7B;;;AAIE,SACI;AAAM,IAAA,QAAQ,EAAEA,KAAK,CAACC,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAEZ,CAAC,CAACa,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI;AAAK,IAAA,SAAS,EAAEb,CAAC,CAACc,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAMI;AAAK,IAAA,SAAS,EAAEd,CAAC,CAACe,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAE,iBAAb;AACO,IAAA,SAAS,EAAER,QADlB;AAEO,IAAA,WAAW,EAAE,yBAFpB;AAGO,IAAA,QAAQ,EAAE,CAACF,QAAD,EAAWI,WAAX,CAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAQ,IAAA,SAAS,EAAET,CAAC,CAACgB,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,CAPJ,CAFJ,CANJ,CADJ,CADJ;AAyBH,CA/BD;;AAiCA,MAAMC,gBAAgB,GAAGb,SAAS,CAAC;AAACc,EAAAA,IAAI,EAAE;AAAP,CAAD,CAAT,CAA6BR,WAA7B,CAAzB;;AAGA,MAAMS,OAAO,GAAIR,KAAD,IAAW;AAGvB,QAAMS,cAAc,GAAIC,QAAD,IAAc;AACnCV,IAAAA,KAAK,CAACW,mBAAN,CAA0B,IAA1B,EAA+BD,QAAQ,CAACE,eAAxC;AACD,GAFD;;AAIA,SAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAI,IAAA,SAAS,EAAEvB,CAAC,CAACwB,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADA,EAIJ,oBAAC,MAAD;AAAQ,IAAA,UAAU,EAAEb,KAAK,CAACc,YAAN,CAAmBC,UAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJI,EAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXA,EAmBA,oBAAC,gBAAD;AAAkB,IAAA,QAAQ,EAAEN;AAA5B,KAAgDT,KAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAnBA,CAAR;AAsBH,CA7BD;;AA8BA,eAAeQ,OAAf","sourcesContent":["import React from 'react'\r\nimport d from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {required, MaxLengthCreator} from \"../utils/validators\"\r\nimport {TextArea} from \"../assetss/common/ValidatorsComponents/ElementsValidators\"\r\nimport Dialog from \"./Dialog\";\r\n\r\nconst maxValue300 = MaxLengthCreator(300)\r\n\r\nconst DialogsForm = (props) => {\r\n\r\n  /* let dialogsElement = props.MessagesData.users.map(d => <DialogItem key={d.id} name={d.name} id={d.id}\r\n                                                                       avatars={props.MessagesData.avatars}/>);\r\n    let messagesElements = props.MessagesData.messages.map(m => < Message key={m.id} message={m.message} id={m.id}/>);*/\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div className={d.dialogs}>\r\n\r\n                <div className={d.dialogsItems}>\r\n                {/*    {dialogsElement}*/}\r\n                </div>\r\n\r\n                <div className={d.messages}>\r\n                  {/*  {messagesElements}*/}\r\n                    <div>\r\n                        <div>\r\n                            <Field name={\"MessageTextArea\"}\r\n                                   component={TextArea}\r\n                                   placeholder={\"Enter your message here\"}\r\n                                   validate={[required, maxValue300]}/>\r\n                        </div>\r\n                        <div>\r\n                            <button className={d.button}> send message</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst ReduxDialogsForm = reduxForm({form: 'dialogs'})(DialogsForm)\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n\r\n    const SendNewMessage = (Formdata) => {\r\n      props.SendNewMessageThunk(1671,Formdata.MessageTextArea)\r\n    }\r\n\r\n    return (<div>\r\n            <h1 className={d.header}>My messages</h1>\r\n\r\n\r\n        <Dialog AddDialogs={props.MessagesData.AllDialogs} />\r\n           {/* {props.MessagesData.AllDialogs ?\r\n            props.MessagesData.AllDialogs\r\n            : \"now is empty dialogs\"}\r\n            создать компоненты для отрисовки диалогов и сообщений\r\n            */}\r\n\r\n            <div>\r\n            {/*    {\r\n                    props.MessagesData.DialogsMessages ?\r\n                        props.MessagesData.DialogsMessages\r\n                        : \"you have not messages\"\r\n                }*/}\r\n            </div>\r\n\r\n            <ReduxDialogsForm onSubmit={SendNewMessage} {...props} />\r\n        </div>\r\n    )\r\n}\r\nexport default Dialogs;"]},"metadata":{},"sourceType":"module"}